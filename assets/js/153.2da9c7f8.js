(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{467:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes高级运维"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes高级运维"}},[t._v("#")]),t._v(" Kubernetes高级运维")]),t._v(" "),s("h2",{attrs:{id:"使用kubeadm进行证书管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用kubeadm进行证书管理"}},[t._v("#")]),t._v(" 使用kubeadm进行证书管理")]),t._v(" "),s("p",[t._v("由 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubeadm"),s("OutboundLink")],1),t._v(" 生成的客户端证书在 1 年后到期。 本页说明如何使用 kubeadm 管理证书续订。")]),t._v(" "),s("h3",{attrs:{id:"使用自定义的证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用自定义的证书"}},[t._v("#")]),t._v(" 使用自定义的证书")]),t._v(" "),s("ul",[s("li",[t._v("默认情况下, kubeadm 会生成运行一个集群所需的全部证书。 你可以通过提供你自己的证书来改变这个行为策略。")]),t._v(" "),s("li",[t._v("如果要这样做, 你必须将证书文件放置在通过 "),s("code",[t._v("--cert-dir")]),t._v(" 命令行参数或者 kubeadm 配置中的 "),s("code",[t._v("CertificatesDir")]),t._v(" 配置项指明的目录中。默认的值是 "),s("code",[t._v("/etc/kubernetes/pki")]),t._v("。")]),t._v(" "),s("li",[t._v("如果在运行 "),s("code",[t._v("kubeadm init")]),t._v(" 之前存在给定的证书和私钥对，kubeadm 将不会重写它们。 例如，这意味着您可以将现有的 CA 复制到 "),s("code",[t._v("/etc/kubernetes/pki/ca.crt")]),t._v(" 和 "),s("code",[t._v("/etc/kubernetes/pki/ca.key")]),t._v(" 中，而 kubeadm 将使用此 CA 对其余证书进行签名。")])]),t._v(" "),s("h3",{attrs:{id:"外部-ca-模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外部-ca-模式"}},[t._v("#")]),t._v(" 外部 CA 模式")]),t._v(" "),s("ul",[s("li",[t._v("只提供了 "),s("code",[t._v("ca.crt")]),t._v(" 文件但是不提供 "),s("code",[t._v("ca.key")]),t._v(' 文件也是可以的 （这只对 CA 根证书可用，其它证书不可用）。 如果所有的其它证书和 kubeconfig 文件已就绪，kubeadm 检测到满足以上条件就会激活 "外部 CA" 模式。kubeadm 将会在没有 CA 密钥文件的情况下继续执行。')]),t._v(" "),s("li",[t._v("否则, kubeadm 将独立运行 controller-manager，附加一个 "),s("code",[t._v("--controllers=csrsigner")]),t._v(" 的参数，并且指明 CA 证书和密钥。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/setup/best-practices/certificates/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PKI 证书和要求"),s("OutboundLink")],1),t._v("包括集群使用外部 CA 的设置指南。")])]),t._v(" "),s("h3",{attrs:{id:"检查证书是否过期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查证书是否过期"}},[t._v("#")]),t._v(" 检查证书是否过期")]),t._v(" "),s("ul",[s("li",[t._v("你可以使用 "),s("code",[t._v("check-expiration")]),t._v(" 子命令来检查证书何时过期")]),t._v(" "),s("li",[t._v("该命令显示 "),s("code",[t._v("/etc/kubernetes/pki")]),t._v(" 文件夹中的客户端证书以及 kubeadm（"),s("code",[t._v("admin.conf")]),t._v(", "),s("code",[t._v("controller-manager.conf")]),t._v(" 和 "),s("code",[t._v("scheduler.conf")]),t._v("） 使用的 KUBECONFIG 文件中嵌入的客户端证书的到期时间/剩余时间。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubeadm certs check-expiration")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("check-expiration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Reading configuration from the cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("check-expiration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" FYI: You can "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("look")]),t._v(" at this config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubectl -n kube-system get cm kubeadm-config -o yaml'")]),t._v("\n\nCERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED\nadmin.conf                 Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d                                    no      \napiserver                  Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            ca                      no      \napiserver-etcd-client      Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            etcd-ca                 no      \napiserver-kubelet-client   Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            ca                      no      \ncontroller-manager.conf    Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d                                    no      \netcd-healthcheck-client    Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            etcd-ca                 no      \netcd-peer                  Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            etcd-ca                 no      \netcd-server                Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            etcd-ca                 no      \nfront-proxy-client         Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d            front-proxy-ca          no      \nscheduler.conf             Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2022")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   363d                                    no      \n\nCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED\nca                      Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2031")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   9y              no      \netcd-ca                 Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2031")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   9y              no      \nfront-proxy-ca          Nov "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2031")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(":55 UTC   9y              no      \n")])])]),s("h3",{attrs:{id:"自动更新证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动更新证书"}},[t._v("#")]),t._v(" 自动更新证书")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("kubeadm")]),t._v(" 会在控制面 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/",target:"_blank",rel:"noopener noreferrer"}},[t._v("升级"),s("OutboundLink")],1),t._v(" 的时候更新所有证书。")]),t._v(" "),s("li",[t._v("这个功能旨在解决最简单的用例；如果你对此类证书的更新没有特殊要求，并且定期执行Kubernetes版本升级（每次升级之间的间隔时间少于1年），kubeadm将确保你的集群保持最新状态并保持合理的安全性。")]),t._v(" "),s("li",[s("strong",[t._v("说明：")]),t._v(" 最佳的做法是经常升级集群以确保安全。")]),t._v(" "),s("li",[t._v("如果你对证书更新有更复杂的需求，则可通过将 "),s("code",[t._v("--certificate-renewal=false")]),t._v(" 传递给 "),s("code",[t._v("kubeadm upgrade apply")]),t._v(" 或者 "),s("code",[t._v("kubeadm upgrade node")]),t._v("，从而选择不采用默认行为。")])]),t._v(" "),s("h3",{attrs:{id:"手动更新证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动更新证书"}},[t._v("#")]),t._v(" 手动更新证书")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("你能随时通过 "),s("code",[t._v("kubeadm certs renew")]),t._v(" 命令手动更新你的证书。")])]),t._v(" "),s("li",[s("p",[t._v("此命令用 CA （或者 front-proxy-CA ）证书和存储在 "),s("code",[t._v("/etc/kubernetes/pki")]),t._v(" 中的密钥执行更新。")])]),t._v(" "),s("li",[s("p",[t._v("执行完此命令之后你需要重启控制面 Pods。因为动态证书重载目前还不被所有组件和证书支持，所有这项操作是必须的。 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/static-pod/",target:"_blank",rel:"noopener noreferrer"}},[t._v("静态 Pods"),s("OutboundLink")],1),t._v(" 是被本地 kubelet 而不是 API Server 管理， 所以 kubectl 不能用来删除或重启他们。 要重启静态 Pod 你可以临时将清单文件从 "),s("code",[t._v("/etc/kubernetes/manifests/")]),t._v(" 移除并等待 20 秒 （参考 "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KubeletConfiguration 结构"),s("OutboundLink")],1),t._v(" 中的"),s("code",[t._v("fileCheckFrequency")]),t._v(" 值）。 如果 Pod 不在清单目录里，kubelet将会终止它。 在另一个 "),s("code",[t._v("fileCheckFrequency")]),t._v(" 周期之后你可以将文件移回去，为了组件可以完成 kubelet 将重新创建 Pod 和证书更新。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("警告：")]),t._v(" 如果你运行了一个 HA 集群，这个命令需要在所有控制面板节点上执行。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("说明：")]),t._v(" "),s("code",[t._v("certs renew")]),t._v(" 使用现有的证书作为属性 (Common Name、Organization、SAN 等) 的权威来源， 而不是 kubeadm-config ConfigMap 。强烈建议使它们保持同步。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("kubeadm certs renew")]),t._v("提供以下选项：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Kubernetes 证书通常在一年后到期。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("--csr-only")]),t._v(" 可用于经过一个外部 CA 生成的证书签名请求来更新证书（无需实际替换更新证书）。")])]),t._v(" "),s("li",[s("p",[t._v("可以更新单个证书而不是全部证书。")])])])])]),t._v(" "),s("h2",{attrs:{id:"证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#证书"}},[t._v("#")]),t._v(" 证书")]),t._v(" "),s("p",[t._v("在使用客户端证书认证的场景下，你可以通过 "),s("code",[t._v("easyrsa")]),t._v("、"),s("code",[t._v("openssl")]),t._v(" 或 "),s("code",[t._v("cfssl")]),t._v(" 等工具以手工方式生成证书。")]),t._v(" "),s("h3",{attrs:{id:"cfssl方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cfssl方式"}},[t._v("#")]),t._v(" cfssl方式")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("cfssl下载地址")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("R1.2\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cfssl,cfssljson,cfssl-certinfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://pkg.cfssl.org/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${VERSION}")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${i}")]),t._v("_linux-amd64 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-O")]),t._v(" /usr/local/bin/"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${i}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成CA配置文件")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("mkdir ssl && cd ssl\ncfssl print-defaults config > config.json\ncfssl print-defaults csr > csr.json\ncat > ca-config.json <<EOF\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"signing"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expiry"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"87600h"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"profiles"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"kubernetes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"usages"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"signing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key encipherment"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server auth"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client auth"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"expiry"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"87600h"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成CA签名配置文件")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("cat > ca-csr.json << EOF\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"algo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ST"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beijing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"L"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"O"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k8s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OU"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成私钥和证书")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("cfssl gencert "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-initca")]),t._v(" ca-csr.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cfssljson "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-bare")]),t._v(" ca\n")])])]),s("ul",[s("li",[s("strong",[t._v("创建一个用于生成API Server的密钥和证书的JSON配置文件")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("cat > kubernetes-csr.json <<EOF\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hosts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<MASTER_IP>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<MASTER_CLUSTER_IP>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes.default"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes.default.svc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes.default.svc.cluster"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes.default.svc.cluster.local"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"algo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ST"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Beijing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"L"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"O"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k8s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OU"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \nEOF\n#该文件需要包含所有使用该证书的ip和域名列表，包括etcd集群、kubernetes master集群、以及apiserver 集群内部cluster ip。\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成 kubernetes 证书和私钥")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("cfssl gencert "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ca")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ca.pem -ca-key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ca-key.pem "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-config")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ca-config.json "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-profile")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kubernetes kubernetes-csr.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cfssljson "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-bare")]),t._v(" kubernetes\n")])])]),s("ul",[s("li",[s("h6",{attrs:{id:"创建admin证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建admin证书"}},[t._v("#")]),t._v(" 创建admin证书")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("cat > admin-csr.json <<EOF\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hosts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"algo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ST"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"L"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"O"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:masters"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OU"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin\n# 证书O配置为system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("masters 在集群内部cluster-admin的clusterrolebinding将system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("masters组和cluster-admin clusterrole绑定在一起\nCopy\n")])])]),s("ul",[s("li",[s("h6",{attrs:{id:"创建kube-proxy证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建kube-proxy证书"}},[t._v("#")]),t._v(" 创建kube-proxy证书")])])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("cat > kube-proxy-csr.json << EOF\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:kube-proxy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hosts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"algo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rsa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CN"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ST"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"L"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BeiJing"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"O"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k8s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OU"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"System"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nEOF\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes  kube-proxy-csr.json | cfssljson -bare kube-proxy\n# 该证书用户名为system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("kube-proxy，预定义的system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("node-proxier clusterrolebindings将 system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("kube-proxy用户和system"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("node-proxier角色绑定在一起\nCopy\n")])])]),s("ul",[s("li",[s("h6",{attrs:{id:"校验证书信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验证书信息"}},[t._v("#")]),t._v(" 校验证书信息")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("cfssl-certinfo "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cert")]),t._v(" kubernetes.pem\nopenssl x509  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-noout")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-text")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-in")]),t._v("  kubernetes.pem\nCopy\n")])])]),s("ul",[s("li",[s("h6",{attrs:{id:"拷贝证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拷贝证书"}},[t._v("#")]),t._v(" 拷贝证书")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" /etc/kubernetes/ssl/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" *.pem /etc/kubernetes/ssl/\n")])])]),s("h3",{attrs:{id:"easyrsa方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#easyrsa方式"}},[t._v("#")]),t._v(" easyrsa方式")]),t._v(" "),s("p",[s("strong",[t._v("easyrsa")]),t._v(" 支持以手工方式为你的集群生成证书。")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("下载、解压、初始化打过补丁的 easyrsa3。")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@master pod]# curl -O http://172.25.253.144/file/tranning/easy-rsa.tar.gz\n[root@master pod]# tar xzf easy-rsa.tar.gz\n[root@master pod]# cd easy-rsa-master/easyrsa3\n[root@master easyrsa3]# ./easyrsa init-pki\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成新的证书颁发机构（CA）。参数 "),s("code",[t._v("--batch")]),t._v(" 用于设置自动模式； 参数 "),s("code",[t._v("--req-cn")]),t._v(" 用于设置新的根证书的通用名称（CN）。")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@master easyrsa3]# ./easyrsa --batch \"--req-cn=172.25.253.3@`date +%s`\" build-ca nopass\nGenerating a 2048 bit RSA private key\n...+++\n..........+++\nwriting new private key to '/root/pod/easy-rsa-master/easyrsa3/pki/private/ca.key'\n-----\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成服务器证书和秘钥。 参数 "),s("code",[t._v("--subject-alt-name")]),t._v(" 设置API服务器的IP和 DNS 名称。 "),s("code",[t._v("MASTER_CLUSTER_IP")]),t._v(" 用于 API 服务器和控制管理器，通常取 CIDR 的第一个 IP，由 "),s("code",[t._v("--service-cluster-ip-range")]),t._v(" 的参数提供。 参数 "),s("code",[t._v("--days")]),t._v(" 用于设置证书的过期时间。 下面的示例假定你的默认 DNS 域名为 "),s("code",[t._v("cluster.local")]),t._v("。")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master easyrsa3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# ./easyrsa --subject-alt-name="IP:172.25.253.3,"\\')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IP:10.96.0.1,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DNS:kubernetes,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DNS:kubernetes.default,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DNS:kubernetes.default.svc,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DNS:kubernetes.default.svc.cluster,"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DNS:kubernetes.default.svc.cluster.local"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--days")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" build-server-full server nopass\n\nGenerating a "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v(" bit RSA private key\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".+++\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".+++\nwriting new private key to "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/root/pod/easy-rsa-master/easyrsa3/pki/private/server.key'")]),t._v("\n-----\nUsing configuration from /root/pod/easy-rsa-master/easyrsa3/openssl-1.0.cnf   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里有告诉你的证书路径")]),t._v("\nCheck that the request matches the signature\nSignature ok\nThe Subject"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s Distinguished Name is as follows\ncommonName            :ASN.1 12:'")]),t._v("server'\nCertificate is to be certified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("until")]),t._v(" Apr "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":46:17 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2049")]),t._v(" GMT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" days"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nWrite out database with "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" new entries\nData Base Updated\n")])])]),s("ul",[s("li",[s("strong",[t._v("拷贝文件 "),s("code",[t._v("pki/ca.crt")]),t._v("、"),s("code",[t._v("pki/issued/server.crt")]),t._v(" 和 "),s("code",[t._v("pki/private/server.key")]),t._v(" 到你的目录中。")])]),t._v(" "),s("li",[s("strong",[t._v("在 API 服务器的启动参数中添加以下参数：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("--client-ca-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/yourdirectory/ca.crt\n--tls-cert-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/yourdirectory/server.crt\n--tls-private-key-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/yourdirectory/server.key\n")])])]),s("ul",[s("li",[s("strong",[t._v("admin证书")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl genrsa -out admin.key 2048")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# openssl req -new -key admin.key -out admin.csr -subj "/O=system:masters/CN=dmin"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509 -req -set_serial $(date +%s%N) -in admin.csr -CA ca.crt -CAkey ca.key -out admin.crt -days 365 -extensions v3_req -extfile req.conf")]),t._v("\n")])])]),s("h3",{attrs:{id:"openssl方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#openssl方式"}},[t._v("#")]),t._v(" openssl方式")]),t._v(" "),s("p",[s("strong",[t._v("openssl")]),t._v(" 支持以手工方式为你的集群生成证书。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("生成一个 2048 位的 ca.key 文件")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl genrsa -out ca.key 2048")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("在ca.key文件的基础上，生成ca.crt文件（用参数 -days 设置证书有效期）")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# openssl req -x509 -new -nodes -key ca.key -subj "/CN=${MASTER_IP}" -days 10000 -out ca.crt ')]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("生成一个2048位的server.key文件：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl genrsa -out server.key 2048")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("创建一个用于生成证书签名请求（CSR）的配置文件。 保存文件（例如："),s("code",[t._v("csr.conf")]),t._v("）前，记得用真实值替换掉尖括号中的值（例如："),s("code",[t._v("<MASTER_IP>")]),t._v("）。 注意："),s("code",[t._v("MASTER_CLUSTER_IP")]),t._v(" 就像前一小节所述，它的值是 API 服务器的服务集群 IP。 下面的例子假定你的默认 DNS 域名为 "),s("code",[t._v("cluster.local")]),t._v("。")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat csr.conf ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" req "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ndefault_bits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v("\nprompt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" no\ndefault_md "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sha256\nreq_extensions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req_ext\ndistinguished_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dn\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" dn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("country"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nST "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("city"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("organization"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nOU "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("organization unit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nCN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.3\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" req_ext "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nsubjectAltName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @alt_names\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" alt_names "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nDNS.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kubernetes\nDNS.2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kubernetes.default\nDNS.3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kubernetes.default.svc\nDNS.4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kubernetes.default.svc.cluster\nDNS.5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kubernetes.default.svc.cluster.local\nIP.1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.3\nIP.2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.1\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" v3_ext "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("authorityKeyIdentifier")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("keyid,issuer:always\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("basicConstraints")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CA:FALSE\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("keyUsage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("keyEncipherment,dataEncipherment\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("extendedKeyUsage")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("serverAuth,clientAuth\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("subjectAltName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("@alt_names\n")])])]),s("ul",[s("li",[s("strong",[t._v("基于上面的配置文件生成证书签名请求：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl req -new -key server.key -out server.csr -config csr.conf")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("基于 ca.key、ca.key 和 server.csr 等三个文件生成服务端证书：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key \\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-CAcreateserial")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-out")]),t._v(" server.crt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-days")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-extensions")]),t._v(" v3_ext "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-extfile")]),t._v(" csr.conf\n")])])]),s("ul",[s("li",[s("strong",[t._v("查看证书签名请求：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl req  -noout -text -in ./server.csr")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("查看证书：")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509  -noout -text -in ./server.crt")]),t._v("\n")])])]),s("p",[s("strong",[t._v("admin证书")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl genrsa -out admin.key 2048")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# openssl req -new -key admin.key -out admin.csr -subj "/O=system:masters/CN=dmin"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# openssl x509 -req -set_serial $(date +%s%N) -in admin.csr -CA ca.crt -CAkey ca.key -out admin.crt -days 365 -extensions v3_req -extfile req.conf")]),t._v("\n")])])]),s("h2",{attrs:{id:"健康检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#健康检查"}},[t._v("#")]),t._v(" 健康检查")]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"配置存活、就绪和启动探测器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置存活、就绪和启动探测器"}},[t._v("#")]),t._v(" 配置存活、就绪和启动探测器")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kubelet/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubelet"),s("OutboundLink")],1),t._v(" 使用存活探测器来知道什么时候要重启容器，存活探测器可以捕捉到死锁（应用程序在运行，但是无法继续执行后面的步骤）。 这样的情况下重启容器有助于让应用程序在有问题的情况下更可用。")]),t._v(" "),s("p",[t._v("kubelet 使用就绪探测器可以知道容器什么时候准备好了并可以开始接受请求流量， 当一个 Pod 内的所有容器都准备好了，才能把这个 Pod 看作就绪了。 这种信号的一个用途就是控制哪个 Pod 作为 Service 的后端。 在 Pod 还没有准备好的时候，会从 Service 的负载均衡器中被剔除的。")]),t._v(" "),s("p",[t._v("kubelet 使用启动探测器可以知道应用程序容器什么时候启动了。 如果配置了这类探测器，就可以控制容器在启动成功后再进行存活性和就绪检查， 确保这些存活、就绪探测器不会影响应用程序的启动。 这可以用于对慢启动容器进行存活性检测，避免它们在启动运行之前就被杀掉。")]),t._v(" "),s("h3",{attrs:{id:"定义存活命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义存活命令"}},[t._v("#")]),t._v(" 定义存活命令")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("许多长时间运行的应用程序最终会过渡到断开的状态，除非重新启动，否则无法恢复。 Kubernetes 提供了存活探测器来发现并补救这种情况。")])]),t._v(" "),s("li",[s("p",[t._v("在这个配置文件中，可以看到 Pod 中只有一个容器。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("periodSeconds")])]),t._v(" 字段指定了 kubelet 应该每 5 秒执行一次存活探测。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("initialDelaySeconds")])]),t._v(" 字段告诉 kubelet 在执行第一次探测前应该等待 5 秒。")])]),t._v(" "),s("li",[s("p",[t._v("kubelet 在容器内执行命令 "),s("strong",[s("code",[t._v("cat /tmp/healthy")])]),t._v(" 来进行探测。")])]),t._v(" "),s("li",[s("p",[t._v("如果命令执行成功并且返回值为 0，kubelet 就会认为这个容器是健康存活的。 如果这个命令返回非 0 值，kubelet 会杀死这个容器并重新启动它。")])]),t._v(" "),s("li",[s("p",[t._v("当容器启动时，执行如下的命令： "),s("strong",[s("code",[t._v('/bin/sh -c "touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600"')])])])]),t._v(" "),s("li",[s("p",[t._v("这个容器生命的前 30 秒， "),s("code",[t._v("/tmp/healthy")]),t._v(" 文件是存在的。 所以在这最开始的 30 秒内，执行命令 "),s("code",[t._v("cat /tmp/healthy")]),t._v(" 会返回成功代码。 30 秒之后，执行命令 "),s("code",[t._v("cat /tmp/healthy")]),t._v(" 就会返回失败代码。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exec\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /bin/sh\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" touch /tmp/healthy; sleep 30; rm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf /tmp/healthy; sleep 600\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])])])]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"定义一个存活态http请求接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义一个存活态http请求接口"}},[t._v("#")]),t._v(" 定义一个存活态HTTP请求接口")])]),t._v(" "),s("p",[t._v("另外一种类型的存活探测方式是使用 HTTP GET 请求。 下面是一个 Pod 的配置文件，其中运行一个基于 "),s("code",[t._v("k8s.gcr.io/liveness")]),t._v(" 镜像的容器。")]),t._v(" "),s("h3",{attrs:{id:"定义http请求接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义http请求接口"}},[t._v("#")]),t._v(" 定义HTTP请求接口")]),t._v(" "),s("ul",[s("li",[t._v("在这个配置文件中，可以看到 Pod 也只有一个容器。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("periodSeconds")])]),t._v(" 字段指定了 kubelet 每隔 3 秒执行一次存活探测。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("initialDelaySeconds")])]),t._v(" 字段告诉 kubelet 在执行第一次探测前应该等待 3 秒。")]),t._v(" "),s("li",[t._v("kubelet 会向容器内运行的服务（服务会监听 8080 端口）发送一个 HTTP GET 请求来执行探测。 如果服务器上 "),s("strong",[s("code",[t._v("/healthz")])]),t._v(" 路径下的处理程序返回成功代码，则 kubelet 认为容器是健康存活的。 如果处理程序返回失败代码，则 kubelet 会杀死这个容器并且重新启动它。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("http\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/liveness\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /server\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#周期性的")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /healthz\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Header\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Awesome\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("kubelet在容器启动之后3秒开始执行健康检测。所以前几次健康检查都是成功的。但是10秒之后，健康检查会失败，并且kubelet会杀死容器再重新启动容器。")]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"定义tcp的存活探测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义tcp的存活探测"}},[t._v("#")]),t._v(" 定义TCP的存活探测")])]),t._v(" "),s("p",[t._v("第三种类型的存活探测是使用 TCP 套接字。 通过配置，kubelet 会尝试在指定端口和容器建立套接字链接。 如果能建立连接，这个容器就被看作是健康的，如果不能则这个容器就被看作是有问题的。")]),t._v(" "),s("h3",{attrs:{id:"定义tcp探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义tcp探针"}},[t._v("#")]),t._v(" 定义TCP探针")]),t._v(" "),s("ul",[s("li",[t._v("如下实例，kubelet 会在**"),s("code",[t._v("容器启动 5 秒后发送第一个就绪探测")]),t._v("。**")]),t._v(" "),s("li",[t._v("这会尝试连接 "),s("strong",[s("code",[t._v("nginx")])]),t._v(" 容器的80端口。 如果探测成功，这个 Pod 会被标记为就绪状态，kubelet 将继续每隔 10 秒运行一次检测。")]),t._v(" "),s("li",[t._v("除了就绪探测，"),s("strong",[s("code",[t._v("这个配置包括了一个存活探测。")])])]),t._v(" "),s("li",[t._v("kubelet 会在**"),s("code",[t._v("容器启动 15 秒后进行第一次存活探测。")]),t._v("** 与就绪探测类似，会尝试连接**"),s("code",[t._v("nginx")]),t._v("**容器的80端口。 如果存活探测失败，这个容器会被重新启动。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat tcp.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readinessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定期性的")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" \n")])])]),s("ul",[s("li",[s("strong",[t._v("查看状态的转变")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS             RESTARTS   AGE\nnginx           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Running            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          27s\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS             RESTARTS   AGE\nnginx           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          65s\n")])])]),s("blockquote",[s("h2",{attrs:{id:"定义就绪探测器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义就绪探测器"}},[t._v("#")]),t._v(" 定义就绪探测器")])]),t._v(" "),s("p",[t._v("有时候，应用程序会暂时性的不能提供通信服务。 例如，应用程序在启动时可能需要加载很大的数据或配置文件，或是启动后要依赖等待外部服务。 在这种情况下，既不想杀死应用程序，也不想给它发送请求。 Kubernetes 提供了就绪探测器来发现并缓解这些情况。 容器所在 Pod 上报还未就绪的信息，并且不接受通过 Kubernetes Service 的流量。就绪探测器在容器的整个生命周期中保持运行状态。")]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 活跃性探测器 "),s("em",[t._v("不等待")]),t._v(" 就绪性探测器成功。 如果要在执行活跃性探测器之前等待，应该使用 initialDelaySeconds 或 startupProbe。")]),t._v(" "),s("p",[t._v("就绪探测器的配置和存活探测器的配置相似。 唯一区别就是要使用 "),s("code",[t._v("readinessProbe")]),t._v(" 字段，而不是 "),s("code",[t._v("livenessProbe")]),t._v(" 字段。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readinessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),s("blockquote",[s("h2",{attrs:{id:"配置探测器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置探测器"}},[t._v("#")]),t._v(" 配置探测器")])]),t._v(" "),s("ul",[s("li",[s("h4",{attrs:{id:"probe-有很多配置字段-可以使用这些字段精确的控制存活和就绪检测的行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#probe-有很多配置字段-可以使用这些字段精确的控制存活和就绪检测的行为"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#probe-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("Probe"),s("OutboundLink")],1),t._v(" 有很多配置字段，可以使用这些字段精确的控制存活和就绪检测的行为：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("initialDelaySeconds")])]),t._v("：容器启动后要等待多少秒后存活和就绪探测器才被初始化，默认是 0 秒，最小值是 0。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("periodSeconds")])]),t._v("：执行探测的时间间隔（单位是秒）。默认是 10 秒。最小值是 1。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("timeoutSeconds")])]),t._v("：探测的超时后等待多少秒。默认值是 1 秒。最小值是 1。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("successThreshold")])]),t._v("：探测器在失败后，被视为成功的最小连续成功数。默认值是 1。 存活和启动探测的这个值必须是 1。最小值是 1。")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("failureThreshold")])]),t._v("：当探测失败时，Kubernetes 的重试次数。 存活探测情况下的放弃就意味着重新启动容器。 就绪探测情况下的放弃 Pod 会被打上未就绪的标签。默认值是 3。最小值是 1。")])])])])]),t._v(" "),s("h3",{attrs:{id:"http-探测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-探测"}},[t._v("#")]),t._v(" HTTP 探测")]),t._v(" "),s("ul",[s("li",[s("h4",{attrs:{id:"http-probes-可以在-httpget-上配置额外的字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-probes-可以在-httpget-上配置额外的字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#httpgetaction-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP Probes"),s("OutboundLink")],1),t._v(" 可以在 "),s("code",[t._v("httpGet")]),t._v(" 上配置额外的字段：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("host")]),t._v("：连接使用的主机名，默认是 Pod 的 IP。也可以在 HTTP 头中设置 “Host” 来代替。")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("scheme")]),t._v(" ：用于设置连接主机的方式（HTTP 还是 HTTPS）。默认是 HTTP。")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("path")]),t._v('：访问 HTTP 服务的路径。默认值为 "/"。')])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("httpHeaders")]),t._v("：请求中自定义的 HTTP 头。HTTP 头字段允许重复。")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("port")]),t._v("：访问容器的端口号或者端口名。如果数字必须在 1 ～ 65535 之间。")])])])])])]),t._v(" "),s("p",[t._v("你可以通过为探测设置 "),s("code",[t._v(".httpHeaders")]),t._v(" 来重载默认的头部字段值；例如：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Accept\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" application/json\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("startupProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Agent\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyUserAgent\n")])])]),s("p",[t._v("你也可以通过将这些头部字段定义为空值，从请求中去掉这些头部字段。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Accept\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("startupProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Agent\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),s("h3",{attrs:{id:"tcp-探测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-探测"}},[t._v("#")]),t._v(" TCP 探测")]),t._v(" "),s("p",[t._v("对于一次 TCP 探测，kubelet 在节点上（不是在 Pod 里面）建立探测连接， 这意味着你不能在 "),s("code",[t._v("host")]),t._v(" 参数上配置服务名称，因为 kubelet 不能解析服务名称。")]),t._v(" "),s("ul",[s("li",[s("h4",{attrs:{id:"探测器级别-terminationgraceperiodseconds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探测器级别-terminationgraceperiodseconds"}},[t._v("#")]),t._v(" 探测器级别 "),s("code",[t._v("terminationGracePeriodSeconds")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("FEATURE STATE:")]),t._v(" "),s("code",[t._v("Kubernetes v1.22 [beta]")])]),t._v(" "),s("li",[t._v("在 1.21 及更高版本中，当特性门控 "),s("code",[t._v("ProbeTerminationGracePeriod")]),t._v(" 为 启用状态时，用户可以指定一个探测级别的 "),s("code",[t._v("terminationGracePeriodSeconds")]),t._v(" 作为 探针规格的一部分。")]),t._v(" "),s("li",[t._v("当特性门控被启用时，并且 Pod 级和探针级的 "),s("code",[t._v("terminationGracePeriodSeconds")]),t._v(" 都已设置，kubelet 将 使用探针级设置的值。")])])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat http_probe.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.25.253.3/library/nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /healthz \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" liveness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("failureThreshold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在测试后被视为失败的探针的最小连续故障数成功的")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationGracePeriodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可选的持续时间（秒），pod需要在探头故障宽限期是在秒之后的持续时间。")]),t._v("\n      \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME                                      READY   STATUS    RESTARTS   AGE\nnfs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("provisioner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("654754dd8d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hnm2g   1/1     Running   0          66m\nnginx                                     1/1     Running   0          3s\n")])])]),s("ul",[s("li",[t._v("如果你已经为现有 Pod 设置了 “terminationGracePeriodSeconds” 字段并且 不再希望使用针对每个探针的终止宽限期，则必须删除那些现有的 Pod。")]),t._v(" "),s("li",[t._v("（控制平面或某些其他组件）创建替换Pods，并且特性门控“ProbeTerminationGracePeriod”被禁用，那么API服务器会忽略Pod级别的"),s("code",[t._v("terminationGracePeriodSeconds")]),t._v("字段，即使Pod模板指定了它。")])]),t._v(" "),s("p",[t._v("探测器级别的 "),s("code",[t._v("terminationGracePeriodSeconds")]),t._v(" 不能用于设置就绪态探针。 它将被 API 服务器拒绝。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME                                      READY   STATUS             RESTARTS     AGE\nnfs-client-provisioner-654754dd8d-hnm2g   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("            72m\nnginx                                     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     CrashLoopBackOff   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0s ago"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   6m1s\n")])])]),s("h2",{attrs:{id:"使用rbac鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用rbac鉴权"}},[t._v("#")]),t._v(" 使用RBAC鉴权")]),t._v(" "),s("p",[t._v("基于角色（Role）的访问控制（RBAC）是一种基于组织中用户的角色来调节控制对 计算机或网络资源的访问的方法。")]),t._v(" "),s("p",[t._v("RBAC 鉴权机制使用 "),s("code",[t._v("rbac.authorization.k8s.io")]),t._v(" "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/kubernetes-api/#api-groups-and-versioning",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 组"),s("OutboundLink")],1),t._v(" 来驱动鉴权决定，允许你通过 Kubernetes API 动态配置策略。")]),t._v(" "),s("p",[t._v("要启用 RBAC，在启动 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kube-apiserver/",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 服务器"),s("OutboundLink")],1),t._v(" 时将 "),s("code",[t._v("--authorization-mode")]),t._v(" 参数设置为一个逗号分隔的列表并确保其中包含 "),s("code",[t._v("RBAC")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"api-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-对象"}},[t._v("#")]),t._v(" API 对象")]),t._v(" "),s("p",[t._v("RBAC API 声明了四种 Kubernetes 对象："),s("em",[t._v("Role")]),t._v("、"),s("em",[t._v("ClusterRole")]),t._v("、"),s("em",[t._v("RoleBinding")]),t._v(" 和 "),s("em",[t._v("ClusterRoleBinding")]),t._v("。你可以像使用其他 Kubernetes 对象一样， 通过类似 "),s("code",[t._v("kubectl")]),t._v(" 这类工具 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/kubernetes-objects/#understanding-kubernetes-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("描述对象"),s("OutboundLink")],1),t._v(", 或修补对象。")]),t._v(" "),s("h3",{attrs:{id:"role和clusterrole"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#role和clusterrole"}},[t._v("#")]),t._v(" Role和ClusterRole")]),t._v(" "),s("p",[t._v("RBAC 的 "),s("em",[t._v("Role")]),t._v(" 或 "),s("em",[t._v("ClusterRole")]),t._v(" 中"),s("code",[t._v("包含一组代表相关权限的规则")]),t._v("。 "),s("code",[t._v("这些权限是纯粹累加的（不存在拒绝某操作的规则）")]),t._v("。")]),t._v(" "),s("p",[t._v("Role 总是用来在某个"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/namespaces/",target:"_blank",rel:"noopener noreferrer"}},[t._v("名字空间"),s("OutboundLink")],1),t._v(" 内设置访问权限；在你创建 Role 时，你必须指定该 Role 所属的名字空间。")]),t._v(" "),s("p",[t._v("与之相对，ClusterRole 则是一个集群作用域的资源。这两种资源的名字不同（Role 和 ClusterRole）是因为 Kubernetes 对象要么是名字空间作用域的，要么是集群作用域的， 不可两者兼具。")]),t._v(" "),s("p",[s("strong",[t._v("ClusterRole 有若干用法。你可以用它来：")])]),t._v(" "),s("ol",[s("li",[t._v("定义对某名字空间域对象的访问权限，并将在各个名字空间内完成授权；")]),t._v(" "),s("li",[t._v("为名字空间作用域的对象设置访问权限，并跨所有名字空间执行授权；")]),t._v(" "),s("li",[t._v("为集群作用域的资源定义访问权限。")])]),t._v(" "),s("h3",{attrs:{id:"role的示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#role的示例"}},[t._v("#")]),t._v(" Role的示例")]),t._v(" "),s("p",[t._v('下面是一个位于 "default" 名字空间的 Role 的示例，可用来授予对 '),s("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pods"),s("OutboundLink")],1),t._v(" 的读访问权限：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create role pod-reader --namespace=default --resource=pods  --verb=get,watch,list --dry-run  -o yaml > role.yaml ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat role.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定资源类型为Role")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\t\t\t\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#名字空间为默认")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可以访问的资源是POD")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" pods\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对该资源可以操作的权限 读访问权限")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" get\t\t\t\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" watch\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" list\n")])])]),s("h3",{attrs:{id:"clusterrole示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clusterrole示例"}},[t._v("#")]),t._v(" ClusterRole示例")]),t._v(" "),s("p",[s("strong",[t._v("ClusterRole 可以和 Role 相同完成授权。 因为 ClusterRole 属于集群范围，所以它也可以为以下资源授予访问权限：")])]),t._v(" "),s("ul",[s("li",[t._v("集群范围资源（比如 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点（Node）"),s("OutboundLink")],1),t._v("）")]),t._v(" "),s("li",[t._v("非资源端点（比如 "),s("code",[t._v("/healthz")]),t._v("）")]),t._v(" "),s("li",[t._v("跨名字空间访问的名字空间作用域的资源（如 Pods），比如，你可以使用 ClusterRole 来允许某特定用户执行 "),s("code",[t._v("kubectl get pods --all-namespaces")])])]),t._v(" "),s("p",[t._v("下面是一个 ClusterRole 的示例，可用来为任一特定名字空间中的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Secret"),s("OutboundLink")],1),t._v(" 授予读访问权限， 或者跨名字空间的访问权限（取决于该角色是如何"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding",target:"_blank",rel:"noopener noreferrer"}},[t._v("绑定"),s("OutboundLink")],1),t._v("的）：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create clusterrole secret-reader --resource=secrets --verb=get,watch,list --dry-run -o yaml > clusterrole.yaml ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat clusterrole.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" secrets\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" get\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" watch\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" list\n")])])]),s("h3",{attrs:{id:"rolebinding和clusterrolebinding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rolebinding和clusterrolebinding"}},[t._v("#")]),t._v(" RoleBinding和ClusterRoleBinding")]),t._v(" "),s("p",[t._v("角色绑定（Role Binding）是"),s("code",[t._v("将角色中定义的权限赋予一个或者一组用户")]),t._v("。 它包含若干 "),s("strong",[t._v("主体")]),t._v("（用户、组或服务账户）的列表和对这些主体所获得的角色的引用。 RoleBinding 在指定的名字空间中执行授权，而 ClusterRoleBinding 在集群范围执行授权。")]),t._v(" "),s("p",[t._v("一个 RoleBinding 可以引用同一的名字空间中的任何 Role。 或者，一个 RoleBinding 可以引用某 ClusterRole 并将该 ClusterRole 绑定到 RoleBinding 所在的名字空间。 如果你希望将某 ClusterRole 绑定到集群中所有名字空间，你要使用 ClusterRoleBinding。")]),t._v(" "),s("h3",{attrs:{id:"rolebinding-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rolebinding-示例"}},[t._v("#")]),t._v(" RoleBinding 示例")]),t._v(" "),s("ul",[s("li",[t._v('下面的例子中的 RoleBinding 将 "pod-reader" Role 授予在 "default" 名字空间中的用户 "jane"。 这样，用户 "jane" 就具有了读取 "default" 名字空间中 pods 的权限。')]),t._v(" "),s("li",[s("code",[t._v("RoleBinding 也可以引用 ClusterRole，以将对应 ClusterRole 中定义的访问权限授予 RoleBinding 所在名字空间的资源。")])]),t._v(" "),s("li",[s("code",[t._v("这种引用使得你可以跨整个集群定义一组通用的角色， 之后在多个名字空间中复用。")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create rolebinding read-pods --namespace=default --user=jane --role=pod-reader --dry-run -o yaml > rolebinding.yaml ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat rolebinding.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此角色绑定允许‘jane’读取‘default’名字空间中的Pods")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pods\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定某个Role或者是Clusterrole的绑定关系")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此字段是Role或者clusterRole")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是你的Role或者clusterRole的名字匹配\t\t\t\t\t")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#你可以指定不止一个subject（主体）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jane\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#name是区分大小写的")]),t._v("\n")])])]),s("p",[t._v('尽管下面的 RoleBinding 引用的是一个 ClusterRole，"dave"（这里的主体， 区分大小写）只能访问 "development" 名字空间中的 Secrets 对象，因为 RoleBinding 所在的名字空间（由其 metadata 决定）是 "development"。')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 此角色绑定使得用户 "dave" 能够读取 "development" 名字空间中的 Secrets')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 你需要一个名为 "secret-reader" 的 ClusterRole')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RoleBinding\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secrets\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# RoleBinding 的名字空间决定了访问权限的授予范围。")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 这里隐含授权仅在 "development" 名字空间内的访问权限。')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" development\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" User\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dave "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 'name' 是区分大小写的")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n")])])]),s("h3",{attrs:{id:"clusterrolebinding示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clusterrolebinding示例"}},[t._v("#")]),t._v(" ClusterRoleBinding示例")]),t._v(" "),s("p",[t._v('要跨整个集群完成访问权限的授予，你可以使用一个 ClusterRoleBinding。 下面的 ClusterRoleBinding 允许 "manager" 组内的所有用户访问任何名字空间中的 Secrets。')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create clusterrolebinding read-secrets-global --clusterrole=secret-reader --group=manager  --dry-run -o yaml > clusterrolebinding.yaml ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master role"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat clusterrolebinding.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRoleBinding\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此集群角色绑定允许 “manager” 组中的任何人访问任何名字空间中的 secrets")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" read"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secrets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("global\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("roleRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Group\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" manager\n")])])]),s("p",[s("code",[t._v("绑定之后，你不能再修改绑定对象所引用的Role或ClusterRole。试图改变绑定对象的 roleRef 将导致合法性检查错误。如果你想要改变现有绑定对象中 roleRef字段的内容，必须删除重新创建绑定对象。")])]),t._v(" "),s("p",[t._v("这种限制有两个主要原因：")]),t._v(" "),s("ol",[s("li",[t._v("针对不同角色的绑定是完全不一样的绑定。要求通过删除/重建绑定来更改 "),s("code",[t._v("roleRef")]),t._v(", 这样可以确保要赋予绑定的所有主体会被授予新的角色（而不是在允许或者不小心修改 了 "),s("code",[t._v("roleRef")]),t._v(" 的情况下导致所有现有主体未经验证即被授予新角色对应的权限）。")]),t._v(" "),s("li",[t._v("将 "),s("code",[t._v("roleRef")]),t._v(" 设置为不可以改变，这使得可以为用户授予对现有绑定对象的 "),s("code",[t._v("update")]),t._v(" 权限， 这样可以让他们管理主体列表，同时不能更改被授予这些主体的角色。")])]),t._v(" "),s("p",[s("code",[t._v("pods")]),t._v("对应名字空间作用域的Pod资源，而 "),s("code",[t._v("log")]),t._v(" 是 "),s("code",[t._v("pods")]),t._v("的子资源。在RBAC角色表达子资源时，使用斜线（"),s("code",[t._v("/")]),t._v("）来分隔资源和子资源。要允许某主体读取 "),s("code",[t._v("pods")]),t._v(" 同时访问这些Pod的 "),s("code",[t._v("log")]),t._v(" 子资源")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Role\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("and"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("reader\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods/log"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pods/log是pod的资源")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#也可以通过 resourceNames 列表按名称引用资源。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#在 HTTP 层面，用来访问 ConfigMap 的资源的名称为 "configmaps"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"configmaps"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resourceNames")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-configmap"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),t._v(" \n")])])]),s("h3",{attrs:{id:"聚合的-clusterrole"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合的-clusterrole"}},[t._v("#")]),t._v(" 聚合的 ClusterRole")]),t._v(" "),s("p",[t._v("你可以将若干 ClusterRole "),s("strong",[t._v("聚合（Aggregate）")]),t._v(" 起来，形成一个复合的 ClusterRole。 某个控制器作为集群控制面的一部分会监视带有 "),s("code",[t._v("aggregationRule")]),t._v(" 的 ClusterRole 对象集合。"),s("code",[t._v("aggregationRule")]),t._v(" 为控制器定义一个标签 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels/",target:"_blank",rel:"noopener noreferrer"}},[t._v("选择算符"),s("OutboundLink")],1),t._v("供后者匹配 应该组合到当前 ClusterRole 的 "),s("code",[t._v("roles")]),t._v(" 字段中的 ClusterRole 对象。")]),t._v(" "),s("p",[t._v("下面是一个聚合 ClusterRole 的示例：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" monitoring\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("aggregationRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterRoleSelectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.example.com/aggregate-to-monitoring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 控制面自动填充这里的规则")]),t._v("\n")])])]),s("ul",[s("li",[t._v("如果你创建一个与某现有聚合 ClusterRole 的标签选择算符匹配的 ClusterRole， 这一变化会触发新的规则被添加到聚合 ClusterRole 的操作。")]),t._v(" "),s("li",[t._v("默认的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings",target:"_blank",rel:"noopener noreferrer"}},[t._v("面向用户的角色"),s("OutboundLink")],1),t._v(" 使用 ClusterRole 聚合。 这使得作为集群管理员的你可以为扩展默认规则，包括为定制资源设置规则， 比如通过 CustomResourceDefinitions 或聚合 API 服务器提供的定制资源。")])]),t._v(" "),s("p",[t._v("下面的例子中，通过创建一个标签同样为 "),s("code",[t._v("rbac.example.com/aggregate-to-monitoring: true")]),t._v(' 的 ClusterRole，新的规则可被添加到 "monitoring" ClusterRole 中。')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" monitoring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("endpoints\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.example.com/aggregate-to-monitoring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 当你创建 "monitoring-endpoints" ClusterRole 时，')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 下面的规则会被添加到 "monitoring" ClusterRole 中')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"services"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"endpoints"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pods"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("code",[t._v('下面的ClusterRoles让默认角色 "admin"和"edit"拥有管理自定义资源 "CronTabs" 的权限，"view" 角色对 CronTab资源拥有读操作权限。你可以假定CronTab对象在API服务器所看到的URL中被命名为 "crontabs"。')])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aggregate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cron"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tabs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("edit\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加以下权限到默认角色 "admin" 和 "edit" 中')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-admin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-edit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable.example.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crontabs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"create"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"patch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delete"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterRole\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rbac.authorization.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aggregate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cron"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tabs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("view\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 添加以下权限到 "view" 默认角色中')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stable.example.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crontabs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("verbs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"list"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"watch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"面向用户的角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向用户的角色"}},[t._v("#")]),t._v(" 面向用户的角色")]),t._v(" "),s("ul",[s("li",[t._v("一些默认的 ClusterRole 不是以前缀 "),s("code",[t._v("system:")]),t._v(" 开头的。这些是面向用户的角色。 它们包括超级用户（Super-User）角色（"),s("code",[t._v("cluster-admin")]),t._v("）、 使用 ClusterRoleBinding 在集群范围内完成授权的角色（"),s("code",[t._v("cluster-status")]),t._v("）、 以及使用 RoleBinding 在特定名字空间中授予的角色（"),s("code",[t._v("admin")]),t._v("、"),s("code",[t._v("edit")]),t._v("、"),s("code",[t._v("view")]),t._v("）。")]),t._v(" "),s("li",[t._v("面向用户的 ClusterRole 使用 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles",target:"_blank",rel:"noopener noreferrer"}},[t._v("ClusterRole 聚合"),s("OutboundLink")],1),t._v("以允许管理员在 这些 ClusterRole 上添加用于定制资源的规则。如果想要添加规则到 "),s("code",[t._v("admin")]),t._v("、"),s("code",[t._v("edit")]),t._v(" 或者 "),s("code",[t._v("view")]),t._v("， 可以创建带有以下一个或多个标签的 ClusterRole：")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-admin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-edit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rbac.authorization.k8s.io/aggregate-to-view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n")])])]),s("h2",{attrs:{id:"pod的安全策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod的安全策略"}},[t._v("#")]),t._v(" Pod的安全策略")]),t._v(" "),s("p",[s("code",[t._v("PodSecurityPolicy 在 Kubernetes v1.21 版本中被弃用，将在 v1.25 中删除。")])]),t._v(" "),s("p",[t._v("Pod 安全策略使得对 Pod 创建和更新进行细粒度的权限控制成为可能。")]),t._v(" "),s("h3",{attrs:{id:"什么是pod安全策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是pod安全策略"}},[t._v("#")]),t._v(" 什么是Pod安全策略？")]),t._v(" "),s("p",[s("em",[t._v("Pod 安全策略（Pod Security Policy）")]),t._v(" 是集群级别的资源，它能够控制 Pod 规约 中与安全性相关的各个方面。 "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podsecuritypolicy-v1beta1-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("PodSecurityPolicy"),s("OutboundLink")],1),t._v(" 对象定义了一组 Pod 运行时必须遵循的条件及相关字段的默认值，只有 Pod 满足这些条件 才会被系统接受。 Pod 安全策略允许管理员控制")]),t._v(" "),s("p",[s("strong",[s("em",[t._v("Pod 安全策略")]),t._v(" 由设置和策略组成，它们能够控制 Pod 访问的安全特征。这些设置分为如下三类：")])]),t._v(" "),s("ul",[s("li",[s("em",[t._v("基于布尔值控制")]),t._v(" ：这种类型的字段默认为最严格限制的值。")]),t._v(" "),s("li",[s("em",[t._v("基于被允许的值集合控制")]),t._v(" ：这种类型的字段会与这组值进行对比，以确认值被允许。")]),t._v(" "),s("li",[s("em",[t._v("基于策略控制")]),t._v(" ：设置项通过一种策略提供的机制来生成该值，这种机制能够确保指定的值落在被允许的这组值中。")])]),t._v(" "),s("h3",{attrs:{id:"启用pod安全策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用pod安全策略"}},[t._v("#")]),t._v(" 启用Pod安全策略")]),t._v(" "),s("p",[t._v("Pod 安全策略实现为一种可选的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/#podsecuritypolicy",target:"_blank",rel:"noopener noreferrer"}},[t._v("准入控制器"),s("OutboundLink")],1),t._v("。 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/#how-do-i-turn-on-an-admission-control-plug-in",target:"_blank",rel:"noopener noreferrer"}},[t._v("启用了准入控制器"),s("OutboundLink")],1),t._v(" 即可强制实施 Pod 安全策略，不过如果没有授权认可策略之前即启用准入控制器将导致集群中无法创建任何 Pod。")]),t._v(" "),s("p",[t._v("由于Pod安全策略API（"),s("code",[t._v("policy/v1beta1/podsecuritypolicy")]),t._v("）是独立于准入控制器 来启用的，对于现有集群而言，建议在启用准入控制器之前先添加策略并对其授权。")]),t._v(" "),s("h3",{attrs:{id:"授权策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#授权策略"}},[t._v("#")]),t._v(" 授权策略")]),t._v(" "),s("p",[t._v("PodSecurityPolicy 资源被创建时，并不执行任何操作。为了使用该资源，需要对 发出请求的用户或者目标 Pod 的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-service-account/",target:"_blank",rel:"noopener noreferrer"}},[t._v("服务账号"),s("OutboundLink")],1),t._v(" 授权，通过允许其对策略执行 "),s("code",[t._v("use")]),t._v(" 动词允许其使用该策略。")]),t._v(" "),s("p",[t._v("大多数 Kubernetes Pod 不是由用户直接创建的。相反，这些 Pod 是由 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),s("OutboundLink")],1),t._v("、 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/replicaset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReplicaSet"),s("OutboundLink")],1),t._v(" 或者经由控制器管理器模版化的控制器创建。")]),t._v(" "),s("p",[t._v("赋予控制器访问策略的权限意味着对应控制器所创建的 "),s("em",[t._v("所有")]),t._v(" Pod 都可访问策略。 因此，对策略进行授权的优先方案是为 Pod 的服务账号授予访问权限")]),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("为运行此示例，配置一个名字空间和一个服务账号。我们将用这个服务账号来 模拟一个非管理员账号的用户。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create namespace psp-example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create serviceaccount -n psp-example fake-user")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create rolebinding -n psp-example fake-editor --clusterrole=edit --serviceaccount=psp-example:fake-user")]),t._v("\n")])])]),s("p",[t._v("创建两个别名，以更清晰地展示我们所使用的用户账号，同时减少一些键盘输入：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# alias kubectl-admin='kubectl -n psp-example'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# alias kubectl-user='kubectl --as=system:serviceaccount:psp-example:fake-user -n psp-example'")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建一个策略和一个pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个策略和一个pod"}},[t._v("#")]),t._v(" 创建一个策略和一个Pod")]),t._v(" "),s("p",[t._v("在一个文件中定义一个示例的 PodSecurityPolicy 对象。 这里的策略只是用来禁止创建有特权要求的 Pods。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat podsecuritypolicy.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" policy/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PodSecurityPolicy\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't allow privileged pods!")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("seLinux")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其余部分填写一些必填字段")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RunAsAny \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("supplementalGroups")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RunAsAny\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runAsUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RunAsAny\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fsGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RunAsAny\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),t._v("\n")])])]),s("p",[t._v("使用 kubectl 执行创建操作：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl-admin create -f podsecuritypolicy.yaml")]),t._v("\n")])])]),s("p",[t._v("现在，作为一个非特权用户，尝试创建一个简单的 Pod：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("kubectl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("user create "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <<EOF\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pause\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pause\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/pause\nEOF\n")])])]),s("p",[t._v("输出类似于：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Error from server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Forbidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": error when creating "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"STDIN"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" pods "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),t._v(" is forbidden: unable to validate against any pod security policy: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("尽管 PodSecurityPolicy 被创建，Pod 的服务账号或者 "),s("code",[t._v("fake-user")]),t._v(" 用户都没有使用该策略的权限。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl-user auth can-i use podsecuritypolicy/example")]),t._v("\nWarning: resource "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'podsecuritypolicies'")]),t._v(" is not namespace scoped "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" group "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'policy'")]),t._v("\nno\n")])])]),s("h2",{attrs:{id:"命名空间下pod配额"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名空间下pod配额"}},[t._v("#")]),t._v(" 命名空间下Pod配额")]),t._v(" "),s("p",[t._v("Resource Quotas（资源配额，简称quota）"),s("code",[t._v("是对namespace进行资源配额，限制资源使用的一种策略。")])]),t._v(" "),s("p",[t._v("K8S是一个多用户架构，当多用户或者团队共享一个K8S系统时，SA使用quota防止用户（基于namespace的）的资源抢占，定义好资源分配策略。")]),t._v(" "),s("p",[t._v("Quota应用在Namespace上，默认情况下，没有Resource Quota的，需要另外创建Quota，"),s("code",[t._v("并且每个Namespace最多只能有一个Quota对象。")])]),t._v(" "),s("h3",{attrs:{id:"创建一个命名空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个命名空间"}},[t._v("#")]),t._v(" 创建一个命名空间")]),t._v(" "),s("p",[t._v("首先创建一个命名空间，这样可以将本次操作中创建的资源与集群其他资源隔离开来。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create namespace quota-pod-example ")]),t._v("\nnamespace/quota-pod-example created\n")])])]),s("h3",{attrs:{id:"创建resourcequota"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建resourcequota"}},[t._v("#")]),t._v(" 创建ResourceQuota")]),t._v(" "),s("p",[s("code",[t._v("创建一个quota限制最大的pod数量是2个")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create quota pod-demo --hard=pods=2 --namespace=quota-pod-example --dry-run -o yaml > quota.yaml       ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat quota.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ResourceQuota\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pods")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"验证该资源限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证该资源限制"}},[t._v("#")]),t._v(" 验证该资源限制")]),t._v(" "),s("p",[s("code",[t._v("这里使用deployment的控制器来创建3个Pod")]),t._v("，此时会发现，deployment的pod被限制成2个pod")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create deployment nginx --image=172.25.253.3/library/nginx --replicas=3 --namespace quota-pod-example ")]),t._v("\ndeployment.apps/nginx created\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployments.apps -n quota-pod-example  ")]),t._v("\nNAME    READY   UP-TO-DATE   AVAILABLE   AGE\nnginx   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/3     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           11s\n")])])]),s("h3",{attrs:{id:"清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#清理"}},[t._v("#")]),t._v(" 清理")]),t._v(" "),s("p",[t._v("删除命名空间")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete namespaces quota-pod-example ")]),t._v("\nnamespace "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quota-pod-example"')]),t._v(" deleted\n")])])]),s("h2",{attrs:{id:"配置api对象配额"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置api对象配额"}},[t._v("#")]),t._v(" 配置API对象配额")]),t._v(" "),s("h3",{attrs:{id:"创建命名空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建命名空间"}},[t._v("#")]),t._v(" 创建命名空间")]),t._v(" "),s("p",[t._v("创建一个命名空间以便本例中创建的资源和集群中的其余部分相隔离。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create namespace quota-object-example")]),t._v("\nnamespace/quota-object-example created\n")])])]),s("h3",{attrs:{id:"创建resourcequota-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建resourcequota-2"}},[t._v("#")]),t._v(" 创建ResourceQuota")]),t._v(" "),s("p",[t._v("下面是一个 ResourceQuota 对象的配置文件")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create quota object-quota-demo --namespace quota-object-example --hard=persistentvolumeclaims=1,services.loadbalancers=2,services.nodeports=0 --dry-run -o yaml > quota-api.yaml                  ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat  quota-api.yaml    ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ResourceQuota\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.loadbalancers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.nodeports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f quota-api.yaml ")]),t._v("\nresourcequota/object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo created\n")])])]),s("p",[t._v("查看 ResourceQuota 的详细信息：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("kubectl get resourcequota object-quota-demo "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--namespace")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("quota-object-example "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--output")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yaml\n")])])]),s("p",[t._v("输出结果表明在 quota-object-example 命名空间中，至多只能有一个 PersistentVolumeClaim， 最多两个 LoadBalancer 类型的服务，不能有 NodePort 类型的服务。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.loadbalancers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.nodeports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("used")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.loadbalancers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services.nodeports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),t._v("\n")])])]),s("h3",{attrs:{id:"创建persistentvolumeclaim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建persistentvolumeclaim"}},[t._v("#")]),t._v(" 创建PersistentVolumeClaim")]),t._v(" "),s("p",[t._v("下面是一个 PersistentVolumeClaim 对象的配置文件：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat pvc.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" manual\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteOnce\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3Gi\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pvc.yaml ")]),t._v("\npersistentvolumeclaim/pvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo created\n")])])]),s("p",[t._v("输出信息表明 PersistentVolumeClaim 存在并且处于 Pending 状态：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pvc -n quota-object-example")]),t._v("\nNAME             STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE\npvc-quota-demo   Pending                                      manual         6s\n")])])]),s("h3",{attrs:{id:"尝试创建第二个persistentvolumeclaim"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#尝试创建第二个persistentvolumeclaim"}},[t._v("#")]),t._v(" 尝试创建第二个PersistentVolumeClaim")]),t._v(" "),s("p",[t._v("下面是第二个 PersistentVolumeClaim 的配置文件：")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pvc.yaml              ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PersistentVolumeClaim\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pvc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("quota"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo2\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storageClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" manual\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ReadWriteOnce\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4Gi\n")])])]),s("p",[t._v("尝试创建第二个 PersistentVolumeClaim：")]),t._v(" "),s("p",[s("code",[t._v("输出信息表明第二个 PersistentVolumeClaim 没有创建成功，因为这会超出命名空间的配额。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master pod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pvc.yaml")]),t._v("\nError from server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Forbidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": error when creating "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pvc.yaml"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" persistentvolumeclaims "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pvc-quota-demo3"')]),t._v(" is forbidden: exceeded quota: object-quota-demo, requested: "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", used: "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(", limited: "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("persistentvolumeclaims")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);