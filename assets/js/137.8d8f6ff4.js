(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{449:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker-compose")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic.imgdb.cn/item/61ebfa652ab3f51d9120ff7b.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"docker-compose是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose是什么"}},[t._v("#")]),t._v(" Docker Compose是什么")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Docker Compose 与 Docker Stack 非常类似。"),s("code",[t._v("它能够在 Docker 节点上，以单引擎模式 （Single-Engine Mode）进行多容器应用的部署和管理。")])])]),t._v(" "),s("li",[s("p",[t._v("多数的现代应用通过多个更小的服务互相协同来组成一个完整可用的应用。比如一个简单的 示例应用可能由如下 4 个服务组成")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Web 前端。")])]),t._v(" "),s("li",[s("code",[t._v("订单管理。")])]),t._v(" "),s("li",[s("code",[t._v("品类管理。")])]),t._v(" "),s("li",[s("code",[t._v("后台数据库。")])])])])]),t._v(" "),s("p",[t._v("将以上服务组织在一起，就是一个可用的应用。 部署和管理繁多的服务是困难的。"),s("code",[t._v("而这正是 Docker Compose 要解决的问题。 Docker Compose 并不是通过脚本和各种冗长的 docker 命令来将应用组件组织起来，而是 通过一个声明式的配置文件描述整个应用，从而使用一条命令完成部署。")]),t._v(" 应用部署成功后，还可以通过一系列简单的命令实现对其完整声明周期的管理。甚至，配置 文件还可以置于版本控制系统中进行存储和管理。")]),t._v(" "),s("h2",{attrs:{id:"docker-compose-的背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-的背景"}},[t._v("#")]),t._v(" Docker Compose 的背景")]),t._v(" "),s("p",[t._v("Docker Compose 的前身是 Fig。Fig 是一个由 Orchard 公司开发的强有力的工具，在当时 是进行多容器管理的最佳方案。"),s("code",[t._v("Fig 是一个基于 Docker 的 Python 工具，允许用户基于一 个 YAML 文件定义多容器应用，从而可以使用 fig 命令行工具进行应用的部署。 Fig 还可以对应用的全生命周期进行管理。")]),t._v("内部实现上，Fig 会解析 YAML 文件，并通过 Docker API 进行应用的部署和管理。在 2014 年，Docker 公司收购了 Orchard 公司，并 将 Fig 更名为 Docker Compose。命令行工具也从 fig 更名为 docker-compose，并自此 成为绑定在 Docker 引擎之上的外部工具。虽然它从未完全集成到 Docker 引擎中，但是 仍然受到广泛关注并得到普遍使用。"),s("code",[t._v("直至今日，Docker Compose 仍然是一个需要在 Docker 主机上进行安装的外部 Python 工具。使用它时，首先编写定义多容器（多服务）应用的 YAML 文件，然后将其交由 docker-compose 命令处理，Docker Compose 就会基于 Docker 引擎 API 完成应用的部署。")])]),t._v(" "),s("blockquote",[s("p",[t._v("小总结：docker-compose 就是一个编排。需要熟练 yaml 语法。")])]),t._v(" "),s("h2",{attrs:{id:"docker-compose安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose安装"}},[t._v("#")]),t._v(" Docker Compose安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-L")]),t._v(" https://get.daocloud.io/docker/compose/releases/download/1.12.0/docker-compose-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-"),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/local/bin/docker-compose\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-compose\n")])])]),s("blockquote",[s("p",[t._v("备注： docker-compose 是一个基于 yaml 语法的编排 创建的时候就是直接 vim  docker-compose.yaml   该文件执行必须是在当前文件夹否则需要加 -f")])]),t._v(" "),s("h2",{attrs:{id:"docker-compose常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose常用命令"}},[t._v("#")]),t._v(" Docker Compose常用命令")]),t._v(" "),s("h3",{attrs:{id:"docker-compose-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-指令"}},[t._v("#")]),t._v(" docker-compose 指令")]),t._v(" "),s("blockquote",[s("p",[t._v("模板指令: 用来书写在 docker-compose.yml 文件中指令称之，为模板指令用来为服务进行 服务的 指令: 用来对整个 docker-compose.yml 对应的这个项目操作书 写 docker-compose 命 令之后命令 docker-compose up(指令)")])]),t._v(" "),s("h3",{attrs:{id:"_1-up-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-up-指令"}},[t._v("#")]),t._v(" 1.up 指令")]),t._v(" "),s("p",[t._v("作用:用来启动所有")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up \n选项:-d 后台启动所有服务\n")])])]),s("h3",{attrs:{id:"_2-down-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-down-指令"}},[t._v("#")]),t._v(" 2.down 指令")]),t._v(" "),s("p",[t._v("作用:"),s("code",[t._v("用来关闭所有")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down \n")])])]),s("h3",{attrs:{id:"_3-exec-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-exec-指令"}},[t._v("#")]),t._v(" 3.exec 指令")]),t._v(" "),s("p",[t._v("作用:"),s("code",[t._v("进入容器")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" redis "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docker-compose.yml 中声明服务 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_4-ps-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-ps-指令"}},[t._v("#")]),t._v(" 4.ps 指令")]),t._v(" "),s("p",[t._v("作用:"),s("code",[t._v("用来展示当前")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ docker-conpose 运行的所有容器 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_5-restart-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-restart-指令"}},[t._v("#")]),t._v(" 5.restart 指令")]),t._v(" "),s("p",[t._v("作用:"),s("code",[t._v("用来重启项目中某个服务 如果不写服务 id 默认重启所有服务")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" restart "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_6-rm-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-rm-指令"}},[t._v("#")]),t._v(" 6.rm 指令")]),t._v(" "),s("p",[t._v("作用:"),s("code",[t._v("用来删除项目服务")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 删除所有服务 \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-fv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("注意:谨慎操作 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" 删除服务的数据卷 \n")])])]),s("h3",{attrs:{id:"_7-start-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-start-指令"}},[t._v("#")]),t._v(" 7.start 指令")]),t._v(" "),s("p",[t._v("启动服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_8-stop-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-stop-指令"}},[t._v("#")]),t._v(" 8.stop 指令")]),t._v(" "),s("p",[t._v("关闭服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" stop "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_9-top-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-top-指令"}},[t._v("#")]),t._v(" 9.top 指令")]),t._v(" "),s("p",[t._v("用来查看 compose 容器内运行的进程")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("h3",{attrs:{id:"_10-pause-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-pause-指令"}},[t._v("#")]),t._v(" 10.pause 指令")]),t._v(" "),s("p",[t._v("挂起服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" pause "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"_11-unpause-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-unpause-指令"}},[t._v("#")]),t._v(" 11.unpause 指令")]),t._v(" "),s("p",[t._v("继续运行服务")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" unpause "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"_12-logs-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-logs-指令"}},[t._v("#")]),t._v(" 12.logs 指令")]),t._v(" "),s("p",[t._v("查看服务日志")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ docker- compose logs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("服务 id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("p",[t._v("其他指令\nport：打印绑定的公共端口，下面命令可以输出 eureka 服务 8761 端口所绑定 的公共端口")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" port eureka "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8761")]),t._v("\n")])])]),s("p",[t._v("build："),s("code",[t._v("构建或者重新构建服务")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" build \n")])])]),s("p",[t._v("kill：通过发送 SIGKILL 信号来停止指定服务的容器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" eureka \n")])])]),s("blockquote",[s("p",[t._v("config：验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显 示错误原因 -h：")])]),t._v(" "),s("h3",{attrs:{id:"查看帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看帮助"}},[t._v("#")]),t._v(" 查看帮助")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SERVICE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 选项包括：\n  --ignore-pull-failures，      忽略拉取镜像过程中的错误\n  --parallel，\t\t\t多个镜像同时拉取\n  --quiet，\t\t\t拉取镜像过程中不打印进度信息\n")])])]),s("p",[s("strong",[t._v("拉取服务依赖的镜像")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" pull\n")])])]),s("h2",{attrs:{id:"docker-compose-模板指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-模板指令"}},[t._v("#")]),t._v(" Docker-compose 模板指令")]),t._v(" "),s("h3",{attrs:{id:"查看第一个模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看第一个模板"}},[t._v("#")]),t._v(" 查看第一个模板")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.2"')]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t  \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jre8 \t\t\t    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用哪个镜像")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \t\t\t\t     \t    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用来完成host与容器的端口映射关系")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8080"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t  \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#完成宿主机与容器中目录数据卷共享")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一/root/apps:/usr/local/tomcat/webapps      #使用自定义路径映射")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcatwebapps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \t\t\t\t\t   \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明上面服务所使用的自动创建的卷名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcatwebapps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t   \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明指令的卷名compose 自动创建该卷名但是会在之前加入项目名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t   \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用自定义卷名.")]),t._v("\n      false\t\t\t\t\t   \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#true确定使用指定卷名注意:一 旦使用外部自定义卷 名启动服务之前必须手动创建")]),t._v("\n")])])]),s("h3",{attrs:{id:"查看第二个模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看第二个模板"}},[t._v("#")]),t._v(" 查看第二个模板")]),t._v(" "),s("p",[t._v("第二个模板是使用docker-compose部署多个应用的编排，"),s("code",[t._v("docker-compose 部署多应用")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_nane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat01 \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#相当于run的 --name")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jre8 \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用哪个镜像相当于run image")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用来完成host与容器的端口映射关系  相当于run -P")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8080"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#完成宿主机与容器中目录数据卷共享相当 于run -v")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- /root/apps:/usr/1ocal/tomcat/webapps \t#使用自定义路径映射")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /root/apps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   \t\t\t\t \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代表当前服务使用哪个网络桥  相当于run --network")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat02")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat02\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jre8 \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用哪个镜像")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用来完成host与容器的端口映射关系")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8081:8080"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#完成宿主机与容器中目录数据卷共享")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#- /root/apps:/usr/local/tomcat/webapps #使用自定义路径映射")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcatwebapps02"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#代表当前服务使用哪个网络桥")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.7.32\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3307:3306"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysqldata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysqlconf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/mysql\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environnent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" MYSQL_ROOT_PASSWORD=root\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.0.10\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6379:6379"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redisdata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis-server --appendonly yes"')]),t._v("\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#run镜像之后用来獍盖容器内容默认命令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明上面服务所使用的自动创建的卷名")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcatwebapps01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明指令的卷名compose自动创建该卷名但是会在之前加入项目名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用自定义卷名，")]),t._v("\n      false\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#true确定使用指定卷名 \t注意:一旦使用外部自定义卷名启动服务之前必须手动创建")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcatwebapps02")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysqldata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysqlconf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redisdata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务用到桥")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   \t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义上面的服务用到的网桥名称默认创建就是bridge")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用外部指定网桥注意:网桥必须存在.")]),t._v("\n")])])]),s("h2",{attrs:{id:"docker-compose模板指令详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose模板指令详解"}},[t._v("#")]),t._v(" Docker-compose模板指令详解")]),t._v(" "),s("h3",{attrs:{id:"build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" build")]),t._v(" "),s("p",[s("code",[t._v("构建或者重新构建服务")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" build\n")])])]),s("h3",{attrs:{id:"container-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#container-name"}},[t._v("#")]),t._v(" container_name")]),t._v(" "),s("p",[t._v("指定容器名称 默认会将使用")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("container_name: docker-web-container\n")])])]),s("h3",{attrs:{id:"comand"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comand"}},[t._v("#")]),t._v(" comand")]),t._v(" "),s("p",[t._v("覆盖容器启动后默认执行的命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("command: "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),t._v("\n")])])]),s("h3",{attrs:{id:"depends-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#depends-on"}},[t._v("#")]),t._v(" depends_on")]),t._v(" "),s("p",[s("code",[t._v("解决容器的依赖")]),t._v(" 启动先后的问题 以下先启动redis db 再启动web")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ..\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但是web服务不会等待redis  db完全启动之后再启动")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" db  (服务的ID名称)\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redis\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.6")]),t._v(" \n")])])]),s("h3",{attrs:{id:"env-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#env-file"}},[t._v("#")]),t._v(" env_file")]),t._v(" "),s("p",[t._v("从文件中获取变量 可以为单独的文件路径或者列表\n如果docker-compose -f FILE 方式来指定Compose模板文件 则env_file中变量的路径会基于模板文件路径")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .env\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./common.env\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ./apps/web.env\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /opt/secrets.env\n")])])]),s("h3",{attrs:{id:"environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" environment")]),t._v(" "),s("p",[t._v("设置环境变量 "),s("code",[t._v("可以使用数组和字典两种格式")]),t._v("\n只给定名称的变量会自动获取运行compose主机上对应的变量")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RACK_ENV")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" development\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SESSION_SECRET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PACK_ENV=development\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SESSION_SECRET\n")])])]),s("h3",{attrs:{id:"image"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[t._v("#")]),t._v(" image")]),t._v(" "),s("p",[t._v("指定镜像的名称或者ID 本地不存在会尝试拉取")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" centos\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orcharup/centos \n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a1s2df3a\n")])])]),s("h3",{attrs:{id:"ports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ports"}},[t._v("#")]),t._v(" ports")]),t._v(" "),s("p",[t._v("暴露端口信息 宿主机端口：容器端口映射")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3000"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8080"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"49100:22"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:8080:8080"')]),t._v("\n")])])]),s("h3",{attrs:{id:"volumes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volumes"}},[t._v("#")]),t._v(" volumes")]),t._v(" "),s("p",[t._v("数据卷所挂载路径设置 可以设置宿主机路径 数据卷名称 并可以设置访问模式")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/lib/mysql\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cache/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/tmp/apache\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ~/configs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/configs/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n")])])]),s("p",[t._v("如果路径为数据卷名称 "),s("code",[t._v("必须在文件中配置数据卷")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jre8\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8080:8080"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果是自定义创建的volumes就如下")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql_data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[t._v("#")]),t._v(" network")]),t._v(" "),s("p",[t._v("配置容器连接的网络")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("some-service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("network\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("network\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("some-network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("other-network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("h3",{attrs:{id:"healtheck"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#healtheck"}},[t._v("#")]),t._v(" healtheck")]),t._v(" "),s("p",[t._v("通过命令检查容器是否健康运行")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("healthcheck")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1m30s\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10s \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("h3",{attrs:{id:"sysctls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sysctls"}},[t._v("#")]),t._v(" sysctls")]),t._v(" "),s("p",[t._v("配置容器的内核参数")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("net.core.somaxconn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("net.ipv4.tcp_syncookies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" net.core.somaxconn=1024\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" net.ipv4.tcp_syncookies=0\n")])])]),s("h3",{attrs:{id:"ulimits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ulimits"}},[t._v("#")]),t._v(" ulimits")]),t._v(" "),s("p",[t._v("指定容器的ulimits限制值")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ulimits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nproc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nofile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("soft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40000")]),t._v("\n")])])]),s("h3",{attrs:{id:"compose的build指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compose的build指令"}},[t._v("#")]),t._v(" compose的build指令")]),t._v(" "),s("p",[t._v("build 指令\n作用：将指定的dockefile打包成指对应镜像，然后运行该镜像")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 指定Dockerfile所在目录，先根据build中的dockerfile自动构成镜像，自动运行容器\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo   ./demo   /root/demo指定上下文目录  Dockerfile所在目录 \n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerfile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dockerfile\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8081:8081"')]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello  \n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat01\n")])])]),s("h3",{attrs:{id:"外部命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外部命令"}},[t._v("#")]),t._v(" 外部命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'创建卷'")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" volume create  tomcatwebapps01 \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'查看卷'")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" volume "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'创建网桥'")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network  create bridge hello  \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'查看网桥'")]),t._v(" \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'查看容器信息'")]),t._v(" \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" inspect 容器名 \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'如果要使用自定义卷名就要手动创建卷名'")]),t._v(" \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" volume create 卷名 \n \n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'如果要使用自定义网桥就要手动创建桥'")]),t._v(" \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" bridge 桥名\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);