(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{489:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux三剑客实例详解「grep、sed-、awk」"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux三剑客实例详解「grep、sed-、awk」"}},[t._v("#")]),t._v(" Linux三剑客实例详解「grep、sed 、awk」")]),t._v(" "),s("h2",{attrs:{id:"三剑客的前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三剑客的前言"}},[t._v("#")]),t._v(" 三剑客的前言")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("blockquote",[s("p",[s("strong",[s("code",[t._v("Linux 操作文本的三大利器分别是grep、sed 、awk，简称三剑客。")])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("大师兄 awk：最擅长取列；二师兄 sed：最擅长取行；三师兄 grep：最擅长过滤。")])])])]),t._v(" "),s("h3",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("三者的功能都是处理文本，但侧重点各不相同，其中属 "),s("code",[t._v("awk")]),t._v(" 功能最强大，但也最复杂。"),s("code",[t._v("grep")]),t._v(" 更适合单纯的查找或匹配文本，"),s("code",[t._v("sed")]),t._v(" 更适合编辑匹配到的文本，"),s("code",[t._v("awk")]),t._v(" 更适合格式化文本，对文本进行较复杂格式处理。")]),t._v(" "),s("p",[s("strong",[t._v("简单概括：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("grep：数据查找定位")])]),t._v(" "),s("li",[s("code",[t._v("awk：数据切片")])]),t._v(" "),s("li",[s("code",[t._v("sed：数据修改")])])]),t._v(" "),s("h2",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("p",[t._v("正则表达式：REGular EXPression, REGEXP。我们通过特定的字符串匹配模板，来获取到所需的内容。熟练掌握好正则表达式是使用"),s("code",[t._v("Linux三剑客")]),t._v("的前提啊。")]),t._v(" "),s("h3",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v("  : 匹配任意单个字符；\n"),s("code",[t._v("[]")]),t._v(" : 匹配指定范围内的任意单个字符；\n"),s("code",[t._v("[^]")]),t._v("：匹配指定范围外的任意单个字符；")]),t._v(" "),s("h3",{attrs:{id:"字符集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符集合"}},[t._v("#")]),t._v(" 字符集合")]),t._v(" "),s("p",[s("code",[t._v("[[:digit:]]")]),t._v("：匹配单个数字；\n"),s("code",[t._v("[[:lower:]]")]),t._v("：匹配单个小写字母；\n"),s("code",[t._v("[[:upper:]]")]),t._v("：匹配单个大写字母；\n"),s("code",[t._v("[[:punct:]]")]),t._v("：匹配单个标点字符；\n"),s("code",[t._v("[[:space:]]")]),t._v("：匹配单个空白字符；\n"),s("code",[t._v("[[:alpha:]]")]),t._v("：匹配单个字母；\n"),s("code",[t._v("[[:alnum:]]")]),t._v("：匹配单个字母或数字；")]),t._v(" "),s("h3",{attrs:{id:"匹配次数-贪婪模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配次数-贪婪模式"}},[t._v("#")]),t._v(" 匹配次数（贪婪模式）")]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("：匹配其前面的字符任意次\n"),s("code",[t._v("?")]),t._v("：匹配其前面的字符0次或者1次\n"),s("code",[t._v("+")]),t._v("：匹配其前面的字符至少1次\n"),s("code",[t._v(".*")]),t._v("：任意长度的任意字符")]),t._v(" "),s("h3",{attrs:{id:"位置锚定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位置锚定"}},[t._v("#")]),t._v(" 位置锚定")]),t._v(" "),s("p",[s("code",[t._v("^")]),t._v(": 锚定行首，此字符后面的任意内容必须出现在行首\n"),s("code",[t._v("$")]),t._v(": 锚定行尾，此字符前面的任意内容必须出现在行尾\n"),s("code",[t._v("^$")]),t._v(": 空白行")]),t._v(" "),s("h3",{attrs:{id:"linux实际使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux实际使用"}},[t._v("#")]),t._v(" Linux实际使用")]),t._v(" "),s("p",[t._v("由于linux系统shell解释器的特殊处理，某些元字符在linux下具有展开式等特殊含义，在实际的使用过程中我们需要添加"),s("code",[t._v("\\")]),t._v("进行转义。\n"),s("code",[t._v("\\?")]),t._v("：匹配其前面的字符1次或0次；\n"),s("code",[t._v("\\+")]),t._v("：匹配至少一次；\n"),s("code",[t._v("\\{m,n\\}")]),t._v("：匹配其前面的字符至少m次，至多n次；\n"),s("code",[t._v("\\{1,\\}")]),t._v("：匹配前面的字符至少1次；\n"),s("code",[t._v("\\{0,3\\}")]),t._v("：匹配前面的字符0次至3次均可；")]),t._v(" "),s("blockquote",[s("p",[t._v("备注：至少0次，必须要显示的写出来；")])]),t._v(" "),s("p",[s("code",[t._v("\\<或\\b")]),t._v("：锚定词首，其后面的任意字符必须作为单词首部出现\n"),s("code",[t._v("\\>或\\b")]),t._v("：锚定词尾，其前面的任意字符必须作为单词的尾部出现")]),t._v(" "),s("h3",{attrs:{id:"分组与后向引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组与后向引用"}},[t._v("#")]),t._v(" 分组与后向引用")]),t._v(" "),s("p",[s("code",[t._v("\\(\\)")]),t._v(" "),s("code",[t._v("\\(ab\\)*")]),t._v(" "),s("code",[t._v("\\1")]),t._v("：引用第1个左括号以及与之对应的括号所包括的所有内容；\n"),s("code",[t._v("\\2")]),t._v("：引用第2个左括号以及与之对应的括号所包括的所有内容，以此类推；")]),t._v(" "),s("h2",{attrs:{id:"拓展正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拓展正则表达式"}},[t._v("#")]),t._v(" 拓展正则表达式")]),t._v(" "),s("p",[t._v("可以看到标准正则表达的使用过程中，许多符号都需要转义，这在工作中带来了一定的不便，因此扩展的正则表达式便出现了。 "),s("code",[t._v('"用egrep"')])]),t._v(" "),s("h3",{attrs:{id:"字符匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符匹配"}},[t._v("#")]),t._v(" 字符匹配：")]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v("：匹配单个字符；\n"),s("code",[t._v("[abc]")]),t._v("：包含abc任意一个字符\n"),s("code",[t._v("[^abc]")]),t._v("：不包含abc任意一个字符")]),t._v(" "),s("h3",{attrs:{id:"次数匹配-不用再转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#次数匹配-不用再转义"}},[t._v("#")]),t._v(" 次数匹配（不用再转义）：")]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("：匹配前一个字符任意次；\n"),s("code",[t._v("?")]),t._v("：匹配其前面的字符1次或0次；\n"),s("code",[t._v("+")]),t._v("：匹配其前面的字符至少1次；\n"),s("code",[t._v("{m,n}")]),t._v("：匹配其前面的字符至少m次，至多n次；")]),t._v(" "),s("h3",{attrs:{id:"位置锚定-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位置锚定-2"}},[t._v("#")]),t._v(" 位置锚定：")]),t._v(" "),s("p",[t._v("对比使用方式："),s("code",[t._v("^")]),t._v(" 和 "),s("code",[t._v("$")]),t._v("\n这里要注意的是对于词首定位和词尾定位，分别是"),s("code",[t._v("\\<")]),t._v(" 和 "),s("code",[t._v("\\>")]),t._v("，依然需要加上反斜杠；")]),t._v(" "),s("h3",{attrs:{id:"分组-不用再转义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组-不用再转义"}},[t._v("#")]),t._v(" 分组（不用再转义）：")]),t._v(" "),s("p",[s("code",[t._v("()")]),t._v("：分组\n"),s("code",[t._v("\\1")]),t._v(", "),s("code",[t._v("\\2")]),t._v(", "),s("code",[t._v("\\3")]),t._v("：分别对应第n个括号所匹配的内容；")]),t._v(" "),s("h3",{attrs:{id:"或运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#或运算"}},[t._v("#")]),t._v(" 或运算")]),t._v(" "),s("p",[s("code",[t._v("|")]),t._v("： 可以同时取并集；")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：C|cat表示的是C或cat（表示的是整个部分）")])]),t._v(" "),s("p",[t._v("可以看到，使用扩展的正则表达式可以省略很多的转义符号，这尤其在写sed语句时极大的提高了代码的可读性。建议优先使用扩展的正则表达式。")]),t._v(" "),s("h2",{attrs:{id:"grep命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep命令"}},[t._v("#")]),t._v(" grep命令")]),t._v(" "),s("h3",{attrs:{id:"grep相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep相关命令"}},[t._v("#")]),t._v(" grep相关命令")]),t._v(" "),s("p",[t._v("grep命令家族由grep, egrep, fgrep 三个子命令组成，适用于不同的场景。具体如下：")]),t._v(" "),s("h4",{attrs:{id:"命令描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令描述"}},[t._v("#")]),t._v(" 命令描述")]),t._v(" "),s("p",[t._v("grep 原生的grep命令，使用“标准正则表达式”作为匹配标准。\negrep 扩展的grep命令，相当于"),s("code",[t._v("$(grep -E)")]),t._v("，使用“扩展正则表达式”作为匹配标准。\nfgrep 简化版的grep命令，不支持正则表达式，但搜索速度快，系统资源使用率低。")]),t._v(" "),s("h4",{attrs:{id:"使用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方法"}},[t._v("#")]),t._v(" 使用方法")]),t._v(" "),s("p",[s("strong",[t._v("语法")]),t._v(" "),s("code",[t._v("grep [options] PATTERN [FILE...]")])]),t._v(" "),s("p",[s("strong",[t._v("options部分")])]),t._v(" "),s("p",[s("code",[t._v("-n")]),t._v(" ：显示行号")]),t._v(" "),s("p",[s("code",[t._v("-w")]),t._v(" ：被匹配的文本只能是单词，而不能是单词中的某一部分，如文本中有liker，而我搜寻的只是like，就可以使用-w选项来避免匹配liker")]),t._v(" "),s("p",[s("code",[t._v("-c")]),t._v(" ：显示总共有多少行被匹配到了，而不是显示被匹配到的内容，注意如果同时使用-cv选项是显示有多少行没有被匹配到。")]),t._v(" "),s("p",[s("code",[t._v("-A")]),t._v("  n：显示匹配到的字符串所在的行及其后n行，after")]),t._v(" "),s("p",[s("code",[t._v("-B")]),t._v("  n：显示匹配到的字符串所在的行及其前n行，before")]),t._v(" "),s("p",[s("code",[t._v("-C")]),t._v("  n：显示匹配到的字符串所在的行及其前后各n行，context"),s("code",[t._v("-i")]),t._v("：忽略大小写\n"),s("code",[t._v("--color")]),t._v("：高亮匹配上的字符串\n"),s("code",[t._v("-v")]),t._v(": 显示没有被模式匹配到的行\n"),s("code",[t._v("-o")]),t._v("：只显示被模式匹配到的字符串\n"),s("code",[t._v("-E")]),t._v("：使用扩展的正则表达式，"),s("code",[t._v("egrep=grep -E")])]),t._v(" "),s("p",[s("strong",[t._v("PATTERN部分")]),t._v("\n以字符串的方式给定匹配模板，可以使用普通字符串以及正则表达式(标准&扩展)。")]),t._v(" "),s("p",[s("strong",[t._v("FILE部分")]),t._v("\n需要查找内容的文件。")]),t._v(" "),s("h4",{attrs:{id:"示例数据文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例数据文件"}},[t._v("#")]),t._v(" "),s("strong",[t._v("示例数据文件")])]),t._v(" "),s("p",[s("strong",[t._v("请将以下数据剪切粘贴到一个名为 “sampler.log” 的文件中:")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". boot\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". book\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". booze\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". machine\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(". boots\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(". bungie\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(". bark\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(". aardvark\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(". broken"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$tuff")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(". robots\n")])])]),s("blockquote",[s("h4",{attrs:{id:"grep最简单的例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep最简单的例子"}},[t._v("#")]),t._v(" grep最简单的例子")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("在本例中，grep 将遍历文件 “sampler.log” 的每一行，并打印出其中的每一行 包含单词“boo”:")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" sampler.log\n\n boot\n book\n booze\n boots\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("strong",[t._v("但是如果你操作的是大型文件，就会出现这种情况：如果这些行标识了文件中的"),s("code",[t._v("哪一行")]),t._v("，它们是什么，可能对你更有用，如果需要在编辑器中打开文件，那么可以更容易地跟踪特定字符串做一些改变。 这时候可以"),s("code",[t._v("通过添加-n参数来实现")]),t._v(":")])])]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("这产生了一个更有用的结果，解释了哪些行与搜索字符串匹配:")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" sampler.log\n\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":boot\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":book\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":booze\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":boots\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("另一个有趣的"),s("code",[t._v("参数是 -v")]),t._v("，它会"),s("code",[t._v("打印出相反的结果")]),t._v("。换句话说，grep 将打印"),s("code",[t._v("所有与搜索字符串不匹配的行")]),t._v("，而不是打印与之匹配的行。")])])]),t._v(" "),s("p",[t._v("​\t"),s("strong",[t._v("在下列情况下，grep 将打印不包含字符串 “boo” 的每一行，并显示行号，如上一个例子所示")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-vn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" sampler.log\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":machine\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":bungie\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":bark\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":aardvark\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":broken"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$tuff")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":robots\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[s("code",[t._v("c 选项")]),t._v("告诉grep"),s("code",[t._v("抑制匹配行的打印")]),t._v("，"),s("code",[t._v("只显示匹配行的数量")]),t._v("，匹配查询的行。 例如,下面将打印数字4，因为有4个在 "),s("code",[t._v("sampler.log")]),t._v(" 中出现 “boo”。")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" sampler.log\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[s("strong",[s("code",[t._v("l 选项")]),t._v("只打印查询中具有与"),s("code",[t._v("搜索匹配行的文件的文件名字符串")]),t._v("。 如果你想在多个文件中搜索相同的字符串，这将非常有用。像这样:")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" *\n\nsampler.log\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[s("strong",[t._v("对于搜索非代码文件，一个更"),s("code",[t._v("有用的选项是-i")]),t._v("，"),s("code",[t._v("忽略大小写")]),t._v("。这个选项将处理在匹配搜索字符串时，大小写相等。 在下面的例子中，即使搜索字符串是大写的，包含“boo”的行也会被打印出来。")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BOO"')]),t._v(" sampler.log\n\nboot\nbook\nbooze\nboots\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[s("strong",[s("code",[t._v("x 选项")]),t._v("只精确匹配。换句话说，以下命令搜索没有结果，"),s("code",[t._v('因为没有一行只包含"boo"')])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boo"')]),t._v(" sampler.log\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[s("strong",[t._v("最后，"),s("code",[t._v("-A 允许你指定额外的上下文件行")]),t._v("，这样就得到了搜索字符串额外行，例如")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mach"')]),t._v(" sampler.log\n\nmachine\nboots\nbungie\n")])])]),s("h3",{attrs:{id:"grep使用正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grep使用正则表达式"}},[t._v("#")]),t._v(" grep使用正则表达式")]),t._v(" "),s("h4",{attrs:{id:"基本匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本匹配"}},[t._v("#")]),t._v(" 基本匹配：")]),t._v(" "),s("p",[s("strong",[t._v("正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。 例如：一个正则表达式 "),s("code",[t._v("the")]),t._v("，它表示一个规则：由字母"),s("code",[t._v("t")]),t._v("开始，接着是"),s("code",[t._v("h")]),t._v("，再接着是"),s("code",[t._v("e")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" The fat "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" sat on the mat.\n")])])]),s("h4",{attrs:{id:"元字符-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符-2"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),s("p",[s("strong",[t._v("正则表达式主要依赖于元字符。 元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("元字符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("句号匹配任意单个字符除了换行符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[ ]")]),t._v(" "),s("td",[t._v("字符种类。匹配方括号内的任意字符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("[^ ]")]),t._v(" "),s("td",[t._v("否定的字符种类。匹配除了方括号里的任意字符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("匹配>=0个重复的在*号之前的字符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("匹配>=1个重复的+号前的字符。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("标记?之前的字符为可选.")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("{n,m}")]),t._v(" "),s("td",[t._v("匹配num个大括号之前的字符或字符集 (n <= num <= m).")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("(xyz)")]),t._v(" "),s("td",[t._v("字符集，匹配与 xyz 完全相等的字符串.")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("|")]),t._v(" "),s("td",[t._v("或运算符，匹配符号前或后的字符.")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("\\")]),t._v(" "),s("td",[t._v("转义字符,用于匹配一些保留的字符 "),s("code",[t._v("[ ] ( ) { } . * + ? ^ $ \\ |")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("^")]),t._v(" "),s("td",[t._v("从开始行开始匹配.")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("$")]),t._v(" "),s("td",[t._v("从末端开始匹配.")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v(".*")]),t._v(" "),s("td",[t._v("所有内容")]),t._v(" "),s("td",[t._v("搭配.*")])]),t._v(" "),s("tr",[s("td",[t._v("^$")]),t._v(" "),s("td",[t._v("空行")]),t._v(" "),s("td",[t._v("搭配^$")])])])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"将例子使用如下文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将例子使用如下文件"}},[t._v("#")]),t._v(" 将例子使用如下文件：")]),t._v(" "),s("p",[s("strong",[t._v("[root@shell-centos-1 ~]# cat a.txt")]),t._v(" "),s("strong",[s("code",[t._v("The car parked in the garage.")])])]),t._v(" "),s("p",[s("strong",[t._v("[root@shell-centos-1 ~]# cat b.txt")]),t._v(" "),s("strong",[s("code",[t._v("A garage is a good place to park a car.")])])]),t._v(" "),s("p",[s("strong",[t._v("[root@shell-centos-1 ~]# cat c.txt")]),t._v(" "),s("strong",[s("code",[t._v("The fat cat sat on the concatenation.")])])]),t._v(" "),s("p",[s("strong",[t._v("[root@shell-centos-1 ~]# cat d.txt")]),t._v(" "),s("strong",[s("code",[t._v("The fat cat sat on the mat.")])])]),t._v(" "),s("p",[s("strong",[t._v("[root@shell-centos-1 ~]# cat  e.txt")]),t._v(" "),s("strong",[s("code",[t._v("The number was 9.9997 but we rounded it off to 10.0.")])])])]),t._v(" "),s("h4",{attrs:{id:"点运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点运算符"}},[t._v("#")]),t._v(" 点运算符 "),s("code",[t._v(".")])]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v("是元字符中最简单的例子。 "),s("code",[t._v(".")]),t._v("匹配任意单个字符，但不匹配换行符。 例如，表达式"),s("code",[t._v(".ar")]),t._v("匹配一个任意字符后面跟着是"),s("code",[t._v("a")]),t._v("和"),s("code",[t._v("r")]),t._v("的字符串。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep .ar a.txt")]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("car par")]),t._v("ked in the "),s("code",[t._v("gar")]),t._v("age.")])]),t._v(" "),s("h4",{attrs:{id:"字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集 []")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep [Th] a.txt")]),t._v("\n")])])]),s("p",[s("code",[t._v("Th")]),t._v("e car parked in t"),s("code",[t._v("h")]),t._v("e garage.")])]),t._v(" "),s("p",[t._v("方括号的句号就表示句号。 表达式 "),s("code",[t._v("ar[.]")]),t._v(" 匹配 "),s("code",[t._v("ar.")]),t._v("字符串")]),t._v(" "),s("blockquote",[s("p",[t._v("[root@shell-centos-1 ~]# echo  A garage is a good place to park a car. > b.txt  #使用该测试文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep  ar[.] b.txt")]),t._v("\n")])])]),s("p",[t._v("A garage is a good place to park a c"),s("code",[t._v("ar.")])])]),t._v(" "),s("h4",{attrs:{id:"否定字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#否定字符集"}},[t._v("#")]),t._v(" 否定字符集")]),t._v(" "),s("p",[t._v("一般来说 "),s("code",[t._v("^")]),t._v(" 表示一个字符串的开头，但它用在一个方括号的开头的时候，它表示这个字符集是否定的。 例如，表达式"),s("code",[t._v("[^c]ar")]),t._v(" 匹配一个后面跟着"),s("code",[t._v("ar")]),t._v("的除了"),s("code",[t._v("c")]),t._v("的任意字符。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep [^c]ar a.txt")]),t._v("\n")])])]),s("p",[t._v("The car "),s("code",[t._v("par")]),t._v("ked in the "),s("code",[t._v("gar")]),t._v("age.")])]),t._v(" "),s("h4",{attrs:{id:"重复次数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重复次数"}},[t._v("#")]),t._v(" 重复次数")]),t._v(" "),s("p",[t._v("后面跟着元字符 "),s("code",[t._v("+")]),t._v("，"),s("code",[t._v("*")]),t._v(" or "),s("code",[t._v("?")]),t._v(" 的，用来指定匹配子模式的次数。 这些元字符在不同的情况下有着不同的意思。")]),t._v(" "),s("h4",{attrs:{id:"号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号"}},[t._v("#")]),t._v(" "),s("code",[t._v("*")]),t._v(" 号")]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("号匹配 在"),s("code",[t._v("*")]),t._v("之前的字符出现"),s("code",[t._v("大于等于0")]),t._v("次。 例如，表达式 "),s("code",[t._v("a*")]),t._v(" 匹配0或更多个以a开头的字符。表达式"),s("code",[t._v("[a-z]*")]),t._v(" 匹配一个行中所有以小写字母开头的字符串。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# grep "[a-z]*" a.txt')]),t._v("\n")])])]),s("p",[t._v("T"),s("code",[t._v("he car parked in the garage")]),t._v(".")])]),t._v(" "),s("p",[s("code",[t._v("*")]),t._v("字符和"),s("code",[t._v(".")]),t._v("字符搭配可以匹配所有的字符"),s("code",[t._v(".*")]),t._v("。 "),s("code",[t._v("*")]),t._v("和表示匹配空格的符号"),s("code",[t._v("\\s")]),t._v("连起来用，如表达式"),s("code",[t._v("\\s*cat\\s*")]),t._v("匹配0或更多个空格开头和0或更多个空格结尾的cat字符串。")]),t._v(" "),s("blockquote",[s("p",[t._v("[root@shell-centos-1 ~]# echo The fat cat sat on the concatenation. > c.txt  #这里使用该测试文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# grep "\\s*cat\\s*" c.txt')]),t._v("\n")])])]),s("p",[t._v("The fat "),s("code",[t._v("cat")]),t._v(" sat on the con"),s("code",[t._v("cat")]),t._v("enation.")])]),t._v(" "),s("h4",{attrs:{id:"号-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("+")]),t._v(" 号")]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v("号匹配"),s("code",[t._v("+")]),t._v("号之前的字符出现 >=1 次。 例如表达式"),s("code",[t._v("c.+t")]),t._v(" 匹配以首字母"),s("code",[t._v("c")]),t._v("开头以"),s("code",[t._v("t")]),t._v("结尾，中间跟着至少一个字符的字符串。")]),t._v(" "),s("blockquote",[s("p",[t._v("[root@shell-centos-1 ~]#  echo The fat cat sat on the mat. > d.txt     #这里使用该测试文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "c.+t" d.txt')]),t._v("\n")])])]),s("p",[t._v("The fat "),s("code",[t._v("cat sat on the mat")]),t._v(".")])]),t._v(" "),s("h4",{attrs:{id:"号-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号-3"}},[t._v("#")]),t._v(" "),s("code",[t._v("?")]),t._v(" 号")]),t._v(" "),s("p",[t._v("在正则表达式中元字符 "),s("code",[t._v("?")]),t._v(" 标记在符号前面的字符为可选，即出现 0 或 1 次。 例如，表达式 "),s("code",[t._v("[T]?he")]),t._v(" 匹配字符串 "),s("code",[t._v("he")]),t._v(" 和 "),s("code",[t._v("The")]),t._v("。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# grep "[T]\\?he" a.txt')]),t._v("\n")])])]),s("p",[s("code",[t._v("The")]),t._v(" car parked in "),s("code",[t._v("the")]),t._v(" garage.")])]),t._v(" "),s("h4",{attrs:{id:"号-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号-4"}},[t._v("#")]),t._v(" "),s("code",[t._v("{}")]),t._v(" 号")]),t._v(" "),s("p",[t._v("在正则表达式中 "),s("code",[t._v("{}")]),t._v(" 是一个量词，常用来限定一个或一组字符可以重复出现的次数。 例如， 表达式 "),s("code",[t._v("[0-9]{2,3}")]),t._v(" 匹配最少 2 位最多 3 位 0~9 的数字。")]),t._v(" "),s("blockquote",[s("p",[t._v("[root@shell-centos-1 ~]# echo The number was 9.9997 but we rounded it off to 10.0. > e.txt  #使用该测试文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "[0-9]{2,3}" e.txt')]),t._v("\n")])])]),s("p",[t._v("The number was 9."),s("code",[t._v("999")]),t._v("7 but we rounded it off to "),s("code",[t._v("10")]),t._v(".0.")])]),t._v(" "),s("p",[t._v("我们可以省略第二个参数。 例如，"),s("code",[t._v("[0-9]{2,}")]),t._v(" 匹配至少两位 0~9 的数字。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "[0-9]{2,}" e.txt')]),t._v("\n")])])]),s("p",[t._v("The number was 9."),s("code",[t._v("9997")]),t._v(" but we rounded it off to "),s("code",[t._v("10")]),t._v(".0.")])]),t._v(" "),s("p",[t._v("如果逗号也省略掉则表示重复固定的次数。 例如，"),s("code",[t._v("[0-9]{3}")]),t._v(" 匹配3位数字")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "[0-9]{3}" e.txt')]),t._v("\n")])])]),s("p",[t._v("The number was 9."),s("code",[t._v("999")]),t._v("7 but we rounded it off to 10.0.")])]),t._v(" "),s("h4",{attrs:{id:"特征标群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特征标群"}},[t._v("#")]),t._v(" "),s("code",[t._v("(...)")]),t._v(" 特征标群")]),t._v(" "),s("p",[t._v("特征标群是一组写在 "),s("code",[t._v("(...)")]),t._v(" 中的子模式。"),s("code",[t._v("(...)")]),t._v(" 中包含的内容将会被看成一个整体，和数学中小括号（ ）的作用相同。例如, 表达式 "),s("code",[t._v("(ab)*")]),t._v(" 匹配连续出现 0 或更多个 "),s("code",[t._v("ab")]),t._v("。如果没有使用 "),s("code",[t._v("(...)")]),t._v(" ，那么表达式 "),s("code",[t._v("ab*")]),t._v(" 将匹配连续出现 0 或更多个 "),s("code",[t._v("b")]),t._v(" 。再比如之前说的 "),s("code",[t._v("{}")]),t._v(" 是用来表示前面一个字符出现指定次数。但如果在 "),s("code",[t._v("{}")]),t._v(" 前加上特征标群 "),s("code",[t._v("(...)")]),t._v(" 则表示整个标群内的字符重复 N 次。")]),t._v(" "),s("p",[t._v("我们还可以在 "),s("code",[t._v("()")]),t._v(" 中用或字符 "),s("code",[t._v("|")]),t._v(" 表示或。例如，"),s("code",[t._v("(c|g|p)ar")]),t._v(" 匹配 "),s("code",[t._v("car")]),t._v(" 或 "),s("code",[t._v("gar")]),t._v(" 或 "),s("code",[t._v("par")]),t._v(".")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "(c|g|p)ar" a.txt')]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("car par")]),t._v("ked in the "),s("code",[t._v("gar")]),t._v("age.")])]),t._v(" "),s("h4",{attrs:{id:"或运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#或运算符"}},[t._v("#")]),t._v(" "),s("code",[t._v("|")]),t._v(" 或运算符")]),t._v(" "),s("p",[t._v("或运算符就表示或，用作判断条件。")]),t._v(" "),s("p",[t._v("例如 "),s("code",[t._v("(T|t)he|car")]),t._v(" 匹配 "),s("code",[t._v("(T|t)he")]),t._v(" 或 "),s("code",[t._v("car")]),t._v("。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "(T|t)he|car" a.txt')]),t._v("\n")])])]),s("p",[s("code",[t._v("The car")]),t._v(" parked in "),s("code",[t._v("the")]),t._v(" garage.")])]),t._v(" "),s("h4",{attrs:{id:"转码特殊字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转码特殊字符"}},[t._v("#")]),t._v(" 转码特殊字符")]),t._v(" "),s("p",[t._v("反斜线 "),s("code",[t._v("\\")]),t._v(" 在表达式中用于转码紧跟其后的字符。用于指定 "),s("code",[t._v("{ } [ ] / \\ + * . $ ^ | ?")]),t._v(" 这些特殊字符。如果想要匹配这些特殊字符则要在其前面加上反斜线 "),s("code",[t._v("\\")]),t._v("。")]),t._v(" "),s("p",[t._v("例如 "),s("code",[t._v(".")]),t._v(" 是用来匹配除换行符外的所有字符的。如果想要匹配句子中的 "),s("code",[t._v(".")]),t._v(" 则要写成 "),s("code",[t._v("\\.")]),t._v(" 以下这个例子 "),s("code",[t._v("\\.?")]),t._v("是选择性匹配"),s("code",[t._v(".")])]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "(f|c|m)at\\.?" d.txt')]),t._v("\n")])])]),s("p",[t._v("The "),s("code",[t._v("fat cat")]),t._v(" sat on the "),s("code",[t._v("mat")]),t._v(".")])]),t._v(" "),s("h4",{attrs:{id:"锚点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锚点"}},[t._v("#")]),t._v(" 锚点")]),t._v(" "),s("p",[t._v("在正则表达式中，想要匹配指定开头或结尾的字符串就要使用到锚点。"),s("code",[t._v("^")]),t._v(" 指定开头，"),s("code",[t._v("$")]),t._v(" 指定结尾。")]),t._v(" "),s("h4",{attrs:{id:"号-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号-5"}},[t._v("#")]),t._v(" "),s("code",[t._v("^")]),t._v(" 号")]),t._v(" "),s("p",[s("code",[t._v("^")]),t._v(" 用来检查匹配的字符串是否在所匹配字符串的开头。")]),t._v(" "),s("p",[t._v("例如，在 "),s("code",[t._v("abc")]),t._v(" 中使用表达式 "),s("code",[t._v("^a")]),t._v(" 会得到结果 "),s("code",[t._v("a")]),t._v("。但如果使用 "),s("code",[t._v("^b")]),t._v(" 将匹配不到任何结果。因为在字符串 "),s("code",[t._v("abc")]),t._v(" 中并不是以 "),s("code",[t._v("b")]),t._v(" 开头。")]),t._v(" "),s("p",[t._v("例如，"),s("code",[t._v("^(T|t)he")]),t._v(" 匹配以 "),s("code",[t._v("The")]),t._v(" 或 "),s("code",[t._v("the")]),t._v(" 开头的字符串。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "^(T|t)he" a.txt')]),t._v("\n")])])]),s("p",[t._v("The car parked in the garage.")])]),t._v(" "),s("h4",{attrs:{id:"号-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#号-6"}},[t._v("#")]),t._v(" "),s("code",[t._v("$")]),t._v(" 号")]),t._v(" "),s("p",[t._v("同理于 "),s("code",[t._v("^")]),t._v(" 号，"),s("code",[t._v("$")]),t._v(" 号用来匹配字符是否是最后一个。")]),t._v(" "),s("p",[t._v("例如，"),s("code",[t._v("(at\\.)$")]),t._v(" 匹配以 "),s("code",[t._v("at.")]),t._v(" 结尾的字符串。")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "(at\\.)" d.txt')]),t._v("\n")])])]),s("p",[t._v("The fat cat sat on the m"),s("code",[t._v("at")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-1 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# egrep "(at\\.)$" d.txt')]),t._v("\n")])])]),s("p",[t._v("The fat cat sat on the m"),s("code",[t._v("at")]),t._v(".")])]),t._v(" "),s("h4",{attrs:{id:"简写字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简写字符集"}},[t._v("#")]),t._v(" 简写字符集")]),t._v(" "),s("p",[t._v("则表达式提供一些常用的字符集简写。如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("简写")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(".")]),t._v(" "),s("td",[t._v("除换行符外的所有字符")])]),t._v(" "),s("tr",[s("td",[t._v("\\w")]),t._v(" "),s("td",[t._v("匹配所有字母数字，等同于 "),s("code",[t._v("[a-zA-Z0-9_]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\W")]),t._v(" "),s("td",[t._v("匹配所有非字母数字，即符号，等同于： "),s("code",[t._v("[^\\w]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\d")]),t._v(" "),s("td",[t._v("匹配数字： "),s("code",[t._v("[0-9]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\D")]),t._v(" "),s("td",[t._v("匹配非数字： "),s("code",[t._v("[^\\d]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\s")]),t._v(" "),s("td",[t._v("匹配所有空格字符，等同于： "),s("code",[t._v("[\\t\\n\\f\\r\\p{Z}]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\S")]),t._v(" "),s("td",[t._v("匹配所有非空格字符： "),s("code",[t._v("[^\\s]")])])]),t._v(" "),s("tr",[s("td",[t._v("\\f")]),t._v(" "),s("td",[t._v("匹配一个换页符")])]),t._v(" "),s("tr",[s("td",[t._v("\\n")]),t._v(" "),s("td",[t._v("匹配一个换行符")])]),t._v(" "),s("tr",[s("td",[t._v("\\r")]),t._v(" "),s("td",[t._v("匹配一个回车符")])]),t._v(" "),s("tr",[s("td",[t._v("\\t")]),t._v(" "),s("td",[t._v("匹配一个制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\v")]),t._v(" "),s("td",[t._v("匹配一个垂直制表符")])]),t._v(" "),s("tr",[s("td",[t._v("\\p")]),t._v(" "),s("td",[t._v("匹配 CR/LF（等同于 "),s("code",[t._v("\\r\\n")]),t._v("），用来匹配 DOS 行终止符")])])])]),t._v(" "),s("h2",{attrs:{id:"sed命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed命令"}},[t._v("#")]),t._v(" sed命令")]),t._v(" "),s("h3",{attrs:{id:"简介-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("简介")])]),t._v(" "),s("p",[s("strong",[t._v("sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，"),s("code",[t._v("称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容")]),t._v("，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。"),s("code",[t._v("Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。")])])]),t._v(" "),s("h3",{attrs:{id:"sed的命令参数详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed的命令参数详解"}},[t._v("#")]),t._v(" Sed的命令参数详解")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@www ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed [-nefr] [动作]")]),t._v("\n\n选项与参数：\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" ：使用安静"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("silent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("模式。在一般 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" 参数后，则只有经过sed 特殊处理的那一行"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("或者动作"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("才会被列出来。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" ：直接在命令列模式上进行 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" 的动作编辑；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" ：直接将 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" 的动作写在一个文件内， "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" filename 则可以运行 filename 内的 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" 动作；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" ：sed 的动作支持的是延伸型正规表示法的语法。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认是基础正规表示法语法"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" ：直接修改读取的文件内容，而不是输出到终端。\n\n动作说明： "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(",n2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("function\nn1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作是需要在 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" 到 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" 行之间进行的，则『 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10,20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("动作行为"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 』\n\nfunction：\na ：新增， a 的后面可以接字串，而这些字串会在新的一行出现"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("目前的下一行"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("～\nc ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！\nd ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；\ni ：插入， i 的后面可以接字串，而这些字串会在新的一行出现"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("目前的上一行"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\np ：列印，亦即将某个选择的数据印出。通常 p 会与参数 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" 一起运行～\ns ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(",20s/old/new/g \n")])])]),s("h3",{attrs:{id:"sed的命令格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed的命令格式"}},[t._v("#")]),t._v(" Sed的命令格式")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("命令")]),t._v(" "),s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("（s）sed命令功能（g）修饰符")]),t._v(" "),s("th",[t._v("参数（文件）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("sed")]),t._v(" "),s("td",[t._v("-r")]),t._v(" "),s("td",[t._v("'s#oldboy#oldgirl#g'")]),t._v(" "),s("td",[t._v("oldboy.txt")])])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("备注：前一步中执行的结果，并没有写回到a.txt中，如果想写回，则需要这样（添加-i参数）")])])]),t._v(" "),s("h3",{attrs:{id:"sed核心应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed核心应用"}},[t._v("#")]),t._v(" Sed核心应用")]),t._v(" "),s("h4",{attrs:{id:"sed-查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed-查找"}},[t._v("#")]),t._v(" Sed-查找")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("查找格式")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("'1p'")]),t._v(" "),s("td",[t._v("指定行号进行查找")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'1,5p'")]),t._v(" "),s("td",[t._v("指定行号范围进行查找")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'/lidao/p'")]),t._v(" "),s("td",[t._v("类似于grep过滤，//里面可以写正则")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'/10:00/,/11:00/p'")]),t._v(" "),s("td",[t._v("表示范围的过滤")]),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"示例的文件使用如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例的文件使用如下"}},[t._v("#")]),t._v(" 示例的文件使用如下")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n")])])]),s("h4",{attrs:{id:"指定行号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定行号"}},[t._v("#")]),t._v(" 指定行号")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n  '3p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n")])])]),s("h4",{attrs:{id:"默认输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认输出"}},[t._v("#")]),t._v(" 默认输出")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed  '' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n")])])]),s("h4",{attrs:{id:"指定行号范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定行号范围"}},[t._v("#")]),t._v(" 指定行号范围")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看1-3行的范围")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n '1,3p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看3-6行的范围")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n '3,6p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看4-最后一行的范围 这里使用$p")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed  -n '4,$p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n")])])]),s("h4",{attrs:{id:"过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过滤"}},[t._v("#")]),t._v(" 过滤")]),t._v(" "),s("p",[s("strong",[t._v("过滤的方式又别分为正则表达式过滤和范围过滤两种")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("正则过滤的方式\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n '/oldboy/p' oldboy.txt   #就过滤oldboy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n '/996/p' oldboy.txt   #过滤996")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed  -n '/[45]/p' oldboy.txt  #过滤使用正则4 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -nr '/[0-9]{3}/p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n范围过滤的方式\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -n '/102/,/105/p' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("表示范围过滤的时候，如果一直没有给到末尾的范围，就会一直显示到末尾。")])])]),t._v(" "),s("h4",{attrs:{id:"sed-删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed-删除"}},[t._v("#")]),t._v(" Sed-删除")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("删除格式")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("'2p'")]),t._v(" "),s("td",[t._v("指定行号进行查找")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'1,5d'")]),t._v(" "),s("td",[t._v("指定行号范围进行查找")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'/lidao/d'")]),t._v(" "),s("td",[t._v("类似于grep过滤，//里面可以写正则")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("'/10:00/,/11:00/d'")]),t._v(" "),s("td",[t._v("表示范围的过滤")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("1，/oldboy/d")]),t._v(" "),s("td",[t._v("混合（了解）")]),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"最常规的删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最常规的删除"}},[t._v("#")]),t._v(" 最常规的删除")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '3d' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '2d' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '2,3d' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '/lidao/d' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n")])])]),s("p",[t._v("删除文件中的空行和包含#号的行数")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# egrep -v '^$|#' /etc/ssh/sshd_config")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -r '/^$|#/d' /etc/ssh/sshd_config")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -nr '/^$|#/!p' /etc/ssh/sshd_config")]),t._v("\n")])])]),s("h4",{attrs:{id:"sed-增加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed-增加"}},[t._v("#")]),t._v(" Sed-增加")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("增加格式")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("c")]),t._v(" "),s("td",[t._v("replace替代这行的内容")])]),t._v(" "),s("tr",[s("td",[t._v("a")]),t._v(" "),s("td",[t._v("append追加，向指定的行或者每一行追加内容（行的后面）")])]),t._v(" "),s("tr",[s("td",[t._v("i")]),t._v(" "),s("td",[t._v("insert插入，向指定的行或者每一行插入内容")])])])]),t._v(" "),s("h4",{attrs:{id:"最常规的增加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最常规的增加"}},[t._v("#")]),t._v(" 最常规的增加")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat oldboy.txt   #这是最初始的文件内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '3a 996,lidao996.UFO' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("996")]),t._v(",lidao996.UFO\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在地三行的后面添加内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '3i 996,lidao996.UFO' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("996")]),t._v(",lidao996.UFO\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在第三行的前面添加内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed '3c 996,lidao996.UFO' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("996")]),t._v(",lidao996.UFO\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#替换第三行然后更改为需要替换的内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n")])])]),s("p",[t._v("向文件中追加多行内容")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("比如向sshd_config里面追加多行内容\nUseDNS no\nGSSAPIAUTCATION no\nPermitRootLogin no\n\n方法1： \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" EOF\n\n方法2： \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$a UseDNS no\\nGSSAPIAUTCATION no\\nPermitRootLogin no'")]),t._v(" config\n\n")])])]),s("h4",{attrs:{id:"sed-替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed-替换"}},[t._v("#")]),t._v(" Sed-替换")]),t._v(" "),s("p",[t._v("s--\x3e sub substitute替换")]),t._v(" "),s("p",[t._v("g--\x3e global 全局替换，sed替换每行所有匹配的内容，sed默认只是替换每行第一个匹配的内容")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("替换格式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("s###g")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("s///g")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("s@@@g")])])])]),t._v(" "),s("h4",{attrs:{id:"最常规的替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最常规的替换"}},[t._v("#")]),t._v(" 最常规的替换")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed  's#[0-9]##g' oldboy.txt")]),t._v("\n,oldboy,CEO\n,zhangyao,CTO\n,李导,C\n,李导,C\n,yy,CFO\n,feixue,CIO\n,lidao,COCO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed 's#[0-9]##' oldboy.txt")]),t._v("\n01,oldboy,CEO\n02,zhangyao,CTO\n03,李导996,C00\n03,李导996,C00\n04,yy,CFO\n05,feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(",lidao,COCO\n")])])]),s("blockquote",[s("h4",{attrs:{id:"sed小总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sed小总结"}},[t._v("#")]),t._v(" Sed小总结：")])]),t._v(" "),s("p",[s("strong",[t._v("删除：d命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2d'")]),t._v(" example\t\t\t-----删除example文件的第二行。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2,$d'")]),t._v(" example\t\t-----删除example文件的第二行到末尾所有行。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$d'")]),t._v(" example\t\t\t-----删除example文件的最后一行。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/'")]),t._v("d example\t\t-----删除example文件所有包含test的行。\n")])])]),s("p",[s("strong",[t._v("替换：s命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/test/mytest/g'")]),t._v(" example\t\t\t\t-----在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/^test/mytest/p'")]),t._v(" example\t\t\t-----"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/^192.168.0.1/&localhost/'")]),t._v(" example\t-----"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\\(love\\)able/\\1rs/p'")]),t._v(" example\t-----love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s#10#100#g'")]),t._v(" example\t\t\t\t\t-----不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。")]),t._v("\n")])])]),s("p",[s("strong",[t._v("选定行的范围：逗号")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/,/check/p'")]),t._v(" example\t\t\t-----所有在模板test和check所确定的范围内的行都被打印。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5,/^test/p'")]),t._v(" example\t\t\t\t-----打印从第五行开始到第一个包含以test开始的行之间的所有行。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/,/check/s/$/sed test/'")]),t._v(" example\t-----对于模板test和west之间的行，每行的末尾用字符串sed test替换。\n")])])]),s("p",[s("strong",[t._v("多点编辑：e命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1,5d'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/test/check/'")]),t._v(" example-----"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--expression")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/test/check/'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--expression")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/love/d'")]),t._v(" example-----一个比-e更好的命令是--expression。它能给sed表达式赋值。\n")])])]),s("p",[s("strong",[t._v("从文件读入：r命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/r file'")]),t._v(" example-----file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。\n")])])]),s("p",[s("strong",[t._v("写入文件：w命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/w file'")]),t._v(" example-----在example中所有包含test的行都被写入file里。\n")])])]),s("p",[s("strong",[t._v("追加命令：a命令")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^test/a\\---\x3ethis is a example'")]),t._v(" example"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("-----"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'this is a example'")]),t._v("被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。\n")])])]),s("p",[t._v("插入：i命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test/i\\new line-------------------------'")]),t._v(" example如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。\n")])])]),s("h4",{attrs:{id:"使用sed修改配置文件示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用sed修改配置文件示例"}},[t._v("#")]),t._v(" 使用Sed修改配置文件示例")]),t._v(" "),s("p",[s("strong",[t._v("使用如下测试文件")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\ncentos\nnginx\nmysql\nhttpd\n")])])]),s("h4",{attrs:{id:"替换文件内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换文件内容"}},[t._v("#")]),t._v(" 替换文件内容")]),t._v(" "),s("ol",[s("li",[t._v("替换文件内容，"),s("code",[t._v("替换centos为redhat")]),t._v("，然后再"),s("code",[t._v("redhat的后面添加centos和在centos前面添加ubnutu")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -i 's/centos/redhat/g' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\nredhat\nnginx\nmysql\nhttpd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -i '/redhat/a\\centos' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\nredhat\ncentos\nnginx\nmysql\nhttpd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -i '/centos/i\\ubnutu' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\nredhat\nubnutu\ncentos\nnginx\nmysql\nhttpd\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("增加文件的内容，"),s("code",[t._v("在末尾添加三行abc")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -i '$a\\abc\\nabc\\nabc' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\nredhat\nubnutu\ncentos\nnginx\nmysql\nhttpd\nabc\nabc\nabc\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("将内容以"),s("code",[t._v("abc开头的修改成myjob")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[root@shell-centos-3 ~]# sed -i 's/^abc/myjob/g' sh\n[root@shell-centos-3 ~]# cat sh\nredhat\nubnutu\ncentos\nnginx\nmysql\nhttpd\nmyjob\nmyjob\nmyjob\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("用grep"),s("code",[t._v("输出文件内容的行数")]),t._v("，然后在"),s("code",[t._v('第7行的下面添加refine="0.1.0.12"，dailysign="0.1.0.4"，stonehenge="0.1.0.2"')]),t._v("，首行需要加两个空格。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep -n '.' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":redhat\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":ubnutu\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":centos\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":nginx\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(":mysql\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":httpd\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(":myjob\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(":myjob\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(":myjob\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# sed -i "7a  \\  refine=\\"0.1.0.12\\"\\n  dailysign=\\"0.1.0.4\\" \\n  stonehenge=\\"0.1.0.2\\"" sh')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat  sh")]),t._v("\nredhat\nubnutu\ncentos\nnginx\nmysql\nhttpd\nmyjob\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("refine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.12"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dailysign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.4"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("stonehenge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.2"')]),t._v("\nmyjob\nmyjob\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("删除所有的"),s("code",[t._v("myjob")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sed -i '/myjob/d' sh")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@shell-centos-3 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sh")]),t._v("\nredhat\nubnutu\ncentos\nnginx\nmysql\nhttpd\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("refine")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.12"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("dailysign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.4"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("stonehenge")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0.2"')]),t._v("\n")])])]),s("h2",{attrs:{id:"awk命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk命令"}},[t._v("#")]),t._v(" AWK命令")]),t._v(" "),s("h3",{attrs:{id:"awk是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk是什么"}},[t._v("#")]),t._v(" Awk是什么")]),t._v(" "),s("p",[t._v('Awk、sed与grep，俗称Linux下的三剑客，它们之间有很多相似点，但是同样也各有各的特色，相似的地方是它们都可以匹配文本，其中sed和awk还可以用于文本编辑，而grep则不具备这个功用。sed是一种非交互式且面向字符流的编辑器（a "non-interactive" stream-oriented editor），而'),s("code",[t._v("awk则是一门模式匹配的编程语言")]),t._v("，因为它的主要功能是"),s("code",[t._v("用于匹配文本并处理")]),t._v("，同时它有一些编程语言才有的语法，例如函数、分支循环语句、变量等等，当然比起我们常见的编程语言，Awk相对比较简单。")]),t._v(" "),s("p",[t._v("使用Awk，我们可以做以下事情：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("将文本文件视为由字段和记录组成的文本数据库；")])]),t._v(" "),s("li",[s("code",[t._v("在操作文本数据库的过程中能够使用变量；")])]),t._v(" "),s("li",[s("code",[t._v("能够使用数学运算和字符串操作")])]),t._v(" "),s("li",[s("code",[t._v("能够使用常见的编程结构，例如条件分支与循环；")])]),t._v(" "),s("li",[s("code",[t._v("能够格式化输出；")])]),t._v(" "),s("li",[s("code",[t._v("能够自定义函数；")])]),t._v(" "),s("li",[s("code",[t._v("能够在awk脚本中执行UNIX命令；")])]),t._v(" "),s("li",[s("code",[t._v("能够处理UNIX命令的输出结果；")])])]),t._v(" "),s("h3",{attrs:{id:"语法问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法问题"}},[t._v("#")]),t._v(" 语法问题")]),t._v(" "),s("p",[t._v("Awk是一门编程语言，所以将awk的脚本视为一段代码。而awk的脚本同样可以写到一个文件中，并通过-f参数指定，这一点和sed是一样的。program一般多个pattern和action序列组成，"),s("code",[t._v("当读入的记录匹配pattern时")]),t._v("，"),s("code",[t._v("才会执行相应的action命令")]),t._v("。这里有一点要注意，在第一种形式中，除去命令行选项外，"),s("code",[t._v("program参数一定要位于第一个位置")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Awk的输入被解析成多个记录（Record）")]),t._v("，默认情况下，记录的分隔符是\\n，因此可以认为一行就是一个记录，记录的分隔符可以通过内置变量"),s("code",[t._v("RS")]),t._v("更改。当记录匹配某个pattern时，才会执行后续的action命令。")]),t._v(" "),s("p",[t._v("而每个记录由进一步地被分隔成多个字段（Field），默认情况下字段的分隔符是空白符，例如空格、制表符等等，也可以通过"),s("code",[t._v("-F ERE")]),t._v("选项或者内置变量"),s("code",[t._v("FS")]),t._v("更改。在awk中，可以通过$1，$2...来访问对应位置的字段，同时$0存放整个记录，这一点有点类似shell下的命令行位置参数。关于这些内容，我们会在下面详细介绍，这里你只要知道有这些东西就好。")]),t._v(" "),s("p",[t._v("标准的awk命令行参数主要由以下三个：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("-F ERE")]),t._v("：定义字段分隔符，该选项的值可以是扩展的正则表达式（ERE）；")]),t._v(" "),s("li",[s("code",[t._v("-f progfile")]),t._v("：指定awk脚本，可以同时指定多个脚本，它们会按照在命令行中出现的顺序连接在一起；")]),t._v(" "),s("li",[s("code",[t._v("-v assignment")]),t._v("：定义awk变量，形式同awk中的变量赋值，即name=value，赋值发生在awk处理文本之前；")])]),t._v(" "),s("h3",{attrs:{id:"特点和应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点和应用场景"}},[t._v("#")]),t._v(" 特点和应用场景")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("类似于一门语言，C语言")])]),t._v(" "),s("li",[s("strong",[t._v("过滤，统计，计算")])]),t._v(" "),s("li",[s("strong",[t._v("过滤，统计日志")])]),t._v(" "),s("li",[s("strong",[t._v("BEGIN开始和END结尾")])])]),t._v(" "),s("h3",{attrs:{id:"执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[t._v("#")]),t._v(" 执行过程")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# awk -F,\'BEGIN{print "name"}{print $2}END{print "end of file"}\' test.txt')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# awk -F, \'BEGIN{print "name"}{print $2}END{print "end of file"}\' oldboy.txt')]),t._v("\nname\noldboy\nzhangyao\n李导996\n李导996\nyy\nfeixue\nlidao\nend of "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这里使用BEGIN和END分别在开始和末尾打印，然后在取第三行的第二列的文本内容'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(",lidao,COCO\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# awk -F, \'BEGIN{print "name"}NR==3{print $2}END{print "end of file"}\' oldboy.txt')]),t._v("\nname\n李导996\nend of "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),s("p",[t._v("举几个简单的例子。通过-F参数设置冒号:为分隔符，并打印各个字段：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kodango@devops ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1:2:3"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" -F: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{print $1 " and " $2 " and " $3}\'')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" and "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" and "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("在awk的脚本中访问通过-v选项设置的变量：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kodango@devops ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BEGIN {print a}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("通过-v选项设置的变量在"),s("code",[t._v("BEGIN")]),t._v("的位置就可以访问了。"),s("code",[t._v("BEGIN")]),t._v("是一个特殊的pattern，它在awk处理输入之前就会执行，可以认为是一个初始化语句，与此对应的还有"),s("code",[t._v("END")]),t._v("。")]),t._v(" "),s("p",[t._v("假设有两个文件：a和b，它们的内容分别如下所示：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat a")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" a\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat b")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" b\n")])])]),s("p",[t._v("为了说明赋值操作发生的时机，我们在BEGIN，正常处理，END三个地方都打印变量的值。")]),t._v(" "),s("p",[s("code",[t._v("第一种情况： 变量赋值位于所有文件名参数之前：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# awk \'BEGIN {print "BEGIN: " var} {print "PROCESS: " var} \\')]),t._v("\nEND "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"END: "')]),t._v(" var "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("' "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" a\nBEGIN:\nPROCESS: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEND: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("结果：赋值操作发生在正常处理之前，"),s("code",[t._v("BEGIN")]),t._v("动作之后。")]),t._v(" "),s("p",[s("code",[t._v("第二种情况：变量赋值位于所有文件名之后：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kodango@devops awk_temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'BEGIN {print "BEGIN: " var} {print "PROCESS: " var} \\\nEND {print "END: " var }\'')]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  \nBEGIN: \nPROCESS: \nEND: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("结果：赋值操作发生在正常处理之后，"),s("code",[t._v("END")]),t._v("动作之前。")]),t._v(" "),s("p",[s("code",[t._v("第三种情况：变量赋值位于文件名之间：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kodango@devops awk_temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("awk")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'BEGIN {print "BEGIN: " var} {print "PROCESS: " var} \\\nEND {print "END: " var }\'')]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" b\nBEGIN: \nPROCESS: \nPROCESS: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nEND: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("h3",{attrs:{id:"awk的行与列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk的行与列"}},[t._v("#")]),t._v(" Awk的行与列")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("名词")]),t._v(" "),s("th",[t._v("awk中的叫法")]),t._v(" "),s("th",[t._v("一些说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("行")]),t._v(" "),s("td",[t._v("记录record")]),t._v(" "),s("td",[t._v("每一行是默认回车分割的.")])]),t._v(" "),s("tr",[s("td",[t._v("列")]),t._v(" "),s("td",[t._v("字段，域field")]),t._v(" "),s("td",[t._v("每一列默认是通过空格分割的.")])]),t._v(" "),s("tr",[s("td",[t._v("awk中行和列结束标语都是可以修改")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"awk中取行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk中取行"}},[t._v("#")]),t._v(" Awk中取行")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("常用的AWK条件")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("NR==1")]),t._v(" "),s("td",[t._v("取出某一行")])]),t._v(" "),s("tr",[s("td",[t._v("NR>=1&&NR<=5")]),t._v(" "),s("td",[t._v("取出1到5行范围")])]),t._v(" "),s("tr",[s("td",[t._v("符号")]),t._v(" "),s("td",[t._v("> < >= <= !=")])]),t._v(" "),s("tr",[s("td",[t._v("/oldboy/")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("/101/,/105/")]),t._v(" "),s("td")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'NR==1' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'NR>=1 && NR<=5' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk '/oldboy/' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk '/101/,/105/' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v(",oldboy,CEO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(",zhangyao,CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(",李导996,C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(",yy,CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(",feixue,CIO\n")])])]),s("h3",{attrs:{id:"awk中取列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk中取列"}},[t._v("#")]),t._v(" Awk中取列")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("-F")]),t._v(" 指定分隔符 指定每一列结果结束标记（默认是空格，连续的空格，tab健）")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$数字")]),t._v("： 表示取出某一列，在awk中$加上内容 就一个意思，表示取出某一列")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$0")]),t._v(" 整行的内容")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$NF")]),t._v(" 最后一列")])]),t._v(" "),s("li",[s("p",[t._v("{print xxx}")])])]),t._v(" "),s("p",[s("strong",[t._v("默认取出第五列和第九列")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos yum.repos.d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -l | awk '{print$5,$9}' | column -t")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1664")]),t._v("  CentOS-Base.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1309")]),t._v("  CentOS-CR.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("649")]),t._v("   CentOS-Debuginfo.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("314")]),t._v("   CentOS-fasttrack.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("630")]),t._v("   CentOS-Media.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1331")]),t._v("  CentOS-Sources.repo\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4768")]),t._v("  CentOS-Vault.repo\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'取出第一列和最后一列'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos yum.repos.d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -l | awk '{print $1,$NF}' | column -t")]),t._v("\ntotal        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n-rw-r--r--.  CentOS-Base.repo\n-rw-r--r--.  CentOS-CR.repo\n-rw-r--r--.  CentOS-Debuginfo.repo\n-rw-r--r--.  CentOS-fasttrack.repo\n-rw-r--r--.  CentOS-Media.repo\n-rw-r--r--.  CentOS-Sources.repo\n-rw-r--r--.  CentOS-Vault.repo\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'在中间添加点东西'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos yum.repos.d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ls -l | awk '{print $1,\"aaaaaa \"$NF}' | column -t")]),t._v("\ntotal        aaaaaa  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("\n-rw-r--r--.  aaaaaa  CentOS-Base.repo\n-rw-r--r--.  aaaaaa  CentOS-CR.repo\n-rw-r--r--.  aaaaaa  CentOS-Debuginfo.repo\n-rw-r--r--.  aaaaaa  CentOS-fasttrack.repo\n-rw-r--r--.  aaaaaa  CentOS-Media.repo\n-rw-r--r--.  aaaaaa  CentOS-Sources.repo\n-rw-r--r--.  aaaaaa  CentOS-Vault.repo\n")])])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"C:\\Users\\zyh\\AppData\\Roaming\\Typora\\typora-user-images\\image-20211201105701345.png",alt:"image-20211201105701345"}}),t._v(" "),s("p",[s("strong",[t._v("使用awk互相调换第一列和最后一列的位置")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '{print $NF,$2,$3,$4,$5,$6,$1}' passwd")]),t._v("\n/bin/bash x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" root /root root\n/sbin/nologin x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" bin /bin bin\n/sbin/nologin x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" daemon /sbin daemon\n/sbin/nologin x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" adm /var/adm adm\n/sbin/nologin x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" lp /var/spool/lpd lp\n/bin/sync x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v(" /sbin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n/sbin/shutdown x "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v(" /sbin "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdown")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这样的内容是没有冒号的，文件内容中的：号变成了空格，所以需要替换为：'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: -vOFS=: '{print $NF,$2,$3,$4,$5,$6,$1}' passwd")]),t._v("\n/bin/bash:x:0:0:root:/root:root\n/sbin/nologin:x:1:1:bin:/bin:bin\n/sbin/nologin:x:2:2:daemon:/sbin:daemon\n/sbin/nologin:x:3:4:adm:/var/adm:adm\n/sbin/nologin:x:4:7:lp:/var/spool/lpd:lp\n/bin/sync:x:5:0:sync:/sbin:sync\n/sbin/shutdown:x:6:0:shutdown:/sbin:shutdown\n")])])]),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("行与列 名称")])]),t._v(" "),s("li",[s("strong",[t._v("awk取行与取列，指哪打哪")])]),t._v(" "),s("li",[s("strong",[s("code",[t._v("取出网卡的ip地址")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip a s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(": lo: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("LOOPBACK,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v(" qdisc noqueue state UNKNOWN group default qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1/8 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v("\n       valid_lft forever preferred_lft forever\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(": eth0: "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BROADCAST,MULTICAST,UP,LOWER_UP"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" mtu "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),t._v(" qdisc pfifo_fast state UP group default qlen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    link/ether fa:16:3e:c4:a5:85 brd ff:ff:ff:ff:ff:ff\n    inet "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.7/24 brd "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.255 scope global dynamic eth0\n       valid_lft 52721sec preferred_lft 52721sec\n    inet6 fe80::f816:3eff:fec4:a585/64 scope "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),t._v("\n       valid_lft forever preferred_lft forever\n       \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip a  | grep inet | awk 'NR==3' | awk -F\"[ /]+\" '{print $3}'^C")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ip a  | grep inet | awk -F\"[ /]+\" 'NR==3{print $3}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.7\n")])])]),s("h3",{attrs:{id:"awk模式匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk模式匹配"}},[t._v("#")]),t._v(" Awk模式匹配")]),t._v(" "),s("p",[t._v("awk -F\"[/]+\" 'NR==3{print $3}'")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("awk")]),t._v(" "),s("th",[t._v('-F"[/]+"')]),t._v(" "),s("th",[t._v("'NR==3{print $3}'")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("命令")]),t._v(" "),s("td",[t._v("选项")]),t._v(" "),s("td",[t._v("'条件{动作}'")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("'找谁{干啥}'")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("'模式{动作}'")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("'pattern{action}'")])])])]),t._v(" "),s("ul",[s("li",[t._v("比较符号： > < >= <= != ==")]),t._v(" "),s("li",[t._v("正则： 支持grep的正则")]),t._v(" "),s("li",[t._v("表示范围的：//，//")]),t._v(" "),s("li",[t._v("特殊条件：BEGIN和END")])]),t._v(" "),s("h3",{attrs:{id:"awk正则匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk正则匹配"}},[t._v("#")]),t._v(" Awk正则匹配")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("//支持扩展正常")])]),t._v(" "),s("li",[s("strong",[t._v("awk可以精确到某一列中包含/不包含..内容 ~")])]),t._v(" "),s("li",[s("strong",[t._v("~包含")])]),t._v(" "),s("li",[s("strong",[t._v("!~不包含")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("正则")]),t._v(" "),s("th",[t._v("awk正则")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("^ 表示以...开头的行")]),t._v(" "),s("td",[t._v("某一列的开头 $3~/^oldboy/")])]),t._v(" "),s("tr",[s("td",[t._v("$ 表示以...结尾的行")]),t._v(" "),s("td",[t._v("某一列的结尾 $4~/lidao$/")])]),t._v(" "),s("tr",[s("td",[t._v("^$ 表示空行1")]),t._v(" "),s("td",[t._v("某一列是空的")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'找出第三列的以1开头的'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^1/' passwd")]),t._v("\nbin:x:1:1:bin:/bin:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ncentos:x:1000:1000:Cloud User:/home/centos:/bin/bash\n\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'找出第三列以2开头的 然后打印第一列第三列和最后一列'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^2/{print $1 $3,$NF}' passwd")]),t._v("\ndaemon2 /sbin/nologin\nrpcuser29 /sbin/nologin\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'找出第三列以1或者2开头的 然后打印第一列第三列和最后一列'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^[12]/{print $1 $3,$NF}' passwd")]),t._v("\nbin1 /sbin/nologin\ndaemon2 /sbin/nologin\noperator11 /sbin/nologin\ngames12 /sbin/nologin\nftp14 /sbin/nologin\nsystemd-network192 /sbin/nologin\nrpcuser29 /sbin/nologin\ncentos1000 /bin/bash\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^1|2/{print $1 $3,$NF}' passwd")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^1|^2/{print $1 $3,$NF}' passwd")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F: '$3~/^(1|2)/{print $1 $3,$NF}' passwd")]),t._v("\n")])])]),s("h3",{attrs:{id:"awk表示范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk表示范围"}},[t._v("#")]),t._v(" Awk表示范围")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("/哪里开始/，/哪里结束/ 常用")])]),t._v(" "),s("li",[s("strong",[t._v("NR==1，NR==5 从第一行开始到第5行结束 类似于sed -n '1,5p'")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'统计范围然后打印第1列和第3列'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F\"[ ,]+\"  '/102/,/105/{print $1,$3}' oldboy.txt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),t._v(" CTO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(" C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),t._v(" C00\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),t._v(" CFO\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),t._v(" CIO\n")])])]),s("h3",{attrs:{id:"awk特殊模式begin-和end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk特殊模式begin-和end"}},[t._v("#")]),t._v(" Awk特殊模式BEGIN{}和END{}")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模式")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("应用场景")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("BEGIN{}")]),t._v(" "),s("td",[t._v("里面的内容会在awk"),s("strong",[t._v("读取文件之前")]),t._v("执行")]),t._v(" "),s("td",[t._v("1）进行简单统计，计算，不涉及读取文件（常见）"),s("br"),t._v("2）用来处理文件之前，添加个表头"),s("br"),t._v("3）用来定义awk变量（很少用，因为可以用-v）")])]),t._v(" "),s("tr",[s("td",[t._v("END{}")]),t._v(" "),s("td",[t._v("里面的内容会在awk"),s("strong",[t._v("读取文件之后")]),t._v("执行")]),t._v(" "),s("td",[t._v("1）awk进行统计，一般过程："),s("strong",[t._v("先进行计算，最后END里面输出结果")]),s("br"),t._v("2）awk使用数组，用来输出数组的结果（常见）")])])])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("END{}统计计算")]),t._v("：")])]),t._v(" "),s("p",[s("strong",[t._v("统计方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("统计方法")]),t._v(" "),s("th",[t._v("简写形式")]),t._v(" "),s("th",[t._v("应用场景")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("i++")]),t._v(" "),s("td",[t._v("i=i+1")]),t._v(" "),s("td",[t._v("计数，统计次数")])]),t._v(" "),s("tr",[s("td",[t._v("sum=sum+？？？")]),t._v(" "),s("td",[t._v("sum+=？？？")]),t._v(" "),s("td",[t._v("求和累加")])]),t._v(" "),s("tr",[s("td",[t._v("array[]=array[]+1")]),t._v(" "),s("td",[t._v("array[]++")]),t._v(" "),s("td",[t._v("数组分类计数")])]),t._v(" "),s("tr",[s("td",[t._v("注意：i，sum都是变量")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'统计/etc/services里面有多少个空行'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk '/^$/' services")]),t._v("\n·\n·\n·\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用条件加动作打印结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk '/^$/{i++}END{print i}' services")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'使用seq 100求和1+2+3..+100 awk实现'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# seq  100 | awk '{sum=sum+$1}END{print sum}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5050")]),t._v("\n如果想查看过程\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# seq  100 | awk '{sum=sum+$1;print sum}END{print sum}'")]),t._v("\n")])])]),s("h3",{attrs:{id:"awk数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk数组"}},[t._v("#")]),t._v(" Awk数组")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("统计日志")]),t._v("：类似于 统计每个ip出现的次数，统计每种状态码出现的次数，统计系统中每个用户被攻击的次数，统计攻击者的ip出现次数。")]),t._v(" "),s("li",[s("code",[t._v("累加求和")]),t._v("：统计每个ip消耗的流量。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("shell数组")]),t._v(" "),s("th",[t._v("awk数组")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("形式")]),t._v(" "),s("td",[t._v("array[0]=oldboy array[1]=lidao")]),t._v(" "),s("td",[t._v("array[0]=oldboy array[1]=lidao")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("使用")]),t._v(" "),s("td",[t._v("echo ${array[0]}  ${array[1]}")]),t._v(" "),s("td",[t._v("print array[0] array[1]")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("批量输出数组内容")]),t._v(" "),s("td",[t._v("for i in ${array[*]}"),s("br"),t._v("do"),s("br"),t._v("  echo $i"),s("br"),t._v("done"),s("br")]),t._v(" "),s("td",[t._v("for(i in array)"),s("br"),t._v(" print array[i]"),s("br")]),t._v(" "),s("td",[t._v("awk数组专用循环，变量获取到的是数组的下标."),s("br"),t._v("如果想要数组内容a[i]")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'awk字母会被识别为变量，如果只是想要使用字符串需要使用双引号引起来'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{a[0]=oldboy;a[1]=lidao; print a[0],a[1]}'    #这里会打印空行")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# awk \'BEGIN{a[0]="oldboy";a[1]="lidao"; print a[0],a[1]}\'')]),t._v("\noldboy lidao\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{a[0]=12360;a[1]=12360; print a[0],a[1]}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12360")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12360")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'awk数组专用循环，变量获取到的是数组的下标'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{a[0]=12360;a[1]=12360; for(i in a )print i}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'加上array[]'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{a[0]=12360;a[1]=12360; for(i in a )print a[i]}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12360")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12360")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("处理以下文件内容，将域名取出来并根据域名进行计数排序处理")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat url.txt")]),t._v("\nhttp://www.etiantian.org/index.html\nhttp://www.etiantian.org/1.html\nhttp://post.etiantian.org/index.html\nhttp://mp3.etiantian.org/index.html\nhttp://www.etiantian.org/3.html\nhttp://post.etiantian.org/2.html\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F\"[/.]+\" '{print $2}' url.txt")]),t._v("\nwww\nwww\npost\nmp3\nwww\npost\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array[]++ 你要统计三年 []里面就是什么（某一列）'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk -F\"[/.]+\" '{array[$2]++}END{for(i in array)print i,array[i]}' url.txt")]),t._v("\nwww "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nmp3 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\npost "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),s("h3",{attrs:{id:"for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" for循环")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("shell编程c语言for循环")]),t._v(" "),s("th",[t._v("awk for循环")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("for((i=1;1<=10;i++))"),s("br"),t._v(" do"),s("br"),t._v("   echo $i"),s("br"),t._v(" done")]),t._v(" "),s("td",[t._v("for(i=1;i<=10;i++)"),s("br"),t._v(" print i")]),t._v(" "),s("td",[t._v("awk循环用来循环每个字段")])])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1+100'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{for(i=1;i<=100;i++)sum+=i;print sum}'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5050")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# awk 'BEGIN{")]),t._v("\nfor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i++"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n5050\n\n'")]),t._v("显示详细过程"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n[root@centos etc]# awk '")]),t._v("BEGIN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nfor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i++"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nprint sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5050")]),t._v("\n")])])]),s("h3",{attrs:{id:"if判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if判断"}},[t._v("#")]),t._v(" if判断")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("shell if判断")]),t._v(" "),s("th",[t._v("awk if")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v('if["oldboy" -eq 18];then'),s("br"),t._v(" echo take to dbj"),s("br"),t._v("fi")]),t._v(" "),s("td",[t._v("if(条件)"),s("br"),t._v(' print"dbj"')]),t._v(" "),s("td",[t._v("常用")])]),t._v(" "),s("tr",[s("td",[t._v('if["oldboy" -eq 18];then'),s("br"),t._v(' echo take to "dbj"'),s("br"),t._v("else"),s("br"),t._v(' echo "rest"'),s("br"),t._v("fi")]),t._v(" "),s("td",[t._v("if(条件)"),s("br"),t._v(' print"dbj"'),s("br"),t._v("else"),s("br"),t._v(' print"rest"')]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("code",[t._v("统计磁盘空间使用率，如果大于70%，则提示磁盘空间不足，并且显示磁盘分区，磁盘使用率，磁盘挂载点")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# df -h")]),t._v("\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        20G  967M   20G   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("% /\ndevtmpfs        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("% /dev\ntmpfs           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("% /dev/shm\ntmpfs           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G   17M  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("% /run\ntmpfs           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".9G   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("% /sys/fs/cgroup\ntmpfs           379M     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  379M   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("% /run/user/0\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# df -h  | awk -F"[ %]+" \'{if($5>=70)print "disk not enough"}\'')]),t._v("\ndisk not enough\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# df -h  | awk -F"[ %]+" \'{if($5>=70)print "disk not enough",$0}\'   #这里会发现只打印了头上那行')]),t._v("\ndisk not enough Filesystem      Size  Used Avail Use% Mounted on\n\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# df -h  | awk -F"[ %]+" \'NR>1{if($5>=70)print "disk not enough",$1,$5}\'   #这里会发现没有>=70%')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# df -h  | awk -F"[ %]+" \'NR>1{if($5>=1)print "disk not enough",$1,$5}\'\t#直接缩小到1%')]),t._v("\ndisk not enough /dev/vda1 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\ndisk not enough tmpfs "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'需要注意的是： awk使用多个条件的时候 第1个条件可以放在 \"条件{动作} 第2个条件 一般使用if\"'")]),t._v("\n")])])]),s("p",[t._v("统计这段语句中，单词中字符小于6的单词，显示出来。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# echo  I am oldboy teacher welcome to oldboy traning class. | awk -F\"[ .]+\" '{for(i=1;i<=NF;i++)print $i}'")]),t._v("\nI\nam\noldboy\nteacher\nwelcome\nto\noldboy\ntraning\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@centos ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo  I am oldboy teacher welcome to oldboy traning class. | awk -F"[ .]+" \'{')]),t._v("\nfor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("NF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i++"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tprint "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\nI\nam\nto\nclass\n\n\n[root@centos ~]# echo oldboy | awk '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n6\n[root@centos ~]# echo oldboy tom | awk '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n1\n[root@centos ~]# echo oldboy tom | awk '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n6\n[root@centos ~]# echo oldboy tom | awk '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("print length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("'\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("h3",{attrs:{id:"awk的内置变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#awk的内置变量"}},[t._v("#")]),t._v(" Awk的内置变量")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("内置变量")]),t._v(" "),s("th"),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("NR")]),t._v(" "),s("td",[t._v("Number of Record 记录号，行")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("NF")]),t._v(" "),s("td",[t._v("Number of  Field 每行有多个字段（列）$NF表示最后一列")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("FS")]),t._v(" "),s("td",[t._v("-F： === -v FS=： Field Separator 字段分隔符，每个字段结束标记")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("OFS")]),t._v(" "),s("td",[t._v("Output Field Separator 输出字段分隔符（awk显示每一列之间通过什么分割，默认空格）")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("gawk gnu awk")])]),t._v(" "),s("li",[s("strong",[t._v("awk选项 -F -v")])]),t._v(" "),s("li",[s("strong",[t._v("awk的执行流程")])]),t._v(" "),s("li",[s("strong",[t._v("awk的取行取列： 指哪打哪")])]),t._v(" "),s("li",[s("strong",[t._v("awk模式： 正则，范围，特殊模式，比较")])]),t._v(" "),s("li",[s("strong",[t._v("awk数组： 统计分析日志")])]),t._v(" "),s("li",[s("strong",[t._v("awk for if")])]),t._v(" "),s("li",[s("strong",[t._v("man awk /info awk")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);