(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{506:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"使用virsh管理虚拟机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用virsh管理虚拟机"}},[s._v("#")]),s._v(" 使用Virsh管理虚拟机")]),s._v(" "),t("h3",{attrs:{id:"virsh管理虚拟机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#virsh管理虚拟机"}},[s._v("#")]),s._v(" Virsh管理虚拟机")]),s._v(" "),t("ul",[t("li",[s._v("virsh的概述")]),s._v(" "),t("li",[s._v("virsh的命令")])]),s._v(" "),t("h3",{attrs:{id:"virsh-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#virsh-list"}},[s._v("#")]),s._v(" virsh list")]),s._v(" "),t("p",[t("strong",[s._v("列出所有的虚拟机，虚拟机的状态有（8）种")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("runing 是运行状态\nidel 是空闲状态\npause 暂停状态\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" 关闭状态\ncrash 虚拟机崩坏状态\ndaying 垂死状态\nshut off 不运行完全关闭\npmsuspended 客户机被关掉电源中中断\n")])])]),t("h3",{attrs:{id:"domain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#domain"}},[s._v("#")]),s._v(" domain")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" start 启动一个虚拟机\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("suspend")]),s._v(" 暂停\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" resume 恢复\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" save 将虚拟机的当前运行状态保存到宿主机磁盘\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" restore 恢复虚拟机的状态\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" destory 删除虚拟机运行状态\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" 关闭虚拟机\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" undefined 取消一个域\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" autostart 随着宿主机启动而启动\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" attach-disk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("/IMG_FILE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 向一个域添加一个虚拟磁盘\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" detach-disk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 移除一个域中的虚拟硬盘\n")])])]),t("h3",{attrs:{id:"monitor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#monitor"}},[s._v("#")]),s._v(" monitor")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domblklist 显示域的虚拟磁盘设备\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domiflist 显示域的虚拟网卡\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domblkinfo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("device"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 显示域的虚拟磁盘设备的详细信息\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domblkstat "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("device"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 显示域的虚拟磁盘设备的状态\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domifstat "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("interface"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 显示域的虚拟网卡的状态\n")])])]),t("h3",{attrs:{id:"device-commands-设备命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#device-commands-设备命令"}},[s._v("#")]),s._v(" device commands（设备命令）")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("*attach-device （demo file）添加设备从file文件中\n*attach-interface （demo "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ）添加一个接口\n*update-device（demo file）更新设备根据file\n")])])]),t("h3",{attrs:{id:"virtual-network-commadns-网卡命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#virtual-network-commadns-网卡命令"}},[s._v("#")]),s._v(" virtual network commadns（网卡命令）")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("*net-autostart "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("network"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 自动启动网卡（default）\n*net-create （file） 把配置加载到文件\n*net-destory "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" network "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("关闭网卡\n*net-dumpxml（default） 把网卡配置加载到文件\n*net-edit（default） 编辑网卡信息\n*net-info（default） 网卡信息\n*net-list 显示网卡\n*net-uuid （default）得到网卡的id\n*net-name（id）得到网卡的名字\n*net-start （default）开启网卡\n")])])]),t("h3",{attrs:{id:"interface-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#interface-commands"}},[s._v("#")]),s._v(" Interface commands")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("*iface-define（file）定义一个接口从文件里面\n*iface-dumpxml （lo）显示接口I的信息\n*iface-edit（lo） 编辑接口\n*iface-list 列出所有的接口\n*iface-name （mac） 根据mac得到名字\n*iface-mac"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 根据名字得到mac\n*iface-start（lo） 开启接口\n*iface-unbriged 解绑定 网桥\n")])])]),t("h3",{attrs:{id:"storage-pppl-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storage-pppl-commands"}},[s._v("#")]),s._v(" STORAGE pppl commands")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("*pool-auto （pool）标记池自动启动\n*pool-build（pool）建造一个池\n*pool-create（file）根据文件创建池\n*pool-define（file）定义但是不开启\n*pool-destory（pool）销毁池，以后能回复\n*pool-delete（pool）删除池，以后不能恢复\n*pool-dumpxml（pool）查看池的定义文件\n*pool-edit（pool）编辑池的定义文件\n*pool-info池的信息\n*pool-list的列表\n*pool-name（id）根据id得到name\n*pool-id（name）根据name得到id\n*pool-start（poop）开启池\n*pool-uuid （pool） 返回一个池的uuid\n")])])]),t("h3",{attrs:{id:"volume-commads"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume-commads"}},[s._v("#")]),s._v(" VOLUME commads")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("*vol-delete（pool）卷的删除\n*vol-upload（pool） 卷的加载\n*vol-list（pool）列出卷\n*vol-info（default）卷的信息\n*vol-name（path）得到卷的名字\n\n（快照）（secret）\n")])])]),t("h3",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",查看运行的虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" list\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(",查看所有的虚拟机（关闭和运行的虚拟机）\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" list –all\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(",连接虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" console +域名（虚拟机的名称）\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("，退出虚拟机\nctrl+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(",关闭虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" +域名\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" destroy +域名\n这种方式的关闭，是一种删除的方式，只是在virsh list中删除了该虚拟机。\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("，挂起虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("suspend")]),s._v(" +域名\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("，恢复被挂起的虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" resume +域名\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("，子机随宿主主机（母机）启动而启动\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" autostart + 域名\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("，取消自动启动\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" auotstart –disable +域名\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("，彻底删除虚拟机\n删除虚拟机 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" destroy +域名\n解除标记   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" undefine +域名\n删除虚拟机文件\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(",启动虚拟机并进入该虚拟机\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" start 域名 –console\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(".查看虚拟机信息\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" dominfo 域名\n重启\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v(" 域名\n查看虚拟机信息\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" dominfo 域名\n查看虚拟机磁盘\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domblklist 域名\n查看虚拟网卡\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" domiflist 域名\n更改虚拟机配置,libvirt使用xml文件来定义虚拟机配置\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("virsh")]),s._v(" edit 域名\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);