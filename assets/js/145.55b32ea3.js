(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{460:function(t,s,e){"use strict";e.r(s);var a=e(7),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"kubernetes应用程序生命周期管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes应用程序生命周期管理"}},[t._v("#")]),t._v(" Kubernetes应用程序生命周期管理")]),t._v(" "),s("h2",{attrs:{id:"应用程序生命周期管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用程序生命周期管理"}},[t._v("#")]),t._v(" 应用程序生命周期管理")]),t._v(" "),s("p",[s("strong",[t._v("在Kubernetes中部署应用流程")])]),t._v(" "),s("p",[s("strong",[t._v("服务编排（YAML）")])]),t._v(" "),s("p",[s("strong",[t._v("Deployment工作负载均衡器")])]),t._v(" "),s("ul",[s("li",[t._v("介绍")]),t._v(" "),s("li",[t._v("应用生命周期管理流程")]),t._v(" "),s("li",[t._v("应用部署")]),t._v(" "),s("li",[t._v("应用升级")]),t._v(" "),s("li",[t._v("水平扩缩容 回滚")]),t._v(" "),s("li",[t._v("滚动升级与回滚实现机制")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebeca92ab3f51d911391a7.png"}}),t._v(" "),s("h3",{attrs:{id:"使用deployment部署java应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用deployment部署java应用"}},[t._v("#")]),t._v(" 使用Deployment部署Java应用")]),t._v(" "),s("p",[s("strong",[t._v("使用Deployment控制器部署镜像：")])]),t._v(" "),s("p",[s("strong",[t._v("创建一个Deployment控制器然后镜像使用的时nginx:latest")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create deployment web --image=nginx:latest deployment.apps/web created")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deploy ")]),t._v("\nNAME   READY   UP-TO-DATE   AVAILABLE   AGEweb    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           11s\n")])])]),s("p",[s("strong",[t._v("使用Service将Pod暴露出去：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl expose deployment web --port=80 --target-port=80 --type=NodePort      service/web exposed")]),t._v("\n")])])]),s("p",[s("strong",[t._v("访问应用：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get service")]),t._v("\nNAME         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        AGE\nkubernetes   ClusterIP   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.1       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("/TCP        11h\nweb          NodePort    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.99")]),t._v(".251.101   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(":30746/TCP   3m15shttp://NodeIP:Port     \n")])])]),s("h3",{attrs:{id:"服务编排-yaml文件格式说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务编排-yaml文件格式说明"}},[t._v("#")]),t._v(" 服务编排：YAML文件格式说明")]),t._v(" "),s("p",[s("strong",[t._v("在此之前学习ansible的时候就有学习过yaml文件格式")])]),t._v(" "),s("p",[t._v("K8s是一个容器编排引擎，使用YAML文件编排要部署应用，因此在学习之前，应先了解YAML语法格式：")]),t._v(" "),s("p",[t._v("• 缩进表示层级关系")]),t._v(" "),s("p",[t._v("• 不支持制表符“tab”缩进，使用空格缩进")]),t._v(" "),s("p",[t._v("• 通常开头缩进 2 个空格")]),t._v(" "),s("p",[t._v("• 字符后缩进 1 个空格，如冒号、逗号等")]),t._v(" "),s("p",[t._v("• “---” 表示YAML格式，一个文件的开始")]),t._v(" "),s("p",[t._v("• “#”注释")]),t._v(" "),s("h3",{attrs:{id:"服务编排-yaml文件创建资源对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务编排-yaml文件创建资源对象"}},[t._v("#")]),t._v(" 服务编排：YAML文件创建资源对象")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebeca92ab3f51d911391b3.png"}}),t._v(" "),s("h3",{attrs:{id:"服务编排-yaml文件创建资源对象-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务编排-yaml文件创建资源对象-2"}},[t._v("#")]),t._v(" 服务编排：YAML文件创建资源对象")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebeca92ab3f51d911391be.png"}}),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("服务编排：资源字段太多，记不住怎么办?")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://pic.imgdb.cn/item/61ebecb52ab3f51d9113a1b6.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"资源字段多的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源字段多的问题"}},[t._v("#")]),t._v(" 资源字段多的问题")]),t._v(" "),s("ul",[s("li",[t._v("用create命令生成")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl create deployment nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--image")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.16 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" yaml --dry-run   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" my-deploy.yaml\n")])])]),s("ul",[s("li",[t._v("用get命令导出")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ kubectl get deployment nginx -o yaml > my-deploy.yaml\n")])])]),s("ul",[s("li",[t._v("Pod容器的字段忘记拼写了")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl explain pods.spec.containers\n$ kubectl explain deployment\n")])])]),s("h2",{attrs:{id:"pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[t._v("#")]),t._v(" Pod")]),t._v(" "),s("h3",{attrs:{id:"pod对象-基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod对象-基本概念"}},[t._v("#")]),t._v(" Pod对象：基本概念")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("Pod 是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。")])])]),t._v(" "),s("li",[s("em",[t._v("Pod")]),t._v(" （就像在鲸鱼荚或者豌豆荚中）是一组（一个或多个） "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/what-is-kubernetes/#why-containers",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器"),s("OutboundLink")],1),t._v("； 这些容器共享存储、网络、以及怎样运行这些容器的声明。 Pod 中的内容总是并置（colocated）的并且一同调度，在共享的上下文中运行。 Pod 所建模的是特定于应用的“逻辑主机”，其中包含一个或多个应用容器， 这些容器是相对紧密的耦合在一起的。 在非云环境中，在相同的物理机或虚拟机上运行的应用类似于 在同一逻辑主机上运行的云应用。")]),t._v(" "),s("li",[t._v("除了应用容器，Pod 还可以包含在 Pod 启动期间运行的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/init-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Init 容器"),s("OutboundLink")],1),t._v("。 你也可以在集群中支持"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/ephemeral-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("临时性容器"),s("OutboundLink")],1),t._v(" 的情况下，为调试的目的注入临时性容器。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("资源共享和通信：")])]),t._v("  Pod 使它的成员容器间能够进行数据共享和通信。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("Pod中的存储：")])]),t._v(" 一个 Pod 可以设置一组共享的存储"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/storage/volumes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("卷"),s("OutboundLink")],1),t._v("。 Pod 中的所有容器都可以访问该共享卷，从而允许这些容器共享数据。 卷还允许 Pod 中的持久数据保留下来，即使其中的容器需要重新启动。")])]),t._v(" "),s("h3",{attrs:{id:"如何使用-pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-pod"}},[t._v("#")]),t._v(" 如何使用 Pod")]),t._v(" "),s("p",[t._v("通常你不需要直接创建 Pod，甚至单实例 Pod。 相反，你会使用诸如 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),s("OutboundLink")],1),t._v(" 或 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/job/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Job"),s("OutboundLink")],1),t._v(" 这类工作负载资源 来创建 Pod。如果 Pod 需要跟踪状态， 可以考虑 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/statefulset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("StatefulSet"),s("OutboundLink")],1),t._v(" 资源。")]),t._v(" "),s("p",[t._v("你很少在 Kubernetes 中直接创建一个个的 Pod，甚至是单实例（Singleton）的 Pod。 这是因为 Pod 被设计成了相对临时性的、用后即抛的一次性实体。 当 Pod 由你或者间接地由 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/controller/",target:"_blank",rel:"noopener noreferrer"}},[t._v("控制器"),s("OutboundLink")],1),t._v(" 创建时，它被调度在集群中的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),s("OutboundLink")],1),t._v("上运行。 Pod 会保持在该节点上运行，直到 Pod 结束执行、Pod 对象被删除、Pod 因资源不足而被 "),s("em",[t._v("驱逐")]),t._v(" 或者节点失效为止。")]),t._v(" "),s("p",[t._v("Kubernetes 集群中的 Pod 主要有两种用法：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("运行单个容器的 Pod")]),t._v('。"每个 Pod 一个容器"模型是最常见的 Kubernetes 用例； 在这种情况下，可以将 Pod 看作单个容器的包装器，并且 Kubernetes 直接管理 Pod，而不是容器。')]),t._v(" "),s("li",[s("strong",[t._v("运行多个协同工作的容器的 Pod")]),t._v("。 Pod 可能封装由多个紧密耦合且需要共享资源的共处容器组成的应用程序。 这些位于同一位置的容器可能形成单个内聚的服务单元 —— 一个容器将文件从共享卷提供给公众， 而另一个单独的“边车”（sidecar）容器则刷新或更新这些文件。 Pod 将这些容器和存储资源打包为一个可管理的实体。")])]),t._v(" "),s("h3",{attrs:{id:"pod-怎样管理多个容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-怎样管理多个容器"}},[t._v("#")]),t._v(" Pod 怎样管理多个容器")]),t._v(" "),s("ul",[s("li",[t._v("Pod 被设计成支持形成内聚服务单元的多个协作过程（形式为容器）。 Pod 中的容器被自动安排到集群中的同一物理机或虚拟机上，并可以一起进行调度。 容器之间可以共享资源和依赖、彼此通信、协调何时以及何种方式终止自身。")]),t._v(" "),s("li",[t._v("Pod 天生地为其成员容器提供了两种共享资源："),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/#pod-networking",target:"_blank",rel:"noopener noreferrer"}},[t._v("网络"),s("OutboundLink")],1),t._v("和 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/#pod-storage",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"pod-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-使用"}},[t._v("#")]),t._v(" Pod 使用")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("说明：")]),t._v(" 重启 Pod 中的容器不应与重启 Pod 混淆。 Pod 不是进程，而是容器运行的环境。 在被删除之前，Pod 会一直存在。")]),t._v(" "),s("p",[s("strong",[t._v("Pod 和控制器")])]),t._v(" "),s("p",[s("strong",[t._v("你可以使用工作负载资源来创建和管理多个 Pod。 资源的控制器能够处理副本的管理、上线，并在 Pod 失效时提供自愈能力。 例如，如果一个节点失败，控制器注意到该节点上的 Pod 已经停止工作， 就可以创建替换性的 Pod。调度器会将替身 Pod 调度到一个健康的节点执行。")])])]),t._v(" "),s("h3",{attrs:{id:"pod-模版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-模版"}},[t._v("#")]),t._v(" Pod 模版")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/",target:"_blank",rel:"noopener noreferrer"}},[t._v("负载"),s("OutboundLink")],1),t._v("资源的控制器通常使用 "),s("em",[t._v("Pod 模板（Pod Template）")]),t._v(" 来替你创建 Pod 并管理它们。")]),t._v(" "),s("li",[t._v("Pod 模板是包含在工作负载对象中的规范，用来创建 Pod。这类负载资源包括 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),s("OutboundLink")],1),t._v("、 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/job/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Job"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/daemonset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DaemonSets"),s("OutboundLink")],1),t._v("等。")]),t._v(" "),s("li",[t._v("工作负载的控制器会使用负载对象中的 "),s("code",[t._v("PodTemplate")]),t._v(" 来生成实际的 Pod。 "),s("code",[t._v("PodTemplate")]),t._v(" 是你用来运行应用时指定的负载资源的目标状态的一部分。")])]),t._v(" "),s("p",[t._v("下面的示例是一个简单的 Job 的清单，其中的 "),s("code",[t._v("template")]),t._v(" 指示启动一个容器。 该 Pod 中的容器会打印一条消息之后暂停。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里是 Pod 模版")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sh'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo \"Hello, Kubernetes!\" && sleep 3600'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OnFailure\n")])])]),s("h3",{attrs:{id:"pod-更新与替换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-更新与替换"}},[t._v("#")]),t._v(" Pod 更新与替换")]),t._v(" "),s("ul",[s("li",[t._v("修改 Pod 模版或者切换到新的 Pod 模版都不会对已经存在的 Pod 起作用。 Pod 不会直接收到模版的更新。相反， 新的 Pod 会被创建出来，与更改后的 Pod 模版匹配。")]),t._v(" "),s("li",[t._v("当某工作负载的 Pod 模板被改变时，控制器会基于更新的模板 创建新的 Pod 对象而不是对现有 Pod 执行更新或者修补操作。")]),t._v(" "),s("li",[t._v("Pod 的绝大多数元数据都是不可变的。例如，你不可以改变其 "),s("code",[t._v("namespace")]),t._v("、"),s("code",[t._v("name")]),t._v("、 "),s("code",[t._v("uid")]),t._v(" 或者 "),s("code",[t._v("creationTimestamp")]),t._v(" 字段；"),s("code",[t._v("generation")]),t._v(" 字段是比较特别的，如果更新 该字段，只能增加字段取值而不能减少。")]),t._v(" "),s("li",[t._v("在更新"),s("code",[t._v("spec.activeDeadlineSeconds")]),t._v(" 字段时，以下两种更新操作是被允许的：\n"),s("ol",[s("li",[t._v("如果该字段尚未设置，可以将其设置为一个正数；")]),t._v(" "),s("li",[t._v("如果该字段已经设置为一个正数，可以将其设置为一个更小的、非负的整数。")])])])]),t._v(" "),s("h3",{attrs:{id:"容器探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器探针"}},[t._v("#")]),t._v(" 容器探针")]),t._v(" "),s("p",[s("em",[t._v("Pr+obe")]),t._v(" 是由 kubelet 对容器执行的定期诊断。要执行诊断，kubelet 可以执行三种动作：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ExecAction")]),t._v("（借助容器运行时执行）")]),t._v(" "),s("li",[s("code",[t._v("TCPSocketAction")]),t._v("（由 kubelet 直接检测）")]),t._v(" "),s("li",[s("code",[t._v("HTTPGetAction")]),t._v("（由 kubelet 直接检测）")])]),t._v(" "),s("h3",{attrs:{id:"pod-的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-的生命周期"}},[t._v("#")]),t._v(" Pod 的生命周期")]),t._v(" "),s("ul",[s("li",[t._v("Pod 遵循一个预定义的生命周期，起始于 "),s("code",[t._v("Pending")]),t._v(" "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase",target:"_blank",rel:"noopener noreferrer"}},[t._v("阶段"),s("OutboundLink")],1),t._v("，如果至少 其中有一个主要容器正常启动，则进入 "),s("code",[t._v("Running")]),t._v("，之后取决于 Pod 中是否有容器以 失败状态结束而进入 "),s("code",[t._v("Succeeded")]),t._v(" 或者 "),s("code",[t._v("Failed")]),t._v(" 阶段。")]),t._v(" "),s("li",[t._v("在 Pod 运行期间，"),s("code",[t._v("kubelet")]),t._v(" 能够重启容器以处理一些失效场景。 在 Pod 内部，Kubernetes 跟踪不同容器的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#container-states",target:"_blank",rel:"noopener noreferrer"}},[t._v("状态"),s("OutboundLink")],1),t._v(" 并确定使 Pod 重新变得健康所需要采取的动作。")]),t._v(" "),s("li",[t._v("Pod 在其生命周期中只会被"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/scheduling-eviction/",target:"_blank",rel:"noopener noreferrer"}},[t._v("调度"),s("OutboundLink")],1),t._v("一次。 一旦 Pod 被调度（分派）到某个节点，Pod 会一直在该节点运行，直到 Pod 停止或者 被"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination",target:"_blank",rel:"noopener noreferrer"}},[t._v("终止"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"pod-生命期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-生命期"}},[t._v("#")]),t._v(" Pod 生命期")])]),t._v(" "),s("ul",[s("li",[t._v("[x] 和一个个独立的应用容器一样，Pod 也被认为是相对临时性（而不是长期存在）的实体。 Pod 会被创建、赋予一个唯一的 ID（"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/names/#uids",target:"_blank",rel:"noopener noreferrer"}},[t._v("UID"),s("OutboundLink")],1),t._v("）， 并被调度到节点，并在终止（根据重启策略）或删除之前一直运行在该节点。")]),t._v(" "),s("li",[t._v("[x] 如果一个"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),s("OutboundLink")],1),t._v("死掉了，调度到该节点 的 Pod 也被计划在给定超时期限结束后"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#pod-garbage-collection",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("[x] Pod 自身不具有自愈能力。如果 Pod 被调度到某"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/nodes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点"),s("OutboundLink")],1),t._v(" 而该节点之后失效，Pod 会被删除；类似地，Pod 无法在因节点资源 耗尽或者节点维护而被驱逐期间继续存活。Kubernetes 使用一种高级抽象 来管理这些相对而言可随时丢弃的 Pod 实例，称作 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/architecture/controller/",target:"_blank",rel:"noopener noreferrer"}},[t._v("控制器"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("li",[t._v("[x] 任何给定的 Pod （由 UID 定义）从不会被“重新调度（rescheduled）”到不同的节点； 相反，这一 Pod 可以被一个新的、几乎完全相同的 Pod 替换掉。 如果需要，新 Pod 的名字可以不变，但是其 UID 会不同。")]),t._v(" "),s("li",[t._v("[x] 如果某物声称其生命期与某 Pod 相同，例如存储"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/storage/volumes/",target:"_blank",rel:"noopener noreferrer"}},[t._v("卷"),s("OutboundLink")],1),t._v("， 这就意味着该对象在此 Pod （UID 亦相同）存在期间也一直存在。 如果 Pod 因为任何原因被删除，甚至某完全相同的替代 Pod 被创建时， 这个相关的对象（例如这里的卷）也会被删除并重建。")])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"pod-阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-阶段"}},[t._v("#")]),t._v(" Pod 阶段")])]),t._v(" "),s("p",[t._v("Pod 的阶段是 Pod 在其生命周期中所处位置的简单宏观概述。 该阶段并不是对容器或 Pod 状态的综合汇总，也不是为了成为完整的状态机。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("Pending")]),t._v("（悬决）")]),t._v(" "),s("th",[t._v("Pod 已被 Kubernetes 系统接受，但有一个或者多个容器尚未创建亦未运行。此阶段包括等待 Pod 被调度的时间和通过网络下载镜像的时间，")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Running")]),t._v("（运行中）")]),t._v(" "),s("td",[t._v("Pod 已经绑定到了某个节点，Pod 中所有的容器都已被创建。至少有一个容器仍在运行，或者正处于启动或重启状态。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Succeeded")]),t._v("（成功）")]),t._v(" "),s("td",[t._v("Pod 中的所有容器都已成功终止，并且不会再重启。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Failed")]),t._v("（失败）")]),t._v(" "),s("td",[t._v("Pod 中的所有容器都已终止，并且至少有一个容器是因为失败终止。也就是说，容器以非 0 状态退出或者被系统终止。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Unknown")]),t._v("（未知）")]),t._v(" "),s("td",[t._v("因为某些原因无法取得 Pod 的状态。这种情况通常是因为与 Pod 所在主机通信失败。")])])])]),t._v(" "),s("p",[t._v("如果某节点死掉或者与集群中其他节点失联，Kubernetes 会实施一种策略，将失去的节点上运行的所有 Pod 为 "),s("code",[t._v("Failed")]),t._v("。")]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"容器状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器状态"}},[t._v("#")]),t._v(" 容器状态")])]),t._v(" "),s("p",[t._v("Kubernetes 会跟踪 Pod 中每个容器的状态，就像它跟踪 Pod 总体上的"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase",target:"_blank",rel:"noopener noreferrer"}},[t._v("阶段"),s("OutboundLink")],1),t._v("一样。 你可以使用"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/containers/container-lifecycle-hooks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器生命周期回调"),s("OutboundLink")],1),t._v(" 来在容器生命周期中的特定时间点触发事件。")]),t._v(" "),s("p",[t._v("一旦"),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kube-scheduler/",target:"_blank",rel:"noopener noreferrer"}},[t._v("调度器"),s("OutboundLink")],1),t._v("将 Pod 分派给某个节点，"),s("code",[t._v("kubelet")]),t._v(" 就通过 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes",target:"_blank",rel:"noopener noreferrer"}},[t._v("容器运行时"),s("OutboundLink")],1),t._v(" 开始为 Pod 创建容器。")]),t._v(" "),s("p",[t._v("容器的状态有三种：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Waiting")]),t._v("（等待）")]),t._v(" "),s("li",[s("code",[t._v("Running")]),t._v("（运行中）")]),t._v(" "),s("li",[s("code",[t._v("Terminated")]),t._v("（已终止）")])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"容器重启策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器重启策略"}},[t._v("#")]),t._v(" 容器重启策略")])]),t._v(" "),s("p",[t._v("Pod 的 "),s("code",[t._v("spec")]),t._v(" 中包含一个 "),s("code",[t._v("restartPolicy")]),t._v(" 字段，其可能取值包括 Always、OnFailure 和 Never。默认值是 Always。")]),t._v(" "),s("p",[s("code",[t._v("restartPolicy")]),t._v(" 适用于 Pod 中的所有容器。"),s("code",[t._v("restartPolicy")]),t._v(" 仅针对同一节点上 "),s("code",[t._v("kubelet")]),t._v(" 的容器重启动作。当 Pod 中的容器退出时，"),s("code",[t._v("kubelet")]),t._v(" 会按指数回退 方式计算重启的延迟（10s、20s、40s、...），其最长延迟为 5 分钟。 一旦某容器执行了 10 分钟并且没有出现问题，"),s("code",[t._v("kubelet")]),t._v(" 对该容器的重启回退计时器执行 重置操作。")]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"pod-状况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-状况"}},[t._v("#")]),t._v(" Pod 状况")])]),t._v(" "),s("p",[t._v("Pod 有一个 PodStatus 对象，其中包含一个 "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#podcondition-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("PodConditions"),s("OutboundLink")],1),t._v(" 数组。Pod 可能通过也可能未通过其中的一些状况测试。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("PodScheduled")]),t._v("：Pod 已经被调度到某节点；")]),t._v(" "),s("li",[s("code",[t._v("ContainersReady")]),t._v("：Pod 中所有容器都已就绪；")]),t._v(" "),s("li",[s("code",[t._v("Initialized")]),t._v("：所有的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/init-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Init 容器"),s("OutboundLink")],1),t._v(" 都已成功启动；")]),t._v(" "),s("li",[s("code",[t._v("Ready")]),t._v("：Pod 可以为请求提供服务，并且应该被添加到对应服务的负载均衡池中")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("type")])]),t._v(" "),s("th",[t._v("Pod 状况的名称")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("status")])]),t._v(" "),s("td",[t._v('表明该状况是否适用，可能的取值有 "'),s("code",[t._v("True")]),t._v('", "'),s("code",[t._v("False")]),t._v('" 或 "'),s("code",[t._v("Unknown")]),t._v('"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("lastProbeTime")])]),t._v(" "),s("td",[t._v("上次探测 Pod 状况时的时间戳")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("lastTransitionTime")])]),t._v(" "),s("td",[t._v("Pod 上次从一种状态转换到另一种状态时的时间戳")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("reason")])]),t._v(" "),s("td",[t._v("机器可读的、驼峰编码（UpperCamelCase）的文字，表述上次状况变化的原因")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("message")])]),t._v(" "),s("td",[t._v("人类可读的消息，给出上次状态转换的详细信息")])])])]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"pod-就绪态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod-就绪态"}},[t._v("#")]),t._v(" Pod 就绪态")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("FEATURE STATE:")]),t._v(" "),s("code",[t._v("Kubernetes v1.14 [stable]")])])]),t._v(" "),s("li",[s("p",[t._v("你的应用可以向 PodStatus 中注入额外的反馈或者信号："),s("em",[t._v("Pod Readiness（Pod 就绪态）")]),t._v("。 要使用这一特性，可以设置 Pod 规约中的 "),s("code",[t._v("readinessGates")]),t._v(" 列表，为 kubelet 提供一组额外的状况供其评估 Pod 就绪态时使用。")])]),t._v(" "),s("li",[s("p",[t._v("就绪态门控基于 Pod 的 "),s("code",[t._v("status.conditions")]),t._v(" 字段的当前值来做决定。 如果 Kubernetes 无法在 "),s("code",[t._v("status.conditions")]),t._v(' 字段中找到某状况，则该状况的 状态值默认为 "'),s("code",[t._v("False")]),t._v('"。')])])]),t._v(" "),s("h3",{attrs:{id:"容器探针-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器探针-2"}},[t._v("#")]),t._v(" 容器探针")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#probe-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("Probe"),s("OutboundLink")],1),t._v(" 是由 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kubelet/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubelet"),s("OutboundLink")],1),t._v(" 对容器执行的定期诊断。 要执行诊断，kubelet 调用由容器实现的 "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#handler-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("Handler"),s("OutboundLink")],1),t._v(" （处理程序）。有三种类型的处理程序：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#execaction-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("ExecAction"),s("OutboundLink")],1),t._v("： 在容器内执行指定命令。如果命令退出时返回码为 0 则认为诊断成功。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#tcpsocketaction-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCPSocketAction"),s("OutboundLink")],1),t._v("： 对容器的 IP 地址上的指定端口执行 TCP 检查。如果端口打开，则诊断被认为是成功的。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#httpgetaction-v1-core",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTPGetAction"),s("OutboundLink")],1),t._v("： 对容器的 IP 地址上指定端口和路径执行 HTTP Get 请求。如果响应的状态码大于等于 200 且小于 400，则诊断被认为是成功的。")])]),t._v(" "),s("p",[t._v("每次探测都将获得以下三种结果之一：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Success")]),t._v("（成功）：容器通过了诊断。")]),t._v(" "),s("li",[s("code",[t._v("Failure")]),t._v("（失败）：容器未通过诊断。")]),t._v(" "),s("li",[s("code",[t._v("Unknown")]),t._v("（未知）：诊断失败，因此不会采取任何行动。")])]),t._v(" "),s("p",[t._v("针对运行中的容器，"),s("code",[t._v("kubelet")]),t._v(" 可以选择是否执行以下三种探针，以及如何针对探测结果作出反应：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("livenessProbe")]),t._v("：指示容器是否正在运行。如果存活态探测失败，则 kubelet 会杀死容器， 并且容器将根据其"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("重启策略"),s("OutboundLink")],1),t._v("决定未来。如果容器不提供存活探针， 则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("readinessProbe")]),t._v("：指示容器是否准备好为请求提供服务。如果就绪态探测失败， 端点控制器将从与 Pod 匹配的所有服务的端点列表中删除该 Pod 的 IP 地址。 初始延迟之前的就绪态的状态值默认为 "),s("code",[t._v("Failure")]),t._v("。 如果容器不提供就绪态探针，则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("startupProbe")]),t._v(": 指示容器中的应用是否已经启动。如果提供了启动探针，则所有其他探针都会被 禁用，直到此探针成功为止。如果启动探测失败，"),s("code",[t._v("kubelet")]),t._v(" 将杀死容器，而容器依其 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy",target:"_blank",rel:"noopener noreferrer"}},[t._v("重启策略"),s("OutboundLink")],1),t._v("进行重启。 如果容器没有提供启动探测，则默认状态为 "),s("code",[t._v("Success")]),t._v("。")])]),t._v(" "),s("li",[s("h4",{attrs:{id:"何时该使用存活态探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时该使用存活态探针"}},[t._v("#")]),t._v(" 何时该使用存活态探针?")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("FEATURE STATE:")]),t._v(" "),s("code",[t._v("Kubernetes v1.0 [stable]")])]),t._v(" "),s("li",[t._v("如果容器中的进程能够在遇到问题或不健康的情况下自行崩溃，则不一定需要存活态探针; "),s("code",[t._v("kubelet")]),t._v(" 将根据 Pod 的"),s("code",[t._v("restartPolicy")]),t._v(" 自动执行修复操作。")]),t._v(" "),s("li",[t._v("如果你希望容器在探测失败时被杀死并重新启动，那么请指定一个存活态探针， 并指定"),s("code",[t._v("restartPolicy")]),t._v(' 为 "'),s("code",[t._v("Always")]),t._v('" 或 "'),s("code",[t._v("OnFailure")]),t._v('"。')])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"何时该使用就绪态探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时该使用就绪态探针"}},[t._v("#")]),t._v(" 何时该使用就绪态探针?")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("FEATURE STATE:")]),t._v(" "),s("code",[t._v("Kubernetes v1.0 [stable]")])])]),t._v(" "),s("li",[s("p",[t._v("如果要仅在探测成功时才开始向 Pod 发送请求流量，请指定就绪态探针。 在这种情况下，就绪态探针可能与存活态探针相同，但是规约中的就绪态探针的存在意味着 Pod 将在启动阶段不接收任何数据，并且只有在探针探测成功后才开始接收数据。")])]),t._v(" "),s("li",[s("p",[t._v("如果你希望容器能够自行进入维护状态，也可以指定一个就绪态探针，检查某个特定于 就绪态的因此不同于存活态探测的端点。")])]),t._v(" "),s("li",[s("p",[t._v("如果你的应用程序对后端服务有严格的依赖性，你可以同时实现存活态和就绪态探针。 当应用程序本身是健康的，存活态探针检测通过后，就绪态探针会额外检查每个所需的后端服务是否可用。 这可以帮助你避免将流量导向只能返回错误信息的 Pod。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("说明：")])]),t._v(" "),s("p",[s("strong",[s("code",[t._v("请注意，如果你只是想在 Pod 被删除时能够排空请求，则不一定需要使用就绪态探针； 在删除 Pod 时，Pod 会自动将自身置于未就绪状态，无论就绪态探针是否存在。 等待 Pod 中的容器停止期间，Pod 会一直处于未就绪状态。")])])])])])]),t._v(" "),s("li",[s("h4",{attrs:{id:"何时该使用启动探针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何时该使用启动探针"}},[t._v("#")]),t._v(" 何时该使用启动探针？")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("FEATURE STATE:")]),t._v(" "),s("code",[t._v("Kubernetes v1.18 [beta]")])])]),t._v(" "),s("li",[s("p",[t._v("对于所包含的容器需要较长时间才能启动就绪的 Pod 而言，启动探针是有用的。 你不再需要配置一个较长的存活态探测时间间隔，只需要设置另一个独立的配置选定， 对启动期间的容器执行探测，从而允许使用远远超出存活态时间间隔所允许的时长。")])]),t._v(" "),s("li",[s("p",[t._v("如果你的容器启动时间通常超出 "),s("code",[t._v("initialDelaySeconds + failureThreshold × periodSeconds")]),t._v(" 总值，你应该设置一个启动探测，对存活态探针所使用的同一端点执行检查。 "),s("code",[t._v("periodSeconds")]),t._v(" 的默认值是 10 秒。你应该将其 "),s("code",[t._v("failureThreshold")]),t._v(" 设置得足够高， 以便容器有充足的时间完成启动，并且避免更改存活态探针所使用的默认值。 这一设置有助于减少死锁状况的发生。")])])])])]),t._v(" "),s("h3",{attrs:{id:"pod对象-管理命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod对象-管理命令"}},[t._v("#")]),t._v(" Pod对象：管理命令")]),t._v(" "),s("p",[s("strong",[t._v("创建Pod")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" container1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n\n$ kubectl apply  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f pod.yaml \npod/web created\n$ kubectl get pods \nNAME   READY   STATUS    RESTARTS   AGE\nweb    1/1     Running   0          2m23s\n")])])]),s("p",[s("strong",[t._v("查看Pod")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl get pods \n$ kubectl describe pod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Pod名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("strong",[t._v("查看日志")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Pod名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ kubectl logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Pod名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl logs web container1 ")]),t._v("\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n/docker-entrypoint.sh: Looking "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" shell scripts "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /etc/nginx/conf.d/default.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n/docker-entrypoint.sh: Configuration complete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ready "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" start up\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#1: using the "epoll" event method')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: nginx/1.21.3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: built by gcc 8.3.0 (Debian 8.3.0-6) ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: OS: Linux 3.10.0-862.2.3.el7.x86_64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker processes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker process 31")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 02:26:25 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker process 32")]),t._v("\n")])])]),s("p",[s("strong",[t._v("进入容器终端")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Pod名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--bash")]),t._v("\n")])])]),s("p",[s("strong",[t._v("删除Pod")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ kubectl delete pod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Pod名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"pod对象-重启策略-健康检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod对象-重启策略-健康检查"}},[t._v("#")]),t._v(" Pod对象：重启策略+健康检查")]),t._v(" "),s("h3",{attrs:{id:"重启策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重启策略"}},[t._v("#")]),t._v(" "),s("code",[t._v("重启策略")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Always：")]),t._v(" 当容器终止退出后，总是重启容器，默认策略。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("OnFailure：")]),t._v(" 当容器异常退出后，（退出状态码非0）时，才重启容器。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Never：")]),t._v(" 当容器终止退出，从不重启容器。")])])]),t._v(" "),s("h3",{attrs:{id:"健康检查有以下两种类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#健康检查有以下两种类型"}},[t._v("#")]),t._v(" "),s("code",[t._v("健康检查有以下两种类型")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("livenessProbe（存活检查）：")]),t._v("  如果检查失败，将杀死容器，根据Pod的restartPolicy来操作。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("readinessProbe（就绪检查）：")]),t._v("  如果检查失败，Kubernetes会把Pod从service endpoints中剔除。")])])]),t._v(" "),s("h3",{attrs:{id:"支持以下三种检查方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持以下三种检查方法"}},[t._v("#")]),t._v(" "),s("code",[t._v("支持以下三种检查方法")])]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("httpGet：")]),t._v("  发送http请求，返回200-400范围状态码为成功。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("exec：")]),t._v(" 执行Shell命令返回状态码是0为成功。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("tcpSocket：")]),t._v("  发起TCP Socket建立成功。")])])]),t._v(" "),s("p",[s("strong",[t._v("端口探测")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat pod.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\t\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重启策略 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readinessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#端口探测")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \t\t\t   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#探测的端口是80\t")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动容器后多少秒健康检查")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以后间隔多少秒检查一次")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod.yaml        ")]),t._v("\npod/web created\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get  pods ")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE\nweb    0/1     Running   0          97s\n\n需要等到端口探测完成之后才能ready\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get  pods ")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE\nweb    1/1     Running   0          97s\n")])])]),s("p",[s("strong",[t._v("http请求的健康检查")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod.yaml  ")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tcpSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readinessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /index.html\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("periodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n      \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod.yaml  ")]),t._v("\npod/web created\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME   READY   STATUS    RESTARTS   AGE\nweb    0/1     Running   0          19s\n")])])]),s("p",[s("strong",[t._v("查看日志检查是否有健康检查成功")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl logs web web -f ")]),t._v("\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n/docker-entrypoint.sh: Looking "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" shell scripts "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /etc/nginx/conf.d/default.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n/docker-entrypoint.sh: Configuration complete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ready "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" start up\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#1: using the "epoll" event method')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: nginx/1.21.3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: built by gcc 8.3.0 (Debian 8.3.0-6) ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: OS: Linux 3.10.0-862.2.3.el7.x86_64")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker processes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker process 31")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("/10/27 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(":10:13 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1: start worker process 32")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.138 - - "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("/Oct/2021:12:10:45 +0000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET /index.html HTTP/1.1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("615")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-probe/1.20"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.25")]),t._v(".253.138 - - "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v("/Oct/2021:12:10:55 +0000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET /index.html HTTP/1.1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("615")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-probe/1.20"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("示例：执行Shell命令")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cat\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /tmp/healthy\n")])])]),s("p",[s("strong",[t._v("示例：HTTP请求")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /healthz \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Custom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Header\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Awesome\n")])])]),s("h3",{attrs:{id:"pod对象-lnit-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod对象-lnit-container"}},[t._v("#")]),t._v(" Pod对象：lnit Container")]),t._v(" "),s("p",[s("strong",[t._v("lnit Container： 顾名思义，用于初始化工作，执行完就结束，可以理解为一次性任务。")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("支持大部分应用容器配置，但不支持健康检查")])]),t._v(" "),s("li",[s("code",[t._v("优先应用容器执行")])])]),t._v(" "),s("p",[s("strong",[t._v("应用场景：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("环境检查： 例如确保应用容器依赖的服务启动后再启动应用容器")])]),t._v(" "),s("li",[s("code",[t._v("初始化配置： 例如给应用容器准备配置文件")])])]),t._v(" "),s("p",[s("strong",[t._v("示例：部署一个web网站，网站程序没有打包到镜像中，而是希望从代码仓库中动态拉取放到应用容器中。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat init-container.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" wget \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-O"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/index.html"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.ctnrs.com"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wwwroot\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wwwroot \n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /usr/share/nginx/html \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wwwroot \n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f init-container.yaml  ")]),t._v("\npod/init-demo created\n")])])]),s("p",[s("strong",[t._v("因此，Pod中会有这几种类型的容器：")])]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("Infrastructure Container:")])]),t._v(" 基础容器")]),t._v(" "),s("ul",[s("li",[t._v("维护整个Pod的网络")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("InitContainers：")])]),t._v(" 初始化容器")]),t._v(" "),s("ul",[s("li",[t._v("先于业务容器开始执行")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("Containers：")])]),t._v(" 业务容器")]),t._v(" "),s("ul",[s("li",[t._v("并行启动")])])])]),t._v(" "),s("h3",{attrs:{id:"pod对象-静态pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pod对象-静态pod"}},[t._v("#")]),t._v(" Pod对象：静态Pod")]),t._v(" "),s("ul",[s("li",[s("p",[s("em",[t._v("静态 Pod（Static Pod）")]),t._v(" 直接由特定节点上的 "),s("code",[t._v("kubelet")]),t._v(" 守护进程管理， 不需要"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kube-apiserver/",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 服务器"),s("OutboundLink")],1),t._v("看到它们。 尽管大多数 Pod 都是通过控制面（例如，"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),s("OutboundLink")],1),t._v("） 来管理的，对于静态 Pod 而言，"),s("code",[t._v("kubelet")]),t._v(" 直接监控每个 Pod，并在其失效时重启之。")])]),t._v(" "),s("li",[s("p",[t._v("静态 Pod 通常绑定到某个节点上的 "),s("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubelet",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubelet"),s("OutboundLink")],1),t._v("。 其主要用途是运行自托管的控制面。 在自托管场景中，使用 "),s("code",[t._v("kubelet")]),t._v(" 来管理各个独立的 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/components/#control-plane-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("控制面组件"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("kubelet")]),t._v(" 自动尝试为每个静态 Pod 在 Kubernetes API 服务器上创建一个 "),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/glossary/?all=true#term-mirror-pod",target:"_blank",rel:"noopener noreferrer"}},[t._v("镜像 Pod"),s("OutboundLink")],1),t._v("。 这意味着在节点上运行的 Pod 在 API 服务器上是可见的，但不可以通过 API 服务器来控制。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("说明：")])]),t._v(" "),s("p",[t._v("静态 Pod 的 "),s("code",[t._v("spec")]),t._v(" 不能引用其他的 API 对象（例如："),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-service-account/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ServiceAccount"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-pod-configmap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConfigMap"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Secret"),s("OutboundLink")],1),t._v("等）。")])])]),t._v(" "),s("h3",{attrs:{id:"静态pod的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态pod的特点"}},[t._v("#")]),t._v(" 静态Pod的特点：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Pod由特定节点上的kubelet管理")])]),t._v(" "),s("li",[s("strong",[t._v("不能使用控制器")])]),t._v(" "),s("li",[s("strong",[t._v("Pod的名称标识当前节点的名称")])]),t._v(" "),s("li",[s("strong",[t._v("在kubelet的配置文件下启动Pod无法使用kubectl删除，只能删除yaml文件，方便更新数据")])])]),t._v(" "),s("h3",{attrs:{id:"在kubelet配置文件中启用静态pod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在kubelet配置文件中启用静态pod"}},[t._v("#")]),t._v(" 在kubelet配置文件中启用静态Pod：")]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v("[root@master ~]# cat /var/lib/kubelet/config.yaml | grep staticPodPath:\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("staticPodPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("/etc/kubernetes/manifests")])]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /etc/kubernetes/manifests/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master manifests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim pod.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod1\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" static"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mypod1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sleep 360000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"deployment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[t._v("#")]),t._v(" Deployment")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebecb52ab3f51d9113a1c2.png"}}),t._v(" "),s("h3",{attrs:{id:"deployment-应用生命周期管理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-应用生命周期管理流程"}},[t._v("#")]),t._v(" Deployment：应用生命周期管理流程")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebecb52ab3f51d9113a1cb.png"}}),t._v(" "),s("h3",{attrs:{id:"deployment-部署应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-部署应用"}},[t._v("#")]),t._v(" Deployment：部署应用")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("创建deployment的yaml文件")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat deployment.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod副本预期数量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web \t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod副本的标签")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n")])])]),s("ul",[s("li",[s("strong",[t._v("部署nginx镜像")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f deployment.yaml  ")]),t._v("\ndeployment.apps/web unchanged\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get  deployment ")]),t._v("\nNAME   READY   UP-TO-DATE   AVAILABLE   AGE\nweb    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/3     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           3m\n")])])]),s("h3",{attrs:{id:"deployment-滚动升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-滚动升级"}},[t._v("#")]),t._v(" Deployment：滚动升级")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("第二步：应用升级（更新镜像三种方式）")])])]),t._v(" "),s("ul",[s("li",[t._v("kubectl apply -f xxx.yaml")]),t._v(" "),s("li",[t._v("kubectl set image deployment/web nginx=nginx:1.16")]),t._v(" "),s("li",[t._v("kubectl edit deployment/web")]),t._v(" "),s("li",[t._v("滚动升级：K8s对Pod升级的默认策略，通过使 用新版本Pod逐步更新旧版本Pod，实现零停机 发布，用户无感知。")])]),t._v(" "),s("p",[s("strong",[t._v("使用kubectl set实现滚动升级")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  kubectl set image deployment/web  web=nginx:1.16  ")]),t._v("\ndeployment.apps/web image updated\n")])])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebecb52ab3f51d9113a1d3.png"}}),t._v(" "),s("h3",{attrs:{id:"deployment-水平扩缩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-水平扩缩容"}},[t._v("#")]),t._v(" Deployment：水平扩缩容")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("第三步：水平扩缩容（启动多实例，提高并发）")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("修改yaml里replicas值，再apply")])]),t._v(" "),s("li",[s("p",[t._v("kubectl scale deployment web --replicas=10")]),t._v(" "),s("p",[t._v("注：replicas参数控制Pod副本数量")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl scale deployment/web --replicas=10 ")]),t._v("\ndeployment.apps/web scaled\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get  deployment")]),t._v("\nNAME   READY   UP-TO-DATE   AVAILABLE   AGE\nweb    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/10    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           16m\n")])])]),s("h3",{attrs:{id:"deployment-回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-回滚"}},[t._v("#")]),t._v(" Deployment：回滚")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("第四步：回滚（发布失败恢复正常版本）")])])]),t._v(" "),s("ul",[s("li",[t._v("kubectl rollout history deployment/web # 查看历史发布版本")]),t._v(" "),s("li",[t._v("kubectl rollout undo deployment/web # 回滚上一个版本")]),t._v(" "),s("li",[t._v("kubectl rollout undo deployment/web --to-revision=2 # 回滚历史指定版本")]),t._v(" "),s("li",[t._v("注：回滚是重新部署某一次部署时的状态，即当时版本所有配置")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout history deployment/web ")]),t._v("\ndeployment.apps/web \nREVISION  CHANGE-CAUSE\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout undo deployment/web        ")]),t._v("\ndeployment.apps/web rolled back\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl rollout undo deployment/web --to-revision=2 ")]),t._v("\ndeployment.apps/web rolled back\n")])])]),s("h3",{attrs:{id:"deployment-删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-删除"}},[t._v("#")]),t._v(" Deployment：删除")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("最后，项目下线：")])])]),t._v(" "),s("ul",[s("li",[t._v("kubectl delete deploy/web")]),t._v(" "),s("li",[t._v("kubectl delete svc/web")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete deployment/web ")]),t._v("\ndeployment.apps "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web"')]),t._v(" deleted\n")])])]),s("h3",{attrs:{id:"deployment-滚动升级与回滚实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment-滚动升级与回滚实现机制"}},[t._v("#")]),t._v(" Deployment：滚动升级与回滚实现机制")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("滚动更新策略")])])]),t._v(" "),s("p",[t._v("每次只升级一个或多个服务，升级完成加入生产环境，不断执行这个过 程，直到集群中的全部旧版升级新版本。")]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ul",[s("li",[t._v("用户无感知，平滑过渡")])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")])]),t._v(" "),s("ul",[s("li",[t._v("部署周期长")]),t._v(" "),s("li",[t._v("发布策略较复杂")])]),t._v(" "),s("h2",{attrs:{id:"replicationcontroller和replicaset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicationcontroller和replicaset"}},[t._v("#")]),t._v(" ReplicationController和ReplicaSet")]),t._v(" "),s("h3",{attrs:{id:"replicationcontroller"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicationcontroller"}},[t._v("#")]),t._v(" ReplicationController")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("实际工作中，很少单独操作Pod的，之所以k8s能够“自愈”，就是通过rc（ReplicationController）、rs（ReplicaSet）、Deployment等这些组件，再加上k8s核心controller工作机制来实现的。")])]),t._v(" "),s("li",[s("code",[t._v("ReplicationController（简称为RC）。")]),t._v(" 在旧版本的Kubernetes中，只有ReplicationController对象。它的主要作用是确保Pod以你指定的副本数运行，即如果有容器异常退出，会自动创建新的 Pod 来替代；而异常多出来的容器也会自动回收。可以说，通过ReplicationController，Kubernetes实现了集群的高可用性。")]),t._v(" "),s("li",[s("code",[t._v("ReplicationController（rc）在新的版本中，已经被ReplicaSet（rs）替换了，相对于rc，rs有更好的标签控制策略。")]),t._v("对于pod副本的控制作用，rs和rc的效果是一样的。**")])]),t._v(" "),s("h3",{attrs:{id:"replicationcontroller的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicationcontroller的使用"}},[t._v("#")]),t._v(" ReplicationController的使用")]),t._v(" "),s("ul",[s("li",[t._v("创建一个RC")]),t._v(" "),s("li",[t._v("快速生成一个deployment然后修改类型为replicationcontroller")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat  nginx.yaml \t\t\t\t\t\t\t\t\t")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#api的版本用v1，deployment默认是apps/v1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicationController\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定资源类型是ReplicationController")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#副本控制在3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#标签选择器")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f replicationcontroller.yaml ")]),t._v("\nreplicationcontroller/test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc created\n")])])]),s("p",[s("strong",[t._v("验证操作")])]),t._v(" "),s("ul",[s("li",[t._v("查看生成的rc，查看pod副本数。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete rc nginx-demo ")]),t._v("\nreplicationcontroller "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-demo"')]),t._v(" deleted\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get rc")]),t._v("\nNAME      DESIRED   CURRENT   READY   AGE\ntest-rc   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("       2m53s\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE\ntest-rc-v952c   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\ntest-rc-vr252   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\ntest-rc-x42p9   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\n")])])]),s("blockquote",[s("p",[t._v("操作pod，验证rc的副本控制效果。")])]),t._v(" "),s("ul",[s("li",[t._v("可以直接删除pod，但由于rc设置了目标副本数——3个，所以使用kubectl delete命令删除pod后，又会马上创建一个新的pod，以便维持3个副本。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE\ntest-rc-v952c   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\ntest-rc-vr252   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\ntest-rc-x42p9   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete pods --all")]),t._v("\npod "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test-rc-v952c"')]),t._v(" deleted\npod "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test-rc-vr252"')]),t._v(" deleted\npod "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test-rc-x42p9"')]),t._v(" deleted\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS              RESTARTS   AGE\ntest-rc-dwqpf   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     ContainerCreating   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\ntest-rc-r2pjp   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     ContainerCreating   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\ntest-rc-s4j58   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running             "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          19s\n")])])]),s("h3",{attrs:{id:"便捷的进行扩容和缩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#便捷的进行扩容和缩容"}},[t._v("#")]),t._v(" "),s("strong",[t._v("便捷的进行扩容和缩容")])]),t._v(" "),s("ul",[s("li",[t._v("对其Pod进行扩展伸缩，扩展到5个副本")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl scale replicationcontroller test-rc --replicas=5")]),t._v("\nreplicationcontroller/test-rc scaled\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME            READY   STATUS    RESTARTS   AGE\ntest-rc-dwqpf   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m12s\ntest-rc-f75hw   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          33s\ntest-rc-r2pjp   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m12s\ntest-rc-s4j58   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          2m12s\ntest-rc-w6tdr   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          33s\n")])])]),s("h2",{attrs:{id:"replicaset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicaset"}},[t._v("#")]),t._v(" ReplicaSet")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Kubernetes官方强烈建议避免直接使用ReplicaSet，而应该通过Deployment来创建RS和Pod。由于ReplicaSet是ReplicationController的代替物，因此用法基本相同，唯一的区别在于ReplicaSet支持集合式的selector。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("作为ReplicationController的下一代，支持新的基于集合的标签选择算符。")])])])]),t._v(" "),s("h3",{attrs:{id:"replicaset控制器用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicaset控制器用途"}},[t._v("#")]),t._v(" "),s("strong",[t._v("ReplicaSet控制器用途：")])]),t._v(" "),s("p",[s("strong",[t._v("Pod副本数量管理，不断对比当前Pod数量与期望Pod数量")])]),t._v(" "),s("p",[s("strong",[t._v("Deployment每次发布都会创建一个RS作为记录，用于实现回滚")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("kubectl get rs #查看RS记录")])]),t._v(" "),s("li",[s("strong",[t._v("kubectl rollout history deployment web #版本对应RS记录")])])]),t._v(" "),s("h3",{attrs:{id:"replicaset的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replicaset的使用"}},[t._v("#")]),t._v(" ReplicaSet的使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建一个RS")])]),t._v(" "),s("li",[s("p",[t._v("创建一个replicaset的yaml")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat replicaset.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fronted\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fronted\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f replicaset.yaml ")]),t._v("\nreplicaset.apps/nginx created\n")])])]),s("ul",[s("li",[t._v("行验证replicaset和pods的数量")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get replicaset")]),t._v("\nNAME    DESIRED   CURRENT   READY   AGE\nnginx   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("       3m1s\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get  pods")]),t._v("\nNAME          READY   STATUS    RESTARTS   AGE\nnginx-75rjb   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m6s\nnginx-87ncr   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m6s\nnginx-xsw76   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          3m6s\n")])])]),s("p",[t._v("###ReplicaSet的伸缩")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("使用Horizontal Pod Autoscaler（HPA）")])])]),t._v(" "),s("li",[s("p",[t._v("RS可以通过HPA来根据一些运行时指标实现自动伸缩，下面是一个简单的例子：")])]),t._v(" "),s("li",[s("p",[t._v("下面的描述文件会创建一个名为frontend-scaler的HorizontalPodAutoscaler，它会根据CPU的运行参数来对名为frontend的RS进行自动伸缩。")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat  hpa.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" autoscaling/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HorizontalPodAutoscaler\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("scaler\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scaleTargetRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里就可以绑定上面的标记对应的frontend")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetCPUUtilizationPercentage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n")])])]),s("ul",[s("li",[t._v("查看hpa的详细")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f hpa.yaml ")]),t._v("\nhorizontalpodautoscaler.autoscaling/frontend-scaler created\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get hpa ")]),t._v("\nNAME              REFERENCE             TARGETS         MINPODS   MAXPODS   REPLICAS   AGE\nfrontend-scaler   ReplicaSet/frontend   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/50%   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          5s\n")])])]),s("ul",[s("li",[s("p",[t._v("最后我们总结下关于 RC / RS 的⼀些特性和作⽤吧：")])]),t._v(" "),s("li",[s("p",[t._v("⼤部分情况下，我们可以通过定义⼀个 RC 实现的 Pod 的创建和副本数")])]),t._v(" "),s("li",[s("p",[t._v("RC 中包含⼀个完整的 Pod 定义模块（不包含 apiversion 和 kind)")])]),t._v(" "),s("li",[s("p",[t._v("RC 是通过 label selector 机制来实现对 Pod 副本")])]),t._v(" "),s("li",[s("p",[t._v("通过改变 RC ⾥⾯的 Pod 副本数量，可以实现 Pod 的扩")])]),t._v(" "),s("li",[s("p",[t._v("通过改变 RC ⾥⾯的 Pod 模板中镜像版本，可以实现 Pod 的滚动升级功能（但是不⽀持⼀键回 滚，需要⽤相同的⽅法去修改镜像地址）")])])]),t._v(" "),s("h2",{attrs:{id:"hpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hpa"}},[t._v("#")]),t._v(" HPA")]),t._v(" "),s("h3",{attrs:{id:"hpa的简要概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hpa的简要概述"}},[t._v("#")]),t._v(" HPA的简要概述")]),t._v(" "),s("ul",[s("li",[t._v("Kubernetes 为我们提供了这样⼀个资源对象： "),s("code",[t._v("Horizontal Pod Autoscaling （Pod⽔平⾃动 伸缩）")]),t._v("，简称 HPA 。 HAP 通过监控分析 RC 或者 Deployment 控制的所有 Pod 的负载变化情况来确定 是否需要调整 Pod 的副本数量，这是 HPA 最基本的原理。")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://pic.imgdb.cn/item/61ebeefb2ab3f51d9115f0d9.png"}}),t._v(" "),s("ul",[s("li",[s("p",[t._v("HPA 在 kubernetes 集群中被设计成⼀个 controller ，我们可以简单的通过 kubectl autoscale 命令 来创建⼀个 HPA 资源对象， HPA Controller 默认30s轮询⼀次（可通过 kube-controller-manager 的标志 --horizontal-pod-autoscaler-sync-period 进⾏设置），查询指定的资源（RC或者 Deployment）中 Pod 的资源使⽤率，并且与创建时设定的值和指标做对⽐，从⽽实现⾃动伸缩的功能。")])]),t._v(" "),s("li",[s("p",[t._v("目前主要分两个版本，autoscaling/v1和autoscaling/v2beta2，v1版本只支持 cpu，v2beta2版本支持 自定义 ，内存 ，但是目前也仅仅是处于beta阶段。")])])]),t._v(" "),s("h3",{attrs:{id:"安装metrics-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装metrics-server"}},[t._v("#")]),t._v(" 安装Metrics Server")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("HPA需要从Metrics Server中获取Pod的CPU和内存Metrics，用来判断是否达到自动伸缩阈值。")])])]),t._v(" "),s("li",[s("p",[t._v("Kubernetes集群使用Metrics Server来采集容器的CPU和内存使用情况，用来监控Node和Pod的CPU和内存使用情况，并用作HPA（自动横向扩展）。")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml")]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim components.yaml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" metrics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lizhenliang/metrics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v0.3.7 \t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改镜像")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dir=/tmp\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port=4443\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kubelet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("insecure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("tls\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不验证kubelet提供的https证书")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("kubelet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("preferred"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("types=InternalIP\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用节点IP连接kubelet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete -f components.yaml ")]),t._v("\nclusterrole.rbac.authorization.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:aggregated-metrics-reader"')]),t._v(" deleted\nclusterrolebinding.rbac.authorization.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metrics-server:system:auth-delegator"')]),t._v(" deleted\nrolebinding.rbac.authorization.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metrics-server-auth-reader"')]),t._v(" deleted\nWarning: apiregistration.k8s.io/v1beta1 APIService is deprecated "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" v1.19+, unavailable "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" v1.22+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" use apiregistration.k8s.io/v1 APIService\napiservice.apiregistration.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1beta1.metrics.k8s.io"')]),t._v(" deleted\nserviceaccount "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metrics-server"')]),t._v(" deleted\ndeployment.apps "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metrics-server"')]),t._v(" deleted\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"metrics-server"')]),t._v(" deleted\nclusterrole.rbac.authorization.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:metrics-server"')]),t._v(" deleted\nclusterrolebinding.rbac.authorization.k8s.io "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system:metrics-server"')]),t._v(" deleted\n")])])]),s("ul",[s("li",[t._v("检查监控资源是否正常运行")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl top nodes")]),t._v("\nNAME     CPU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cores"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   CPU%   MEMORY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   MEMORY%   \nmaster   182m         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("%     2166Mi          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v("%       \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v("     76m          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("%     1818Mi          "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("%    \n")])])]),s("h3",{attrs:{id:"hpa的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hpa的使用"}},[t._v("#")]),t._v(" HPA的使用")]),t._v(" "),s("ul",[s("li",[t._v("创建⼀个 Deployment 管理的 Nginx Pod，然后利⽤ HPA 来进⾏⾃动扩缩容。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat deployment.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("ul",[s("li",[t._v("查看deployment和pod")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployments.apps ")]),t._v("\nNAME                   READY   UP-TO-DATE   AVAILABLE   AGE\nhpa-nginx-deployment   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           3m58s\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods ")]),t._v("\nNAME                                    READY   STATUS    RESTARTS   AGE\nhpa-nginx-deployment-7d546c5c67-qdkhm   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          4m2s\n")])])]),s("ul",[s("li",[t._v("创建一个HPA，用kubectl autosca来创建")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl autoscale deployment hpa-nginx-deployment --max=10 --min=1 --cpu-percent=50 --dry-run -o yaml >> hpa.yaml ")]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat hpa.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" autoscaling/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HorizontalPodAutoscaler\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("maxReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最大伸缩副本到10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最小伸缩副本到1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("scaleTargetRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#伸缩副本的来源，资源类型，RC，RS，Deployment")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hpa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetCPUUtilizationPercentage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#触发伸缩的cpu使⽤率")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("currentCPUUtilizationPercentage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("48")]),t._v(" \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前资源下pod的cpu使⽤率")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("currentReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前的副本数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("desiredReplicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#期望的副本数")]),t._v("\n")])])]),s("ul",[s("li",[t._v("查看hpa的创建是否正确")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f hpa.yaml  ")]),t._v("\nhorizontalpodautoscaler.autoscaling/hpa-nginx-deployment configured\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get hpa")]),t._v("\nNAME                   REFERENCE                         TARGETS         MINPODS   MAXPODS   REPLICAS   AGE\nfrontend-scaler        ReplicaSet/frontend               "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/50%   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          125m\nhpa-nginx-deployment   Deployment/hpa-nginx-deployment   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("unknown"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/50%   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("          93s\n")])])]),s("h3",{attrs:{id:"模拟增加负载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟增加负载"}},[t._v("#")]),t._v(" 模拟增加负载")]),t._v(" "),s("ul",[s("li",[t._v("打开一个新的Terminal，创建一个临时的pod "),s("code",[t._v("load-generator")]),t._v("，并在该pod中向"),s("code",[t._v("php-apache")]),t._v("服务发起不间断循环请求，模拟增加"),s("code",[t._v("php-apache")]),t._v("的负载（CPU使用率）。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/  while sleep 0.01; do wget -q -O- http://10.244.167.145; done")]),t._v("\n")])])]),s("ul",[s("li",[t._v("模拟压力测试几分钟后，观察HPA：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get hpa php-apache")]),t._v("\n")])])]),s("ul",[s("li",[t._v("HPA情况类似：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("NAME         REFERENCE               TARGETS    MINPODS   MAXPODS   REPLICAS   AGE\nphp-apache   Deployment/php-apache   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("250")]),t._v("%/50%   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("          4m45s\n")])])]),s("ul",[s("li",[s("p",[t._v("可以看到TARGETS（CPU使用率）的acutal值已升高到250% (超过了期望值50%)，副本数REPLICAS也从1自动扩容到了5。")])]),t._v(" "),s("li",[s("p",[t._v('注意：如果Kubernetes集群worker节点的CPU资源已经不足，HPA自动扩容会失败，新扩容的pod会一直处在Pending状态。通过kubectl describe命令查看pod详细信息时，会看到“Insufficient cpu"的错误信息。')])])]),t._v(" "),s("h2",{attrs:{id:"job-和-cronjob"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#job-和-cronjob"}},[t._v("#")]),t._v(" Job 和 Cronjob")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("另外⼀类资源对象：Job，我们在⽇常的⼯作中经常都 会遇到⼀些需要进⾏批量数据处理和分析的需求，当然也会有按时间来进⾏调度的⼯作，在我们 的 Kubernetes 集群中为我们提供了 Job 和 CronJob 两种资源对象来应对我们的这种需求。")])]),t._v(" "),s("li",[s("strong",[t._v("Job 负责处理任务，即仅执⾏⼀次的任务，它保证批处理任务的⼀个或多个 Pod 成功结束。 ⽽ CronJob 则就是在 Job 上加上了时间调度。")])])]),t._v(" "),s("h3",{attrs:{id:"job的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#job的使用"}},[t._v("#")]),t._v(" Job的使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("我们⽤ Job 这个资源对象来创建⼀个任务，我们定⼀个 Job 来执⾏⼀个倒计时的任务，定义 YAML ⽂ 件：")])]),t._v(" "),s("li",[s("p",[t._v("注意 Job 的 "),s("code",[t._v("RestartPolicy 仅⽀持 Never 和 OnFailure 两种")]),t._v("，不⽀持 Always ，我们知道 Job 就相 当于来执⾏⼀个批处理任务，执⾏完就结束了，如果⽀持 Always 的话就陷⼊了死循环了")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl create job job-demo --image=busybox --dry-run -o yaml > job.yaml ")]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat job.yaml  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Job\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Never\n")])])]),s("ul",[s("li",[t._v("然后来创建该 Job")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f job.yaml  ")]),t._v("\njob.batch/job-demo created.\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get job ")]),t._v("\nNAME       COMPLETIONS   DURATION   AGE\njob-demo   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        2m54s\n")])])]),s("ul",[s("li",[t._v("注意查看我们的 Pod 的状态，同样我们可以通过 kubectl logs 来查看当前任务的执⾏结果。")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl logs job-demo-ntxgx job-demo ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("h3",{attrs:{id:"cronjob的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cronjob的使用"}},[t._v("#")]),t._v(" CronJob的使用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("CronJob 其实就是在 Job 的基础上加上了时间调度，我们可以：在给定的时间点运⾏⼀个任务，也可 以周期性地在给定时间点运⾏。这个实际上和我们 Linux 中的 crontab 就⾮常类似了。")])]),t._v(" "),s("li",[s("p",[t._v("⼀个 CronJob 对象其实就对应中 crontab ⽂件中的⼀⾏，它根据配置的时间格式周期性地运⾏⼀ 个 Job ，格式和 crontab 也是⼀样的。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("crontab 的格式如下： 分 时 ⽇ ⽉ 星期 要运⾏的命令 第1列分钟0～59 第2列⼩时0～23） 第3列⽇1～31 第4列⽉1～ 12 第5列星期0～7（0和7表示星期天） 第6列要运⾏的命令")])])])]),t._v(" "),s("h3",{attrs:{id:"cron-时间表语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cron-时间表语法"}},[t._v("#")]),t._v(" Cron 时间表语法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      ┌────────────────── 时区 (可选)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      ┌───────────── 分钟 (0 - 59)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ ┌───────────── 小时 (0 - 23)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ ┌───────────── 月的某天 (1 - 31)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ │ ┌───────────── month (1 - 12)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ │ │ ┌───────────── 周的某天 (0 - 6)（周日到周一；在某些系统上，7 也是星期日）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ │ │ │                                ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ │ │ │")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      |      │ │ │ │ │")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CRON_TZ=UTC * * * * *")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ┌───────────── 分钟 (0 - 59)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ ┌───────────── 小时 (0 - 23)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ ┌───────────── 月的某天 (1 - 31)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ │ ┌───────────── 月份 (1 - 12)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ │ │ ┌───────────── 周的某天 (0 - 6) （周日到周一；在某些系统上，7 也是星期日）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ │ │ │                                   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ │ │ │")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# │ │ │ │ │")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# * * * * *")]),t._v("\n")])])]),s("ul",[s("li",[t._v("现在，我们⽤ CronJob 来管理我们上⾯的 Job 任务")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# kubectl create cronjob cronjob-demo --image=busybox   --schedule "*/1 * * * *"  --dry-run -o yaml > cronjob.yaml ')]),t._v("\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat cronjob1.yaml ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" batch/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CronJob\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cronjob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobTemplate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cronjob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cronjob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bin/sh"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"for i in 9 8 7 6 5 4 3 2 1; do echo $i; done"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OnFailure\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/1 * * * *'")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f cronjob1.yaml ")]),t._v("\ncronjob.batch/cronjob"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1 created\n")])])]),s("ul",[s("li",[s("p",[t._v("这⾥的 Kind 是 CronJob 了，要注意的是 .spec.schedule 字段是必须填写的，⽤来指定任务运⾏ 的周期，格式就和 "),s("code",[t._v("crontab")]),t._v(" ⼀样，另外⼀个字段是 "),s("code",[t._v(".spec.jobTemplate")]),t._v(" , ⽤来指定需要运⾏的任务，格 式当然和 Job 是⼀致的")])]),t._v(" "),s("li",[s("p",[t._v("段 "),s("code",[t._v(".spec.successfulJobsHistoryLimit")]),t._v(" 和 "),s("code",[t._v(".spec.failedJobsHistoryLimit")]),t._v(" ，表示历史限制，是可选的 字段。它们指定了可以保留多少完成和失败的 Job ，默认没有限制，所有成功和失败的 Job 都会被保 留。然⽽，当运⾏⼀个 Cron Job 时， Job 可以很快就堆积很多，所以⼀般推荐设置这两个字段的 值。如果设置限制的值为 0，那么相关类型的 Job 完成后将不会被保留。")])]),t._v(" "),s("li",[s("p",[t._v("查看当前的cronjob")])])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get cronjobs.batch ")]),t._v("\nNAME            SCHEDULE      SUSPEND   ACTIVE   LAST SCHEDULE   AGE\ncronjob-demo1   */1 * * * *   False     "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        11s             11m\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get jobs ")]),t._v("\nNAME                       COMPLETIONS   DURATION   AGE\ncronjob-demo1-1636527840   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        3m\ncronjob-demo1-1636527900   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        2m\ncronjob-demo1-1636527960   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        60s\njob-demo                   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        49m\n")])])]),s("ul",[s("li",[t._v("也可以⽤ kubectl run来创建⼀个CronJob：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# kubectl run hello --schedule="*/1 * * * *" --restart=OnFailure --image=busybox -- /bin/sh -c "date; echo Hello from the Kubernetes cluster"')]),t._v("\n")])])]),s("ul",[s("li",[t._v("这将会终⽌正在创建的 Job。然⽽，运⾏中的 Job 将不会被终⽌，不会删除 Job 或 它们的 Pod。为了 清理那些 Job 和 Pod，需要列出该 Cron Job 创建的全部 Job，然后删除它们：")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get job ")]),t._v("\nNAME                       COMPLETIONS   DURATION   AGE\ncronjob-demo1-1636528440   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           16s        3m\ncronjob-demo1-1636528500   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        2m\ncronjob-demo1-1636528560   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           18s        60s\njob-demo                   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        59m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get jobs ")]),t._v("\nNAME                       COMPLETIONS   DURATION   AGE\ncronjob-demo1-1636528500   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        2m45s\ncronjob-demo1-1636528560   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           18s        105s\ncronjob-demo1-1636528620   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        45s\njob-demo                   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1           17s        60m\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl delete cronjob --all")]),t._v("\ncronjob.batch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cronjob-demo1"')]),t._v(" deleted\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);