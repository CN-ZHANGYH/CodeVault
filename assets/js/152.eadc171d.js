(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{466:function(a,t,s){"use strict";s.r(t);var e=s(7),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"helm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm"}},[a._v("#")]),a._v(" Helm")]),a._v(" "),t("p",[t("strong",[a._v("Kubernetes 包管理工具")])]),a._v(" "),t("p",[a._v("Helm 可以帮助我们管理 Kubernetes 应用程序 - Helm Charts 可以定义、安装和升级复杂的 Kubernetes 应用程序，Charts 包很容易创建、版本管理、分享和分布。Helm 对于 Kubernetes 来说就相当于 yum 对于 Centos 来说，如果没有 yum 的话，我们在 Centos 下面要安装一些应用程序是极度麻烦的，同样的，对于越来越复杂的 Kubernetes 应用程序来说，如果单纯依靠我们去手动维护应用程序的 YAML 资源清单文件来说，成本也是巨大的。接下来我们就来了解了 Helm 的使用方法。")]),a._v(" "),t("h2",{attrs:{id:"helm安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm安装"}},[a._v("#")]),a._v(" Helm安装")]),a._v(" "),t("p",[a._v("首先当然需要一个可用的 Kubernetes 集群，然后在我们使用 Helm 的节点上已经配置好可以通过 kubectl 访问集群，因为 Helm 其实就是读取的 kubeconfig 文件来访问集群的。")]),a._v(" "),t("p",[a._v("由于 Helm V2 版本必须在 Kubernetes 集群中安装一个 Tiller 服务进行通信，这样大大降低了其安全性和可用性，所以在 V3 版本中移除了服务端，采用了通用的 Kubernetes CRD 资源来进行管理，这样就只需要连接上 Kubernetes 即可，而且 V3 版本已经发布了稳定版，所以我们这里来安装最新的 v3.0.1 版本，软件包下载地址为：https://github.com/helm/helm/releases，我们可以根据自己的节点选择合适的包")]),a._v(" "),t("h3",{attrs:{id:"_1-拉取helm的安装包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-拉取helm的安装包"}},[a._v("#")]),a._v(" 1.拉取Helm的安装包")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz\n")])])]),t("h3",{attrs:{id:"_2-解压安装包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-解压安装包"}},[a._v("#")]),a._v(" 2.解压安装包")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" helm-v3.0.0-linux-amd64.tar.gz\nlinux-amd64/\nlinux-amd64/helm\nlinux-amd64/README.md\nlinux-amd64/LICENSE\n")])])]),t("h3",{attrs:{id:"_3-复制path路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-复制path路径"}},[a._v("#")]),a._v(" 3.复制PATH路径")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" linux-amd64/helm /usr/local/bin/helm\n")])])]),t("h3",{attrs:{id:"_4-查看helm版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看helm版本"}},[a._v("#")]),a._v(" 4.查看Helm版本")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm version\nversion.BuildInfo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("Version:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"v3.0.0"')]),a._v(", GitCommit:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"e29ce2a54e96cd02ccfce88bee4f58bb6e2a28b6"')]),a._v(", GitTreeState:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"clean"')]),a._v(", GoVersion:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"go1.13.4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"_5-添加一个-chart-仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-添加一个-chart-仓库"}},[a._v("#")]),a._v(" 5.添加一个 chart 仓库")]),a._v(" "),t("p",[a._v("当然最常用的就是官方的 Helm stable charts 仓库，但是由于官方的 charts 仓库地址需要科学上网，我们可以使用微软的 charts 仓库代替：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm repo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" stable http://mirror.azure.cn/kubernetes/charts/\n$ helm repo list\nNAME            URL\nstable          http://mirror.azure.cn/kubernetes/charts/\n")])])]),t("h3",{attrs:{id:"_6-验证使用chart包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-验证使用chart包"}},[a._v("#")]),a._v(" 6.验证使用chart包")]),a._v(" "),t("p",[a._v("安装完成后可以用 search 命令来搜索可以安装的 chart 包：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm search repo stable\nNAME                                    CHART VERSION   APP VERSION                     DESCRIPTION\nstable/acs-engine-autoscaler            "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.2")]),a._v(".2           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.1")]),a._v(".1                           DEPRECATED Scales worker nodes within agent pools\nstable/aerospike                        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.3")]),a._v(".1           v4.5.0.5                        A Helm chart "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("Aerospike")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" Kubernetes\nstable/airflow                          "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.2")]),a._v(".1           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.10")]),a._v(".4                          Airflow is a platform to programmatically autho"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nstable/ambassador                       "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.1")]),a._v(".0           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.85")]),a._v(".0                          A Helm chart "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" Datawire Ambassador\nstable/anchore-engine                   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),a._v(".7           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.5")]),a._v(".2                           Anchore container analysis and policy evaluatio"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nstable/apm-server                       "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.1")]),a._v(".5           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.0")]),a._v(".0                           The server receives data from the Elastic APM a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("h2",{attrs:{id:"helm安装mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm安装mysql"}},[a._v("#")]),a._v(" Helm安装mysql")]),a._v(" "),t("h3",{attrs:{id:"heml-install命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#heml-install命令"}},[a._v("#")]),a._v(" heml install命令")]),a._v(" "),t("p",[a._v("比如我们现在安装一个 "),t("code",[a._v("mysql")]),a._v(" 应用：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" stable/mysql --generate-name\nNAME: mysql-1575619811\nLAST DEPLOYED: Fri Dec  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":10:14 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("\nNAMESPACE: default\nSTATUS: deployed\nREVISION: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\nNOTES:\nMySQL can be accessed via port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3306")]),a._v(" on the following DNS name from within your cluster:\nmysql-1575619811.default.svc.cluster.local\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("p",[a._v("我们可以看到 "),t("code",[a._v("stable/mysql")]),a._v(" 这个 chart 已经安装成功了，我们将安装成功的这个应用叫做一个 "),t("code",[a._v("release")]),a._v("，由于我们在安装的时候指定了"),t("code",[a._v("--generate-name")]),a._v(" 参数，所以生成的 release 名称是随机生成的，名为 "),t("code",[a._v("mysql-1575619811")]),a._v("。我们可以用下面的命令来查看 release 安装以后对应的 Kubernetes 资源的状态：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl get all "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("release")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("mysql-1575619811\nNAME                                    READY   STATUS    RESTARTS   AGE\npod/mysql-1575619811-8479b5b796-dgggz   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("/1     Pending   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          27m\n\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("S"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("    AGE\nservice/mysql-1575619811   ClusterIP   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.106")]),a._v(".141.228   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3306")]),a._v("/TCP   27m\n\nNAME                               READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/mysql-1575619811   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("/1     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("           27m\n\nNAME                                          DESIRED   CURRENT   READY   AGE\nreplicaset.apps/mysql-1575619811-8479b5b796   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("       27m\n")])])]),t("h3",{attrs:{id:"helm-show命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-show命令"}},[a._v("#")]),a._v(" helm show命令")]),a._v(" "),t("p",[a._v("我们也可以 "),t("code",[a._v("helm show chart")]),a._v(" 命令来了解 MySQL 这个 chart 包的一些特性：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm show chart stable/mysql\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("p",[a._v("如果想要了解更多信息，可以用 "),t("code",[a._v("helm show all")]),a._v(" 命令：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm show all stable/mysql\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("p",[a._v("需要注意的是无论什么时候安装 chart，都会创建一个新的 release，所以一个 chart 包是可以多次安装到同一个集群中的，每个都可以独立管理和升级。")]),a._v(" "),t("h3",{attrs:{id:"helm-ls命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-ls命令"}},[a._v("#")]),a._v(" helm ls命令")]),a._v(" "),t("p",[a._v("同样我们也可以用 Helm 很容易查看到已经安装的 release：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nNAME                NAMESPACE   REVISION    UPDATED                                 STATUS      CHART       APP VERSION\nmysql-1575619811    default     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-12-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":10:14.682302 +0800 CST    deployed    mysql-1.5.0 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v(".27\n")])])]),t("h3",{attrs:{id:"helm-uninstall命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-uninstall命令"}},[a._v("#")]),a._v(" helm uninstall命令")]),a._v(" "),t("p",[a._v("如果需要删除这个 release，也很简单，只需要使用 "),t("code",[a._v("helm uninstall")]),a._v(" 命令即可：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm uninstall mysql-1575619811\nrelease "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mysql-1575619811"')]),a._v(" uninstalled\n$ kubectl get all "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("release")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("mysql-1575619811\nNo resources found.\n$ helm status mysql-1575619811\nError: release: not found\n")])])]),t("p",[t("code",[a._v("uninstall")]),a._v(" 命令会从 Kubernetes 中删除 release，也会删除与 release 相关的所有 Kubernetes 资源以及 release 历史记录。也可以在删除的时候使用 "),t("code",[a._v("--keep-history")]),a._v(" 参数，则会保留 release 的历史记录，可以获取该 release 的状态就是 "),t("code",[a._v("UNINSTALLED")]),a._v("，而不是找不到 release了：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm uninstall mysql-1575619811 --keep-history\nrelease "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mysql-1575619811"')]),a._v(" uninstalled\n$ helm status mysql-1575619811\nhelm status mysql-1575619811\nNAME: mysql-1575619811\nLAST DEPLOYED: Fri Dec  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":47:14 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("\nNAMESPACE: default\nSTATUS: uninstalled\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\nNAME                NAMESPACE   REVISION    UPDATED                                 STATUS      CHART       APP VERSION\nmysql-1575619811    default     "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-12-06 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(":47:14.415214 +0800 CST    uninstalled mysql-1.5.0 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v(".27\n")])])]),t("blockquote",[t("p",[a._v("因为 Helm 会在删除 release 后跟踪你的 release，所以你可以审查历史甚至取消删除 "),t("code",[a._v("release")]),a._v("（使用 "),t("code",[a._v("helm rollback")]),a._v(" 命令）。")])]),a._v(" "),t("h2",{attrs:{id:"定制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定制"}},[a._v("#")]),a._v(" 定制")]),a._v(" "),t("p",[a._v("上面我们都是直接使用的 "),t("code",[a._v("helm install")]),a._v(" 命令安装的 chart 包，这种情况下只会使用 chart 的默认配置选项，但是更多的时候，是各种各样的需求，索引我们希望根据自己的需求来定制 chart 包的配置参数。")]),a._v(" "),t("h3",{attrs:{id:"查看可选参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看可选参数"}},[a._v("#")]),a._v(" 查看可选参数")]),a._v(" "),t("p",[a._v("我们可以使用 "),t("code",[a._v("helm show values")]),a._v(" 命令来查看一个 chart 包的所有可配置的参数选项：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm show values stable/mysql\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## mysql image version")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## ref: https://hub.docker.com/r/library/mysql/tags/")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\nimage: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mysql"')]),a._v("\nimageTag: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"5.7.14"')]),a._v("\n\nbusybox:\n  image: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"busybox"')]),a._v("\n  tag: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.29.3"')]),a._v("\n\ntestFramework:\n  enabled: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n  image: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dduportal/bats"')]),a._v("\n  tag: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.4.0"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Specify password for root user")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Default: random 10 character string")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysqlRootPassword: testing")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Create a database user")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysqlUser:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Default: random 10 character string")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysqlPassword:")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Allow unauthenticated access, uncomment to enable")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysqlAllowEmptyPassword: true")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Create a database")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# mysqlDatabase:")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Specify an imagePullPolicy (Required)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## It's recommended to change this to 'Always' if the image tag is 'latest'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## ref: http://kubernetes.io/docs/user-guide/images/#updating-images")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##")]),a._v("\nimagePullPolicy: IfNotPresent\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("h3",{attrs:{id:"使用自定义参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用自定义参数"}},[a._v("#")]),a._v(" 使用自定义参数")]),a._v(" "),t("p",[a._v("上面我们看到的所有参数都是可以用自己的数据来覆盖的，可以在安装的时候通过 YAML 格式的文件来传递这些参数：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[a._v("$ cat config.yaml\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  user0\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlPassword")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" user0pwd\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysqlDatabase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" user0db\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("persistence")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n")])])]),t("h3",{attrs:{id:"helm-install-f安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-install-f安装"}},[a._v("#")]),a._v(" helm install -f安装")]),a._v(" "),t("p",[a._v("部署安装mysql使用本地自定义的参数")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" config.yaml stable/mysql\nhelm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" config.yaml mysql stable/mysql\nNAME: mysql\nLAST DEPLOYED: Fri Dec  "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),a._v(":46:56 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("\nNAMESPACE: default\nSTATUS: deployed\nREVISION: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\nNOTES:\nMySQL can be accessed via port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3306")]),a._v(" on the following DNS name from within your cluster:\nmysql.default.svc.cluster.local\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("p",[a._v("release 安装成功后，可以查看对应的 Pod 信息：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ kubectl get pod "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("release")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("mysql\nNAME                    READY   STATUS            RESTARTS   AGE\nmysql-ddd798f48-gnrzd   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("/1     PodInitializing   "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          119s\n$ kubectl describe pod  mysql-ddd798f48-gnrzd\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\nEnvironment:\n      MYSQL_ROOT_PASSWORD:  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("set to the key "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mysql-root-password'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" secret "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mysql'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  Optional: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n      MYSQL_PASSWORD:       "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("set to the key "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mysql-password'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" secret "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mysql'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("       Optional: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n      MYSQL_USER:           user0\n      MYSQL_DATABASE:       user0db\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n")])])]),t("p",[a._v("可以看到环境变量 "),t("code",[a._v("MYSQL_USER=user0，MYSQL_DATABASE=user0db")]),a._v(" 的值和我们上面配置的值是一致的。在安装过程中，有两种方法可以传递配置数据：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--values（或者 -f）")]),a._v("：指定一个 YAML 文件来覆盖 values 值，可以指定多个值，最后边的文件优先")]),a._v(" "),t("li",[t("code",[a._v("--set")]),a._v("：在命令行上指定覆盖的配置")])]),a._v(" "),t("blockquote",[t("p",[a._v("如果同时使用这两个值，"),t("code",[a._v("--set")]),a._v(" 将被合并到具有更高优先级的 "),t("code",[a._v("--values")]),a._v("，使用 "),t("code",[a._v("--set")]),a._v(" 指定的值将持久化在 ConfigMap 中，对于给定的 release，可以使用 "),t("code",[a._v("helm get values <release-name>")]),a._v(" 来查看已经设置的值，已设置的值也通过允许 "),t("code",[a._v("helm upgrade")]),a._v(" 并指定 "),t("code",[a._v("--reset")]),a._v(" 值来清除。")])]),a._v(" "),t("p",[t("code",[a._v("--set")]),a._v(" 选项接收零个或多个 name/value 对，最简单的用法就是 "),t("code",[a._v("--set name=value")]),a._v("，相当于 YAML 文件中的：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" value\n")])])]),t("p",[a._v("多个值之间用字符串“,”隔开，用法就是 "),t("code",[a._v("--set a=b,c=d")]),a._v("，相当于 YAML 文件中的：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" b\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("c")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" d\n")])])]),t("p",[a._v("也支持更加复杂的表达式，例如 "),t("code",[a._v("--set outer.inner=value")]),a._v("，对应 YAML：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("inner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" value\n")])])]),t("p",[a._v("对于列表数组可以用 "),t("code",[a._v("{}")]),a._v(" 来包裹，比如 "),t("code",[a._v("--set name={a, b, c}")]),a._v("，对应 YAML：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" a\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" b\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" c\n")])])]),t("p",[a._v("从 Helm 2.5.0 开始，就可以使用数组索引语法来访问列表中某个项，比如 "),t("code",[a._v("--set servers[0].port=80")]),a._v("，对应的 YAML 为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("servers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n")])])]),t("p",[a._v("也可以这样设置多个值，比如 "),t("code",[a._v("--set servers[0].port=80,servers[0].host=example")]),a._v("，对应的 YAML 为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[a._v("servers\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" example\n")])])]),t("p",[a._v("有时候你可能需要在 "),t("code",[a._v("--set")]),a._v(" 选项中使用特殊的字符，这个时候可以使用反斜杠来转义字符，比如 "),t("code",[a._v("--set name=value1\\,value2")]),a._v("，对应的 YAML 为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"value1,value2"')]),a._v("\n")])])]),t("p",[a._v("类似的，你还可以转义"),t("code",[a._v(".")]),a._v("，当 chart 模板中使用 "),t("code",[a._v("toYaml")]),a._v(" 函数来解析 annotations、labels 以及 node selectors 之类的时候，这非常有用，比如 "),t("code",[a._v('--set nodeSelector."kubernetes\\.io/role"=master')]),a._v("，对应的 YAML 文件：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nodeSelector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kubernetes.io/role")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" master\n")])])]),t("blockquote",[t("p",[a._v("深度嵌套的数据结构可能很难使用 "),t("code",[a._v("--set")]),a._v(" 来表示，所以一般推荐还是使用 YAML 文件来进行覆盖，当然在设计 chart 模板的时候也可以结合考虑到 "),t("code",[a._v("--set")]),a._v(" 这种用法，尽可能的提供更好的支持。")])]),a._v(" "),t("h1",{attrs:{id:"charts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#charts"}},[a._v("#")]),a._v(" Charts")]),a._v(" "),t("p",[a._v("Helm 使用一种名为 charts 的包格式，一个 chart 是描述一组相关的 Kubernetes 资源的文件集合，单个 chart 可能用于部署简单的应用，比如 memcached pod，或者复杂的应用，比如一个带有 HTTP 服务、数据库、缓存等等功能的完整 web 应用程序。")]),a._v(" "),t("p",[a._v("Charts 是创建在特定目录下面的文件集合，然后可以将它们打包到一个版本化的存档中来部署。接下来我们就来看看使用 Helm 构建 charts 的一些基本方法。")]),a._v(" "),t("h3",{attrs:{id:"文件结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件结构"}},[a._v("#")]),a._v(" 文件结构")]),a._v(" "),t("p",[a._v("chart 被组织为一个目录中的文件集合，目录名称就是 chart 的名称（不包含版本信息），下面是一个 WordPress 的 chart，会被存储在 "),t("code",[a._v("wordpress/")]),a._v(" 目录下面，基本结构如下所示：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("wordpress/\n  Chart.yaml          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 包含当前 chart 信息的 YAML 文件")]),a._v("\n  LICENSE             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选：包含 chart 的 license 的文本文件")]),a._v("\n  README.md           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选：一个可读性高的 README 文件")]),a._v("\n  values.yaml         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前 chart 的默认配置 values")]),a._v("\n  values.schema.json  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选: 一个作用在 values.yaml 文件上的 JSON 模式")]),a._v("\n  charts/             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 包含该 chart 依赖的所有 chart 的目录")]),a._v("\n  crds/               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Custom Resource Definitions")]),a._v("\n  templates/          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模板目录，与 values 结合使用时，将渲染生成 Kubernetes 资源清单文件")]),a._v("\n  templates/NOTES.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可选: 包含简短使用使用的文本文件")]),a._v("\n")])])]),t("blockquote",[t("p",[a._v("另外 Helm 会保留 "),t("code",[a._v("charts/")]),a._v("、"),t("code",[a._v("crds/")]),a._v(" 以及 "),t("code",[a._v("templates/")]),a._v(" 目录以及上面列出的文件名的使用。")])]),a._v(" "),t("h3",{attrs:{id:"chart-yaml-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chart-yaml-文件"}},[a._v("#")]),a._v(" Chart.yaml 文件")]),a._v(" "),t("p",[a._v("对于一个 chart 包来说 "),t("code",[a._v("Chart.yaml")]),a._v(" 文件是必须的，它包含下面的这些字段：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart API 版本 (必须)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart 名 (必须)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" SemVer 2版本 (必须)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kubeVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 兼容的 Kubernetes 版本 (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("description")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 一句话描述 (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart 类型 (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keywords")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 当前项目关键字集合 (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("home")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 当前项目的 URL (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("sources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" 当前项目源码 URL (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# chart 依赖列表 (可选)")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart 名称 (nginx)\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(' chart 版本 ("1.2.3")\n    '),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(' 仓库地址 ("https'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v('//example.com/charts")\n'),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("maintainers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# (可选)")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 维护者名字 (对每个 maintainer 是必须的)\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("email")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 维护者的 email (可选)\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 维护者 URL (可选)\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("icon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart 的 SVG 或者 PNG 图标 URL (可选).\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("appVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 包含的应用程序版本 (可选). 不需要 SemVer 版本\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("deprecated")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" chart 是否已被弃用 (可选"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" boolean)\n")])])]),t("blockquote",[t("p",[a._v("其他字段默认会被忽略。")])]),a._v(" "),t("h4",{attrs:{id:"版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[a._v("#")]),a._v(" 版本")]),a._v(" "),t("p",[a._v("每个 chart 都必须有一个版本号，版本必须遵循 "),t("code",[a._v("SemVer2")]),a._v(" 标准，和 Helm Classic 不同，Kubernetes Helm 使用版本号作为 release 的标记，仓库中的软件包通过名称加上版本号来标识的。")]),a._v(" "),t("p",[a._v("例如，将一个 nginx 的 chart 包 version 字段设置为：1.2.3，则 chart 最终名称为：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("nginx-1.2.3.tgz\n")])])]),t("p",[a._v("还支持更复杂的 "),t("code",[a._v("SemVer2")]),a._v(" 名称，例如版本："),t("code",[a._v("1.2.3-alpha.1+ef365")]),a._v("，但是需要注意的是系统明确禁止使用非 "),t("code",[a._v("SemVer")]),a._v(" 的名称。")]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v("Chart.yaml")]),a._v(" 中的 "),t("code",[a._v("version")]),a._v(" 字段被很多 Helm 工具使用，包括 CLI 工具，生成包的时候，命令 "),t("code",[a._v("helm package")]),a._v(" 将使用该字段作为包名称中的标记，系统是默认 Chart 包中的版本号与 "),t("code",[a._v("chart.yaml")]),a._v(" 中的版本号匹配的，所以如果不匹配的话就导致一系列错误。")])]),a._v(" "),t("h4",{attrs:{id:"apiversion-字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apiversion-字段"}},[a._v("#")]),a._v(" "),t("code",[a._v("apiVersion")]),a._v(" 字段")]),a._v(" "),t("p",[a._v("对于 Helm 3 以上的版本 "),t("code",[a._v("apiVersion")]),a._v(" 字段应该\b是 "),t("code",[a._v("v2")]),a._v("，之前版本的 Chart 应该设置为1，并且也可以有 Helm 3 进行安装。")]),a._v(" "),t("h4",{attrs:{id:"appversion-字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appversion-字段"}},[a._v("#")]),a._v(" "),t("code",[a._v("appVersion")]),a._v(" 字段")]),a._v(" "),t("p",[a._v("要注意 "),t("code",[a._v("appVersion")]),a._v(" 字段与 version 字段无关，这是一种指定应用程序版本的方法，比如 drupal 的 Chart 包可能有一个 "),t("code",[a._v("appVersion: 8.2.1")]),a._v(" 的字段，表示 Chart 中包含的 drupal 版本是 8.2.1，该字段仅供参考，对 Chart 版本的计算不会产生影响。")]),a._v(" "),t("h4",{attrs:{id:"弃用-charts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弃用-charts"}},[a._v("#")]),a._v(" 弃用 Charts")]),a._v(" "),t("p",[a._v("当在 Chart 仓库中管理 charts 的时候，有时候需要弃用一个 chart，"),t("code",[a._v("Chart.yaml")]),a._v(" 中的可选字段 "),t("code",[a._v("deprecated")]),a._v(" 可以用来标记一个 chart 为弃用状态。如果将仓库中最新版本的 chart 标记为弃用，则整个 chart 都会被当做弃用状态了。以后可以通过发布一个未被标记为弃用状态的新版本来重新使用该 chart。弃用 charts 的工作流程如下所示：")]),a._v(" "),t("ul",[t("li",[a._v("更新 chart 的 "),t("code",[a._v("Chart.yaml")]),a._v(" 来标记 chart 为弃用状态")]),a._v(" "),t("li",[a._v("发布该新版本到 Chart 仓库")]),a._v(" "),t("li",[a._v("从源码仓库（比如 git）中删除 chart")])]),a._v(" "),t("h4",{attrs:{id:"chart-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chart-类型"}},[a._v("#")]),a._v(" Chart 类型")]),a._v(" "),t("p",[t("code",[a._v("type")]),a._v(" 字段定义 chart 的类型，可以定义两种类型：应用程序（application）和库（library）。应用程序是默认的类型，它是一个可以完整操作的标准 chart，库或者辅助类 chart 为 chart 提供了一些实用的功能，library 不同于应用程序 chart，因为它没有资源对象，所以无法安装。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意：一个应用 chart 也可以当作库进行使用。通过将类型设置为 library，然后该 chart 就会渲染成一个库，可以在其中使用所有的实用性功能，chart 的所有资源对象都不会被渲染。")])]),a._v(" "),t("h4",{attrs:{id:"license-readme-和-notes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#license-readme-和-notes"}},[a._v("#")]),a._v(" LICENSE, README 和 NOTES")]),a._v(" "),t("p",[a._v("Chart 还可以包含用于描述 chart 的安装、配置、用法和许可证书的文件。")]),a._v(" "),t("p",[a._v("LICENSE 是一个纯文本文件，其中包含 chart 的许可证书。chart 可以包含一个许可证书，因为它可能在模板中具有编程逻辑，所以不只是配置，如果需要，chart 还可以为应用程序提供单独的 license(s)。")]),a._v(" "),t("p",[a._v("Chart 的 README 文件应该采用 Markdown（README.md）格式，并且通常应该包含如下的一些信息：")]),a._v(" "),t("ul",[t("li",[a._v("chart 提供的应用程序的描述信息")]),a._v(" "),t("li",[a._v("运行 chart 的任何先决条件或者要求")]),a._v(" "),t("li",[t("code",[a._v("values.yaml")]),a._v(" 和默认值中的一些选项说明")]),a._v(" "),t("li",[a._v("与 chart 的安装或配置有关的任何其他信息")])]),a._v(" "),t("blockquote",[t("p",[a._v("chart 还可以包含简短的纯文本模板或者 "),t("code",[a._v("NOTES.txt")]),a._v(" 文件，该文件将在安装后以及查看 release 状态的时候打印出来。该文件会被当成模板文件，并且可以用于显示使用说明，后续步骤或与 release 有关的任何其他信息。例如，可以提供用于连接到数据或访问 Web UI 的指令。由于在运行 "),t("code",[a._v("helm install")]),a._v(" 或者 "),t("code",[a._v("helm status")]),a._v(" 的时候该文件会打印到 "),t("code",[a._v("STDOUT")]),a._v(" 中，所以建议该文件内容保持内容简短然后可以指向 README 文件来获取更多详细信息。")])]),a._v(" "),t("h3",{attrs:{id:"依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[a._v("#")]),a._v(" 依赖")]),a._v(" "),t("p",[a._v("在 Helm 中，一个 chart 包可能会依赖许多其他的 chart。这些依赖关系可以使用 "),t("code",[a._v("Chart.yaml")]),a._v(" 中的依赖关系字段动态链接，也可以引入到 "),t("code",[a._v("charts/")]),a._v(" 目录手动进行管理。")]),a._v(" "),t("h4",{attrs:{id:"使用-dependencies-字段管理依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-dependencies-字段管理依赖"}},[a._v("#")]),a._v(" "),t("strong",[a._v("使用 "),t("code",[a._v("dependencies")]),a._v(" 字段管理依赖")])]),a._v(" "),t("p",[a._v("当前 chart 所需的依赖 chart 需要在 "),t("code",[a._v("dependencies")]),a._v(" 字段中进行定义，如下所示：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" apache\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 1.2.3\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//example.com/charts\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 3.2.1\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//another.example.com/charts\n")])])]),t("ul",[t("li",[t("code",[a._v("name")]),a._v(" 字段是所依赖的 chart 的名称")]),a._v(" "),t("li",[t("code",[a._v("version")]),a._v(" 字段是依赖的 chart 版本")]),a._v(" "),t("li",[t("code",[a._v("repository")]),a._v(" 字段是 chart 仓库的完整 URL，不过需要注意，必须使用 "),t("code",[a._v("helm repo add")]),a._v(" 在本地添加该 repo")])]),a._v(" "),t("p",[a._v("定义了依赖项后，可以运行 "),t("code",[a._v("helm dependency update")]),a._v(" 来更新依赖项，它将根据你的依赖项文件把你所有指定的 chart 包下载到 "),t("code",[a._v("charts/")]),a._v(" 目录中：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm dependency update foochart\nHang tight "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" we grab the latest from your chart repositories"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".Successfully got an update from the "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"local"')]),a._v(" chart repository\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".Successfully got an update from the "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"stable"')]),a._v(" chart repository\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".Successfully got an update from the "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example"')]),a._v(" chart repository\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".Successfully got an update from the "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"another"')]),a._v(" chart repository\nUpdate Complete. Happy Helming"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\nSaving "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" charts\nDownloading apache from repo https://example.com/charts\nDownloading mysql from repo https://another.example.com/charts\n")])])]),t("p",[a._v("当执行 "),t("code",[a._v("helm dependency update")]),a._v(" 命令的时候会解析 chart 的依赖项，会将他们作为 chart 包文件下载存放到 "),t("code",[a._v("charts/")]),a._v(" 目录中，所以，对于上面的示例，我们可以在 charts 目录中看到如下的文件：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("charts/\n  apache-1.2.3.tgz\n  mysql-3.2.1.tgz\n")])])]),t("h4",{attrs:{id:"alias-字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alias-字段"}},[a._v("#")]),a._v(" alias 字段")]),a._v(" "),t("p",[a._v("除了上面的几个字段之外，每个依赖项还可以包含一个可选的 "),t("code",[a._v("alias")]),a._v(" 别名字段。为依赖 chart 添加别名将使用别名作为依赖的名称。在需要访问其他名称的 chart 情况下，就可以使用别名，如下所示：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# parentchart/Chart.yaml")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" subchart\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10191")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0.1.0\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("alias")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("subchart"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" subchart\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10191")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0.1.0\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("alias")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" new"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("subchart"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" subchart\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("repository")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10191")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0.1.0\n")])])]),t("p",[a._v("在上面示例中，我们将获得3个依赖项：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("subchart\nnew-subchart-1\nnew-subchart-2\n")])])]),t("p",[a._v("当然其实我们也可以手动来实现，将同一个 chart 以不同的名称多次复制/粘贴到 "),t("code",[a._v("charts/")]),a._v(" 目录中也是可以的。")]),a._v(" "),t("h3",{attrs:{id:"templates-和-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#templates-和-values"}},[a._v("#")]),a._v(" TEMPLATES 和 VALUES")]),a._v(" "),t("p",[a._v("Helm Chart 模板是用 "),t("a",{attrs:{href:"https://golang.org/pkg/text/template/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Go template 语言"),t("OutboundLink")],1),a._v(" 进行编写的，另外还额外增加了(【Sprig】](https://github.com/Masterminds/sprig)库中的50个左右的附加模板函数和一些其他"),t("a",{attrs:{href:"https://helm.sh/docs/howto/charts_tips_and_tricks/",target:"_blank",rel:"noopener noreferrer"}},[a._v("专用函数"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[a._v("所有模板文件都存储在 chart 的 "),t("code",[a._v("templates/")]),a._v(" 目录下面，当 Helm 渲染 charts 的时候，它将通过模板引擎传递该目录中的每个文件。模板的 "),t("code",[a._v("Values")]),a._v(" 可以通过两种方式提供：")]),a._v(" "),t("ul",[t("li",[a._v("Chart 开发人员可以在 chart 内部提供一个名为 "),t("code",[a._v("values.yaml")]),a._v(" 的文件，该文件可以包含默认的 values 值内容。")]),a._v(" "),t("li",[a._v("Chart 用户可以提供包含 values 值的 YAML 文件，可以在命令行中通过 "),t("code",[a._v("helm install")]),a._v(" 来指定该文件。")])]),a._v(" "),t("blockquote",[t("p",[a._v("当用户提供自定义 values 值的时候，这些值将覆盖 chart 中 "),t("code",[a._v("values.yaml")]),a._v(" 文件中的相应的值。")])]),a._v(" "),t("h4",{attrs:{id:"模板文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模板文件"}},[a._v("#")]),a._v(" 模板文件")]),a._v(" "),t("p",[a._v("模板文件遵循编写 Go 模板的标准约定（可以查看 "),t("a",{attrs:{href:"https://golang.org/pkg/text/template/",target:"_blank",rel:"noopener noreferrer"}},[a._v("text/template 包文档"),t("OutboundLink")],1),a._v("查看详细信息），下面是一个模板文件示例：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ReplicationController\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/managed-by")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("serviceAccount")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.imageRegistry "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/postgres"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.dockerTag "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.pullPolicy "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" DATABASE_STORAGE\n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(' default "minio" .Values.storage '),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("上面这个示例是 Kubernetes replication 控制器的一个模板，它可以使用以下4个模板值（通常在 "),t("code",[a._v("values.yaml")]),a._v(" 文件中定义的）：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("imageRegistry")]),a._v("：Docker 镜像仓库")]),a._v(" "),t("li",[t("code",[a._v("dockerTag")]),a._v("：Docker 镜像 tag")]),a._v(" "),t("li",[t("code",[a._v("pullPolicy")]),a._v("：镜像拉取策略")]),a._v(" "),t("li",[t("code",[a._v("storage")]),a._v("：存储后端，默认设置为 "),t("code",[a._v('"minio"')])])]),a._v(" "),t("p",[a._v("这些所有的 values 值都是有模板作者来定义的，Helm 不会也不需要规定这些参数。可以可以查看 "),t("a",{attrs:{href:"https://github.com/helm/charts",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubernetes Charts 项目"),t("OutboundLink")],1),a._v("去了解更多的 charts 项目的详细内容。")]),a._v(" "),t("h4",{attrs:{id:"预定义-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预定义-values"}},[a._v("#")]),a._v(" 预定义 Values")]),a._v(" "),t("p",[a._v("在模板中用 "),t("code",[a._v(".Values")]),a._v(" 可以获取到 "),t("code",[a._v("values.yaml")]),a._v(" 文件（或者 "),t("code",[a._v("--set")]),a._v(" 参数）提供的 values 值，此外，还可以在模板中访问其他预定义的数据。下面是一些预定义的、可用于每个模板、并且不能被覆盖的 values 值，与所有 values 值一样，名称都是区分大小写的：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Release.Name")]),a._v("：release 的名称（不是 chart）")]),a._v(" "),t("li",[t("code",[a._v("Release.Namespace")]),a._v("：release 被安装到的命名空间")]),a._v(" "),t("li",[t("code",[a._v("Release.Service")]),a._v("：渲染当前模板的服务，在 Helm 上，实际上该值始终为 Helm")]),a._v(" "),t("li",[t("code",[a._v("Release.IsUpgrade")]),a._v("：如果当前操作是升级或回滚，则该值为 true")]),a._v(" "),t("li",[t("code",[a._v("Release.IsInstall")]),a._v("：如果当前操作是安装，则该值为 true")]),a._v(" "),t("li",[t("code",[a._v("Chart")]),a._v("："),t("code",[a._v("Chart.yaml")]),a._v(" 文件的内容，可以通过 "),t("code",[a._v("Chart.Version")]),a._v(" 来获得 Chart 的版本，通过 "),t("code",[a._v("Chart.Maintainers")]),a._v(" 可以获取维护者信息")]),a._v(" "),t("li",[t("code",[a._v("Files")]),a._v("： 一个包含 chart 中所有非特殊文件的 map 对象，这不会给你访问模板的权限，但是会给你访问存在的其他文件的权限")]),a._v(" "),t("li",[t("code",[a._v("Capabilities")]),a._v("：也是一个类 map 的对象")])]),a._v(" "),t("blockquote",[t("p",[a._v("注意: 任何未知的 "),t("code",[a._v("Chart.yaml")]),a._v(" 字段都会被删除，在 Chart 对象内部无法访问他们，所以，"),t("code",[a._v("Chart.yaml")]),a._v(" 不能用于将任意结构化的数据传递到模板中，但是可以使用 values 文件来传递。")])]),a._v(" "),t("h4",{attrs:{id:"values-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#values-文件"}},[a._v("#")]),a._v(" Values 文件")]),a._v(" "),t("p",[a._v("为模板提供一些必须的 values 值的 "),t("code",[a._v("values.yaml")]),a._v(" 文件如下所示：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("imageRegistry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quay.io/deis"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dockerTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"latest"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Always"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("storage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s3"')]),a._v("\n")])])]),t("p",[a._v("values 文件的格式是 YAML，一个 chart 包可能包含一个默认的 "),t("code",[a._v("values.yaml")]),a._v(" 文件，"),t("code",[a._v("helm install")]),a._v(" 命令允许用户通过提供其他的 YAML 值文件来覆盖默认的值：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("myvals.yaml wordpress\n")])])]),t("p",[a._v("用这种方式来传递 values 值的时候，它们将合并到默认值文件中，比如有一个 "),t("code",[a._v("myvals.yaml")]),a._v(" 文件如下所示：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("storage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gcs"')]),a._v("\n")])])]),t("p",[a._v("将其与 chart 的 "),t("code",[a._v("values.yaml")]),a._v(" 文件合并后，得到的结果为：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("imageRegistry")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"quay.io/deis"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("dockerTag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"latest"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("pullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Always"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("storage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"gcs"')]),a._v("\n")])])]),t("p",[a._v("我们可以看到只有最后一个字段被覆盖了。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意: chart 内包含的默认 values 文件必须命名为 "),t("code",[a._v("values.yaml")]),a._v("，但是在命令行上指定的文件可以任意命名。 如果在 "),t("code",[a._v("helm install")]),a._v(" 或者 "),t("code",[a._v("helm upgrade")]),a._v(" 的时候使用 "),t("code",[a._v("--set")]),a._v(" 参数，则这些值将在客户端转换为 YAML 格式。 如果 values 文件存在任何必须的条目，则可以使用 "),t("code",[a._v("required")]),a._v(" 函数在 chart 模板中将它们声明为必须选项。")])]),a._v(" "),t("p",[a._v("然后我们就可以使用 "),t("code",[a._v(".Values")]),a._v(" 对象在模板中访问任意一个 values 值，类似于下面的模板文件：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ReplicationController\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/managed-by")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("serviceAccount")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" deis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("database\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.imageRegistry "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("/postgres"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.dockerTag "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" .Values.pullPolicy "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5432")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" DATABASE_STORAGE\n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(' default "minio" .Values.storage '),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h4",{attrs:{id:"作用范围、依赖和-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用范围、依赖和-values"}},[a._v("#")]),a._v(" 作用范围、依赖和 Values")]),a._v(" "),t("p",[a._v("values 文件可以声明顶级的 chart 以及该 chart 的 "),t("code",[a._v("charts/")]),a._v(" 目录中包含的任何 chart 的值。或者，换句话说，values 文件可以为 chart 以及他的任何依赖项提供 values 值。例如，上面提到了 WordPress 这个 chart 同时依赖 mysql 和 apache 这两个依赖项，values 文件可以为所有这些组件提供 values 值：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"My WordPress Site"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 WordPress 模板")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("max_connections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 MySQL")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"secret"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 Apache")]),a._v("\n")])])]),t("p",[a._v("较高级别的 Charts 可以访问下面定义的所有变量，所以，WordPress 这个 chart 可以通过 "),t("code",[a._v(".Values.mysql.password")]),a._v(" 来访问 MySQL 的密码，但是较低级别的 chart 是无法访问父 chart 中的内容的，所有 MySQL 无法获取到 title 属性，当然同样也不能访问 "),t("code",[a._v("apache.port")]),a._v("。")]),a._v(" "),t("p",[a._v("Values 是有命名空间的，但是会对其进行调整，比如对于 WordPress 这个 chart 来说，它可以通过 "),t("code",[a._v(".Values.mysql.password")]),a._v(" 来进行访问，但是对于 MySQL 这个 chart 本身来说，values 的范围缩小了，命名空间前缀会被删除，所以它只需要通过 "),t("code",[a._v(".Values.password")]),a._v(" 就可以访问到。")]),a._v(" "),t("h4",{attrs:{id:"全局-values"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局-values"}},[a._v("#")]),a._v(" 全局 Values")]),a._v(" "),t("p",[a._v("从 "),t("code",[a._v("2.0.0-Alpha.2")]),a._v(" 版本开始，Helm 开始支持特殊的 "),t("code",[a._v("global")]),a._v(" 全局值，比如将上面的示例修改如下：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"My WordPress Site"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 WordPress 模板")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("global")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MyWordPress\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("max_connections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 MySQL")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"secret"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 Apache")]),a._v("\n")])])]),t("p",[a._v("上面我们添加了一个全局范围的 value 值："),t("code",[a._v("app: MyWordPress")]),a._v("，该值可以通过 "),t("code",[a._v(".Values.global.app")]),a._v(" 提供给所有 chart 使用。")]),a._v(" "),t("p",[a._v("例如，mysql 模板可以以 "),t("code",[a._v(".Values.global.app")]),a._v(" 来访问 app，apache chart 也可以，实际上，上面的 values 文件会这样重新生成：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"My WordPress Site"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 WordPress 模板")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("global")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MyWordPress\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("global")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MyWordPress\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("max_connections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 MySQL")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"secret"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("global")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" MyWordPress\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 传递到 Apache")]),a._v("\n")])])]),t("p",[a._v("这种方式提供了一种与所有子 chart 共享一个顶级变量的方式，这对于设置 meta 数据这种属性是非常有用的。如果子 chart 声明了全局变量，则该全局变量将向下（传递到子 chart 的子 chart 中）传递，而不会向上传递到父 chart，子 chart 无法影响 父 chart的值。同样，父 chart 的全局遍历优先与子 chart 中的全局变量。")]),a._v(" "),t("h4",{attrs:{id:"schema-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#schema-文件"}},[a._v("#")]),a._v(" Schema 文件")]),a._v(" "),t("p",[a._v("有时候，chart 开发者可能希望在其 values 值上面定义一个结构，这种情况下可以通过在 "),t("code",[a._v("values.schema.json")]),a._v(" 文件中定义一个 schema 来完成，这里的 schema 就是一个 "),t("a",{attrs:{href:"https://json-schema.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("JSON Schema"),t("OutboundLink")],1),a._v(" 文件结构规范，如下所示：")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"$schema"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://json-schema.org/draft-07/schema#"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"properties"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"image"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"description"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Container Image"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"properties"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"repo"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"string"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"tag"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"string"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"object"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"description"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Service name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"string"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"port"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"description"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Port"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"minimum"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"integer"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"protocol"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"string"')]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"required"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"protocol"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"port"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"title"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Values"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"type"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"object"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("该 schema 会对 values 值进行校验，调用以下任何命令时，都会进行验证：")]),a._v(" "),t("ul",[t("li",[a._v("helm install")]),a._v(" "),t("li",[a._v("helm upgrade")]),a._v(" "),t("li",[a._v("helm lint")]),a._v(" "),t("li",[a._v("helm template")])]),a._v(" "),t("p",[a._v("比如下面的示例文件就可以满足上面的 schema 要求：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" frontend\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" https\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n")])])]),t("p",[a._v("需要注意的是该 schema 将应用于最终的 "),t("code",[a._v(".Values")]),a._v(" 对象，而不仅仅是应用于 "),t("code",[a._v("values.yaml")]),a._v(" 文件，所以下面的文件也是可以满足 schema 要求的：")]),a._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" frontend\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" https\n")])])]),t("p",[a._v("因为在安装的时候我们通过 "),t("code",[a._v("--set")]),a._v(" 选项传递了必须的 "),t("code",[a._v("port")]),a._v(" 属性：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ helm "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--set")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n")])])]),t("p",[a._v("此外，还会根据所有的子 chart schemas 来检查最终的 "),t("code",[a._v(".Values")]),a._v(" 对象，这意味着父 chart 无法规避对子 chart 的限制。同样的，如果子 chart 要求未满足子 chart 的 "),t("code",[a._v("values.yaml")]),a._v(" 文件，则父 chart 必须满足这些限制才能生效。 --\x3e")])])}),[],!1,null,null,null);t.default=n.exports}}]);