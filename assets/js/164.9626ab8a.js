(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{477:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"k8s容器运行环境安全加固"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s容器运行环境安全加固"}},[t._v("#")]),t._v(" K8s容器运行环境安全加固")]),t._v(" "),a("h3",{attrs:{id:"主要内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要内容"}},[t._v("#")]),t._v(" 主要内容")]),t._v(" "),a("p",[t._v("❖ 最小特权原则（POLP）")]),t._v(" "),a("p",[t._v("❖ AppArmor 限制容器对资源访问")]),t._v(" "),a("p",[t._v("❖ Seccomp 限制容器进程系统调用")]),t._v(" "),a("h3",{attrs:{id:"最小特权原则-polp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小特权原则-polp"}},[t._v("#")]),t._v(" 最小特权原则（POLP）")]),t._v(" "),a("p",[a("code",[t._v("最小特权原则 (Principle of least privilege，POLP)")]),t._v(" ：是一种信息安全概念，即为用户提供执行其工作职责所需的最 小权限等级或许可。 最小特权原则被广泛认为是网络安全的最佳实践，也是保护高价值数据和资产的特权访问的基本方式。")]),t._v(" "),a("p",[a("strong",[t._v("最小特权原则 (POLP) 重要性：")])]),t._v(" "),a("ol",[a("li",[t._v("**减少网络攻击面：**当今，大多数高级攻击都依赖于利用特权凭证。通过限制超级用户和管理员权限，最小权限执行有 助于减少总体网络攻击面。")]),t._v(" "),a("li",[a("strong",[t._v("阻止恶意软件的传播：")]),t._v(" 通过在服务器或者在应用系统上执行最小权限，恶意软件攻击（例如SQL注入攻击）将很难 提权来增加访问权限并横向移动破坏其他软件、设备。")]),t._v(" "),a("li",[t._v("**有助于简化合规性和审核：**许多内部政策和法规要求都要求组织对特权帐户实施最小权限原则，以防止对关键业务系 统的恶意破坏。最小权限执行可以帮助组织证明对特权活动的完整审核跟踪的合规性。")])]),t._v(" "),a("p",[a("strong",[t._v("在团队中实施最小特权原则 (POLP)")])]),t._v(" "),a("ul",[a("li",[t._v("在所有服务器、业务系统中，审核整个环境以查找特权帐户（例如SSH账号、管理后台账号、跳板机账号）；")]),t._v(" "),a("li",[t._v("减少不必要的管理员权限，并确保所有用户和工具执行工作时所需的权限；")]),t._v(" "),a("li",[t._v("定期更改管理员账号密码；")]),t._v(" "),a("li",[t._v("监控管理员账号操作行为，告警通知异常活动。")])]),t._v(" "),a("h3",{attrs:{id:"apparmor限制容器对资源访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apparmor限制容器对资源访问"}},[t._v("#")]),t._v(" AppArmor限制容器对资源访问")]),t._v(" "),a("p",[a("code",[t._v("AppArmor（Application Armor） 是一个 Linux 内核安全模块")]),t._v("，可用于限制主机操作系统上运行的进程的功能。每个进程都可以拥有自己的安全配置文件。安全配置文件用来允许或禁止特定功能，例如网络访问、文件读/写/执行权限等。")]),t._v(" "),a("blockquote",[a("p",[t._v("Linux发行版内置："),a("code",[t._v("Ubuntu、Debian")])])]),t._v(" "),a("p",[a("strong",[t._v("Apparmor两种工作模式")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Enforcement（强制模式）")]),t._v(" ：在这种模式下，配置文件里列出的限制条件都会得到执行，并且对于违反这些限制条 件的程序会进行日志记录。")]),t._v(" "),a("li",[a("code",[t._v("Complain（投诉模式）")]),t._v("：在这种模式下，配置文件里的限制条件不会得到执行，Apparmor只是对程序的行为进行 记录。一般用于调试。")])]),t._v(" "),a("p",[a("strong",[t._v("常用命令")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("apparmor_status：")]),t._v("\t\t\t查看AppArmor配置文件的当前状态的")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("apparmor_parser：")]),t._v("            将AppArmor配置文件加载到内核中")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("apparmor_parser <profile>")]),t._v("            # 加载到内核中")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("apparmor_parser -r <profile>")]),t._v("       # 重新加载配置")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("apparmor_parser -R <profile>")]),t._v("       # 删除配置")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("aa-complain：")]),t._v("将AppArmor配置文件设置为投诉模式，需要安装apparmor-utils软件包")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("aa-enforce：")]),t._v("   将AppArmor配置文件设置为强制模式，需要安装apparmor-utils软件包")])])]),t._v(" "),a("p",[a("strong",[t._v("K8s使用AppArmor的先决条件")])]),t._v(" "),a("ul",[a("li",[t._v("K8s版本v1.4+，检查是否支持："),a("code",[t._v("kubectl describe node |grep AppArmor")])]),t._v(" "),a("li",[t._v("Linux内核已启用AppArmor，查看 "),a("code",[t._v("cat /sys/module/apparmor/parameters/enabled")])]),t._v(" "),a("li",[t._v("容器运行时需要支持AppArmor，目前Docker已支持")])]),t._v(" "),a("p",[t._v("AppArmor 目前处于测试阶段，因此在注解中指定AppArmor策略配置文件。 示例：")]),t._v(" "),a("p",[a("code",[t._v("<container_name>")]),t._v("  Pod中容器名称")]),t._v(" "),a("p",[a("code",[t._v("<profile_ref>")]),t._v("       Pod所在宿主机上策略名，默认目录/etc/apparmor.d")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("apparmor\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container.apparmor.security.beta.kubernetes.io/<container_name>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost/<profile_ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("strong",[t._v("AppArmor的工作流程")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/cn-zhangyh/image/main/img/202204141158919.png",alt:"image-20220412232801081"}})]),t._v(" "),a("h3",{attrs:{id:"案例实施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例实施"}},[t._v("#")]),t._v(" 案例实施")]),t._v(" "),a("h4",{attrs:{id:"案例-容器文件系统访问限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例-容器文件系统访问限制"}},[t._v("#")]),t._v(" 案例：容器文件系统访问限制")]),t._v(" "),a("p",[t._v("步骤：")]),t._v(" "),a("ol",[a("li",[t._v("将自定义策略配置文件保存到/etc/apparmor.d/")]),t._v(" "),a("li",[t._v("加载配置文件到内核：apparmor_parser")]),t._v(" "),a("li",[t._v("Pod注解指定策略配置名")])]),t._v(" "),a("p",[t._v("测试环境：")]),t._v(" "),a("p",[t._v("当前使用Ubuntu系统搭建的Kubernetes集群")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# lsb_release -a")]),t._v("\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.04")]),t._v(".4 LTS\nRelease:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.04")]),t._v("\nCodename:       focal\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get node")]),t._v("\nNAME       STATUS   ROLES                  AGE     VERSION\nmaster01   Ready    control-plane,master   3h11m   v1.22.1\nnode1      Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                 3h11m   v1.22.1\nnode2      Ready    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                 3h11m   v1.22.1\n")])])]),a("p",[a("strong",[t._v("示例：限制容器对目录或者文件的访问")])]),t._v(" "),a("ul",[a("li",[t._v("第一行：导入依赖，遵循C语言约定")]),t._v(" "),a("li",[t._v("第二行：指定策略名")]),t._v(" "),a("li",[t._v("第三行：{} 策略块")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("[root@master01:~]# vi /etc/apparmor.d/k8s-deny-write\n#include <tunables/global>\n\nprofile k8s-deny-write flags=(attach_disconnected) {\n\t#include <abstractions/base>\n\tfile, \t\t\t# 允许所有文件读写\n\tdeny /bin/** w,  # 拒绝所有文件写\n\tdeny /data/www/** w,\n}\n")])])]),a("p",[a("strong",[t._v("权限解析如下：")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/cn-zhangyh/image/main/img/202204141157838.png",alt:"image-20220412231331844"}}),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/cn-zhangyh/image/main/img/202204141220423.png",alt:"image-20220412231355669"}}),t._v(" "),a("h5",{attrs:{id:"自定义策略配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义策略配置文件"}},[t._v("#")]),t._v(" 自定义策略配置文件")]),t._v(" "),a("ul",[a("li",[t._v("创建k8s-deny-write的文件")]),t._v(" "),a("li",[t._v("如果Pod没有设置调度，则需要所有节点传送该配置文件")]),t._v(" "),a("li",[t._v("在当前的"),a("code",[t._v("Master")]),t._v("节点添加策略配置文件")]),t._v(" "),a("li",[t._v("配置拒绝在"),a("code",[t._v("/opt、/bin、/data/www")]),t._v("目录下写入")]),t._v(" "),a("li",[t._v("记住profile后面的"),a("code",[t._v("k8s-deny-write")]),t._v("名称")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /etc/apparmor.d/k8s-deny-write")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <tunables/global>")]),t._v("\n\nprofile k8s-deny-write "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attach_disconnected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#include <abstractions/base>")]),t._v("\n        file,\n        deny /opt/** w,\n        deny /data/www/** w,\n        deny /bin/** w,\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apparmor_parser -r /etc/apparmor.d/k8s-deny-write")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# apparmor_status | grep k8s")]),t._v("\n   k8s-deny-write\n   /usr/bin/sleep "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("311122")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" k8s-deny-write\n")])])]),a("h5",{attrs:{id:"pod注解指定策略配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod注解指定策略配置"}},[t._v("#")]),t._v(" Pod注解指定策略配置")]),t._v(" "),a("ul",[a("li",[t._v("配置annotations: 字段，"),a("code",[t._v("nginx")]),t._v("是容器名称，"),a("code",[t._v("k8s-deny-write")]),t._v("是策略配置名称")]),t._v(" "),a("li",[t._v("调度在配置好策略配置的节点")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("24h")]),t._v("的休眠状态")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat pod.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container.apparmor.security.beta.kubernetes.io/nginx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost/k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deny"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("write\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master01\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" sleep\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 24h\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl apply -f pod.yaml")]),t._v("\npod/nginx created\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get pods")]),t._v("\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          6s\n")])])]),a("p",[t._v("进入容器进行测试：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("可以发现三个目录全部拒绝")])]),t._v(" "),a("li",[a("code",[t._v("/data/www/目录并没有创建依旧生效")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01:~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl exec -it nginx -- bash")]),t._v("\nroot@nginx:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd /opt/")]),t._v("\nroot@nginx:/opt"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch a")]),t._v("\ntouch: cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Permission denied\nroot@nginx:/opt"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch /bin/a")]),t._v("\ntouch: cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bin/a'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Permission denied\nroot@nginx:/opt"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir -p /data/www")]),t._v("\nroot@nginx:/opt"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# touch a /data/www/")]),t._v("\ntouch: cannot "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Permission denied\n")])])]),a("h3",{attrs:{id:"seccomp-限制容器进程系统调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seccomp-限制容器进程系统调用"}},[t._v("#")]),t._v(" Seccomp 限制容器进程系统调用")]),t._v(" "),a("h4",{attrs:{id:"调用关系图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用关系图"}},[t._v("#")]),t._v(" 调用关系图")]),t._v(" "),a("p",[t._v("对于 Linux 来说，用户层一切资源相关操作都需要通 过系统调用来完成；系统调用实现技术层次上解耦， 内核只关心系统调用API的实现，而不必关心谁调用的。")]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://raw.githubusercontent.com/cn-zhangyh/image/main/img/202204141220847.png",alt:"image-20220412232932231"}}),t._v(" "),a("h4",{attrs:{id:"seccomp内核支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seccomp内核支持"}},[t._v("#")]),t._v(" Seccomp内核支持")]),t._v(" "),a("p",[a("code",[t._v("Seccomp（Secure computing mode） 是一个 Linux 内核安全模块")]),t._v("，可用于应用进程允许使用的系统调用。 容器实际上是宿主机上运行的一个进程，共享宿主机内核，如果所有容器都具有任何系统调用的能力，那么容器如果被 入侵，就很轻松绕过容器隔离更改宿主机系统权限或者进入宿主 机。 这就可以使用Seccomp机制限制容器系统调用，有效减少攻击面。")]),t._v(" "),a("blockquote",[a("p",[t._v("Linux发行版内置："),a("code",[t._v("CentOS、Ubuntu")])])]),t._v(" "),a("p",[t._v("Seccomp在Kubernetes 1.3版本引入，在1.19版本成为GA版本，因此K8s中使用Seccomp可以通过以下两种方式：")]),t._v(" "),a("p",[t._v("1.19版本+")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("seccomp\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("seccompProfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Localhost\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("localhostProfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <profile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod所在宿主机上策略文件名，默认目录：/var/lib/kubelet/seccomp")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("h4",{attrs:{id:"禁止容器使用chmod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#禁止容器使用chmod"}},[t._v("#")]),t._v(" 禁止容器使用chmod")]),t._v(" "),a("ul",[a("li",[t._v("在/var/lib/kubelet/的目录下创建seccomp目录")]),t._v(" "),a("li",[t._v("编写chmod.json文件")]),t._v(" "),a("li",[a("strong",[t._v("seccomp基本配置文件包括三个元素：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("defaultAction")]),t._v("：在syscalls部分未定义的任何 系统调用默认动作为允许")]),t._v(" "),a("li",[a("code",[t._v("syscalls")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("names")]),t._v(" 系统调用名称，可以换行写多个")]),t._v(" "),a("li",[a("code",[t._v("SCMP_ACT_ERRNO")]),t._v(" 阻止系统调用")])])])])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# mkdir /var/lib/kubelet/seccomp\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("# vi /var/lib/kubelet/seccomp/chmod.json\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"defaultAction"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SCMP_ACT_ALLOW"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"syscalls"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"names"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chmod"')]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"action"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SCMP_ACT_ERRNO"')]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("创建Pod测试，chmod命令不能使用：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@master01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat pod.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nodeName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master01\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("seccompProfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Localhost\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("localhostProfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" chmod.json\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);